{"version":3,"file":"useChartViewport-634ea088.js","sources":["../../src/hooks/PRIVATE_useChartViewport/utils.ts","../../src/hooks/PRIVATE_useChartViewport/useChartViewport.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension } from '../../utils/UNSAFE_visTypes/common';\nimport { Scale } from '../../utils/UNSAFE_visTypes/chart';\nexport function getAxisBoundsByDelta(\n  xViewportExtent: { viewportMin: number; viewportMax: number },\n  xAxisExtent: { min: number; max: number },\n  yViewportExtent: { viewportMin: number; viewportMax: number },\n  yAxisExtent: { min: number; max: number },\n  xScale: Scale,\n  yScale: Scale,\n  xMin: number,\n  xMax: number,\n  yMin: number,\n  yMax: number,\n  isRtl: boolean,\n  isHoriz: boolean\n) {\n  const { viewportMin: xViewportMin, viewportMax: xViewportMax } = xViewportExtent;\n  const { min: xAxisMin, max: xAxisMax } = xAxisExtent;\n  const { viewportMin: yViewportMin, viewportMax: yViewportMax } = yViewportExtent;\n  const { min: yAxisMin, max: yAxisMax } = yAxisExtent;\n  const deltas = convertToAxisCoord(xMin, xMax, yMin, yMax, isRtl, isHoriz);\n  const xExtents = getAxisMinMaxByDelta(\n    xViewportMin,\n    xViewportMax,\n    xAxisMin,\n    xAxisMax,\n    xScale,\n    deltas['xMin'],\n    deltas['xMax']\n  );\n  const yExtents = getAxisMinMaxByDelta(\n    yViewportMin,\n    yViewportMax,\n    yAxisMin,\n    yAxisMax,\n    yScale,\n    deltas['yMin'],\n    deltas['yMax']\n  );\n\n  return { xExtents, yExtents };\n}\n\nexport function convertToAxisCoord(\n  xMin: number,\n  xMax: number,\n  yMin: number,\n  yMax: number,\n  isRtl: boolean,\n  isHoriz: boolean\n) {\n  const axisCoord: Record<string, any> = {};\n  if (isHoriz) {\n    axisCoord['xMin'] = yMin;\n    axisCoord['xMax'] = yMax;\n    axisCoord['yMin'] = isRtl ? xMax : xMin;\n    axisCoord['yMax'] = isRtl ? xMin : xMax;\n  } else {\n    axisCoord['xMin'] = isRtl ? xMax : xMin;\n    axisCoord['xMax'] = isRtl ? xMin : xMax;\n    axisCoord['yMin'] = yMax;\n    axisCoord['yMax'] = yMin;\n  }\n  return axisCoord;\n}\n\nexport function getAxisMinMaxByDelta(\n  viewportMin: number,\n  viewportMax: number,\n  globalMin: number,\n  globalMax: number,\n  axisScale: Scale,\n  minDelta: number,\n  maxDelta: number\n) {\n  const minDeltaVal = axisScale.invert(minDelta) - axisScale.invert(0);\n  const maxDeltaVal = axisScale.invert(maxDelta) - axisScale.invert(0);\n\n  let weight = 1;\n  const newExtent = viewportMax + maxDeltaVal - (viewportMin + minDeltaVal);\n  const minExtent = 1; //axisInfo.getMinExtent();\n  if (minDelta != maxDelta && newExtent < minExtent)\n    weight = (viewportMax - viewportMin - minExtent) / (minDeltaVal - maxDeltaVal);\n\n  viewportMin += minDeltaVal * weight;\n  viewportMax += maxDeltaVal * weight;\n\n  // Limit to global min/max\n  if (viewportMax - viewportMin >= globalMax - globalMin) {\n    viewportMin = globalMin;\n    viewportMax = globalMax;\n  } else if (viewportMin < globalMin) {\n    viewportMax += globalMin - viewportMin;\n    viewportMin = globalMin;\n  } else if (viewportMax > globalMax) {\n    viewportMin -= viewportMax - globalMax;\n    viewportMax = globalMax;\n  }\n\n  return { viewportMin, viewportMax };\n}\n\nexport function getAxisMinMaxDrag(\n  offsetX: number,\n  offsetY: number,\n  plotAreaSpace: Dimension,\n  xViewportExtent: { viewportMin: number; viewportMax: number },\n  xAxisExtent: { min: number; max: number },\n  isHoriz: boolean,\n  isRtl: boolean\n) {\n  const deltaX = isRtl ? plotAreaSpace.width - offsetX : offsetX - plotAreaSpace.x;\n  const deltaY = offsetY - plotAreaSpace.y;\n  const deltaV = xViewportExtent.viewportMax - xViewportExtent.viewportMin;\n  const delta =\n    (isHoriz ? deltaY : deltaX) *\n    ((xAxisExtent.max - xAxisExtent.min) / (isHoriz ? plotAreaSpace.height : plotAreaSpace.width));\n  let xMin = delta - deltaV / 2;\n  let xMax = delta + deltaV / 2;\n\n  if (xMin < xAxisExtent.min) {\n    xMin = xAxisExtent.min;\n    xMax = xMin + deltaV;\n  }\n\n  if (xMax > xAxisExtent.max) {\n    xMin = xAxisExtent.max - deltaV;\n    xMax = xAxisExtent.max;\n  }\n\n  return {\n    xMin,\n    xMax\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getElementData } from '#utils/UNSAFE_visUtils';\nimport { Ref, useRef } from 'preact/hooks';\nimport { Scale } from '../../utils/UNSAFE_visTypes/chart';\nimport { getAxisBoundsByDelta, getAxisMinMaxDrag } from './utils';\nimport { usePinch } from '#PRIVATE_TimeComponent/hooks/usePinch';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\ntype ViewportHandlerProps = {\n  rootRef: Ref<HTMLDivElement>;\n  width: number;\n  height: number;\n  plotAreaSpace: { x: number; y: number; width: number; height: number };\n  isRtl: boolean;\n  isHoriz: boolean;\n  xViewportExtent: { viewportMin: number; viewportMax: number };\n  yViewportExtent: { viewportMin: number; viewportMax: number };\n  xAxisExtent: { min: number; max: number };\n  yAxisExtent: { min: number; max: number };\n  yScale: Scale;\n  xScale: Scale;\n  zoomAndScroll: 'live' | 'off';\n  onViewportChange?: (detail: any) => void;\n};\n\nconst VIEWPORT_SCALE = 0.05;\n\nexport function useChartViewport({\n  plotAreaSpace,\n  xViewportExtent,\n  xAxisExtent,\n  yAxisExtent,\n  yViewportExtent,\n  yScale,\n  xScale,\n  onViewportChange,\n  isHoriz,\n  zoomAndScroll,\n  isRtl,\n  rootRef\n}: ViewportHandlerProps) {\n  const isPointerClicked = useRef(false);\n\n  const handleViewportChange = (delta: number, origin: { x: number; y: number }) => {\n    const deltaXMin = delta * (origin.x - plotAreaSpace.x);\n    const deltaXMax = -delta * (plotAreaSpace.x + plotAreaSpace.width - origin.x);\n    const deltaYMin = delta * (origin.y - plotAreaSpace.y);\n    const deltaYMax = -delta * (plotAreaSpace.y + plotAreaSpace.height - origin.y);\n    const extents = getAxisBoundsByDelta(\n      xViewportExtent,\n      xAxisExtent,\n      yViewportExtent,\n      yAxisExtent,\n      xScale,\n      yScale,\n      deltaXMin,\n      deltaXMax,\n      deltaYMin,\n      deltaYMax,\n      isRtl,\n      isHoriz\n    );\n    onViewportChange?.({\n      xMin: extents.xExtents.viewportMin,\n      yMin: extents.yExtents.viewportMin,\n      xMax: extents.xExtents.viewportMax,\n      yMax: extents.yExtents.viewportMax\n    });\n  };\n\n  const pinchProps = usePinch({\n    captureTargetRef: rootRef,\n    onPinchZoomChange: ({ delta, origin }) => {\n      const d = (isHoriz ? 1 : -1) * -1 * delta * VIEWPORT_SCALE;\n      handleViewportChange(d, origin);\n    }\n  });\n\n  pinchProps.onPointerOut = undefined;\n\n  const onWheel = (event: WheelEvent) => {\n    const delta = (isHoriz ? 1 : -1) * event.deltaY * VIEWPORT_SCALE;\n    handleViewportChange(delta, { x: event.offsetX, y: event.offsetY });\n    event.preventDefault();\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const key = event.key;\n    const zoomIn = key === '+' || key === '=';\n    const zoomOut = key === '-' || key === '_';\n\n    if (!zoomIn && !zoomOut) {\n      return;\n    }\n    const zoomRatio = zoomIn ? 1.5 : 1 / 1.5;\n    const shiftRatio = (1 / zoomRatio - 1) / 2;\n\n    const deltaXMin = -1 * shiftRatio * plotAreaSpace.width;\n    const deltaXMax = shiftRatio * plotAreaSpace.width;\n    const deltaYMin = -1 * shiftRatio * plotAreaSpace.height;\n    const deltaYMax = shiftRatio * plotAreaSpace.height;\n\n    const extents = getAxisBoundsByDelta(\n      xViewportExtent,\n      xAxisExtent,\n      yViewportExtent,\n      yAxisExtent,\n      xScale,\n      yScale,\n      deltaXMin,\n      deltaXMax,\n      deltaYMin,\n      deltaYMax,\n      isRtl,\n      isHoriz\n    );\n    onViewportChange?.({\n      xMin: extents.xExtents.viewportMin,\n      yMin: extents.yExtents.viewportMin,\n      xMax: extents.xExtents.viewportMax,\n      yMax: extents.yExtents.viewportMax\n    });\n  };\n\n  const onPointerDown = (event: PointerEvent) => {\n    const obj = getElementData(rootRef, event.target as HTMLElement);\n    if (obj && obj['ojObject'] === 'scrollBar') {\n      isPointerClicked.current = true;\n      (event.target as HTMLElement).setPointerCapture(event.pointerId);\n\n      const { xMin, xMax } = getAxisMinMaxDrag(\n        event.offsetX,\n        event.offsetY,\n        plotAreaSpace,\n        xViewportExtent,\n        xAxisExtent,\n        isHoriz,\n        isRtl\n      );\n\n      onViewportChange?.({\n        xMin,\n        yMin: yViewportExtent.viewportMin,\n        xMax,\n        yMax: yViewportExtent.viewportMax\n      });\n    }\n  };\n\n  const onPointerUp = () => {\n    isPointerClicked.current = false;\n  };\n\n  const onPointerMove = (event: PointerEvent) => {\n    if (!isPointerClicked.current) {\n      return;\n    }\n\n    const obj = getElementData(rootRef, event.target as HTMLElement);\n    if (obj && obj['ojObject'] === 'scrollBar') {\n      const { xMin, xMax } = getAxisMinMaxDrag(\n        event.offsetX,\n        event.offsetY,\n        plotAreaSpace,\n        xViewportExtent,\n        xAxisExtent,\n        isHoriz,\n        isRtl\n      );\n\n      onViewportChange?.({\n        xMin,\n        yMin: yViewportExtent.viewportMin,\n        xMax,\n        yMax: yViewportExtent.viewportMax\n      });\n    }\n  };\n  return onViewportChange && zoomAndScroll === 'live'\n    ? mergeProps({ onWheel, onKeyDown, onPointerMove, onPointerDown, onPointerUp }, pinchProps)\n    : {};\n}\n"],"names":[],"mappings":"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"}