{"version":3,"file":"CheckboxRadioField-c7c4643e.js","sources":["../../src/PRIVATE_CheckboxRadioField/useCheckboxRadioField.ts","../../src/PRIVATE_CheckboxRadioField/CheckboxRadioField.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useMessageSeverity } from '../hooks/PRIVATE_useMessageSeverity';\nimport { merge } from '../utils/UNSAFE_stringUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { InlineUserAssistance } from '../UNSAFE_UserAssistance';\n\ntype UseCheckboxRadioFieldProps = {\n  ariaDescribedBy?: string;\n  baseId: string;\n  hasValue?: boolean;\n  hasTopUserAssistance?: boolean;\n  hasBottomUserAssistance?: boolean;\n  isFocused?: boolean; // TODO: check if this is needed\n  isReadonly?: boolean;\n  isRequired?: boolean;\n  isDisabled?: boolean;\n  label: string;\n  labelEdge?: 'none' | 'top' | 'start' | 'inside';\n  styleVariant?: 'default' | 'embedded'; // TODO: check if this is needed\n  messages?: ComponentProps<typeof InlineUserAssistance>['messages'];\n  parentComponentVariant: 'radioSet' | 'checkboxSet';\n};\n\ntype GroupProps = {\n  groupProps: {\n    'aria-describedby'?: HTMLAttributesSignalExcluded['aria-describedby'];\n    'aria-labelledby'?: HTMLAttributesSignalExcluded['aria-labelledby'];\n    'aria-label'?: HTMLAttributesSignalExcluded['aria-label'];\n    'aria-required'?: HTMLAttributesSignalExcluded['aria-required'];\n    'aria-invalid'?: HTMLAttributesSignalExcluded['aria-invalid'];\n    'aria-readonly'?: HTMLAttributesSignalExcluded['aria-readonly'];\n    'aria-disabled'?: HTMLAttributesSignalExcluded['aria-disabled'];\n    id: HTMLAttributesSignalExcluded['id'];\n  };\n  labelProps: {\n    forId: string;\n    id: string;\n    isRequiredShown?: boolean;\n  };\n  topUserAssistanceProps?: {\n    id: string;\n    variant: 'reflow';\n  };\n  bottomUserAssistanceProps?: {\n    id: string;\n    isRequiredShown: boolean;\n  };\n  readonlyId?: string;\n};\n\nexport function useCheckboxRadioField({\n  ariaDescribedBy,\n  baseId,\n  hasValue,\n  hasTopUserAssistance,\n  hasBottomUserAssistance,\n  isReadonly,\n  isRequired = false,\n  isDisabled,\n  label,\n  labelEdge,\n  messages,\n  parentComponentVariant\n}: UseCheckboxRadioFieldProps): GroupProps {\n  const optionsGroupId = `${baseId}-group`;\n  const labelId = `${baseId}-label`;\n  const topUaId = hasTopUserAssistance ? `${baseId}-top-ua` : undefined;\n  const bottomUaId = hasBottomUserAssistance ? `${baseId}-bottom-ua` : undefined;\n  const readonlyId = isReadonly ? `${baseId}-readonly` : undefined;\n  const ariaLabel = label && label.length > 0 && labelEdge === 'none' ? label : undefined;\n  const ariaLabelledBy = ariaLabel ? undefined : labelId;\n  const isRadioSet = parentComponentVariant === 'radioSet';\n  const highestMessageSeverity = useMessageSeverity(messages);\n  const hasErrorMessage = highestMessageSeverity === 'error';\n\n  return {\n    groupProps: {\n      'aria-describedby': merge([topUaId, bottomUaId, readonlyId, ariaDescribedBy]),\n      ...(isRadioSet && { 'aria-required': isRequired }),\n      ...(ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy }),\n      ...(ariaLabel && { 'aria-label': ariaLabel }),\n      ...(isReadonly && isRadioSet && { 'aria-readonly': true }),\n      ...(hasErrorMessage && { 'aria-invalid': true }),\n      ...(isDisabled && { 'aria-disabled': true }),\n      id: optionsGroupId\n    },\n    labelProps: {\n      forId: optionsGroupId,\n      id: labelId\n    },\n    // TOP UA is assistive text and help link/text\n    ...(hasTopUserAssistance && {\n      topUserAssistanceProps: {\n        id: topUaId as string,\n        // Use reflow variant so that top UA doesn't have min height\n        variant: 'reflow'\n      }\n    }),\n    // Bottom UA is required indicator or messages\n    ...(hasBottomUserAssistance && {\n      bottomUserAssistanceProps: {\n        id: bottomUaId as string,\n        isRequiredShown: !!isRequired && !hasValue\n      }\n    }),\n    ...(isReadonly && {\n      readonlyId\n    })\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, ComponentProps, Ref } from 'preact';\nimport { forwardRef, useImperativeHandle, useRef } from 'preact/compat';\n\nimport { FocusableHandle } from '../hooks/UNSAFE_useFocusableTextField';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { FlexboxProps } from '../utils/UNSAFE_interpolations/flexbox';\nimport { Size } from '../utils/UNSAFE_size';\nimport { BundleType } from '../resources/nls/bundle';\nimport { AriaAttributesSignalExcluded } from '#utils/UNSAFE_attributeUtils';\n\nimport { Flex } from '../UNSAFE_Flex';\nimport { Label } from '../UNSAFE_Label';\n\nimport {\n  InlineHelp,\n  InlineUserAssistance,\n  InlineUserAssistanceContainer,\n  UserAssistanceDensityType\n} from '../UNSAFE_UserAssistance';\nimport { useCheckboxRadioField } from './useCheckboxRadioField';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\n\nimport { xUnits } from '../UNSAFE_Theme';\n\nimport { topUAContainerStyles } from './CheckboxRadioFieldStyles.css';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { CheckboxRadioContext } from './CheckboxRadioContext';\nimport { layoutSpanStyles, LayoutColumnSpan } from '../utils/UNSAFE_styles/Layout';\nimport { type TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype AriaProps = Pick<AriaAttributesSignalExcluded, 'aria-describedby'>;\n\ntype Props = TestIdProps &\n  AriaProps & {\n    /**\n     * Text to provide guidance to help the user understand what data to enter.\n     */\n    assistiveText?: InlineUserAssistanceProps['assistiveText'];\n    /**\n     * baseId, used to generate other element IDs.\n     */\n    baseId: string;\n    /**\n     * <RadioItem /> or <CheckboxItem />\n     */\n    children: ComponentChildren;\n    /**\n     * Specifies how many columns to span in a FormLayout with direction === 'row'\n     */\n    columnSpan?: LayoutColumnSpan;\n    /**\n     * layout direction of the children elements\n     */\n    direction?: FlexboxProps['direction'];\n    /**\n     * Value of the radio option.\n     */\n    hasValue?: boolean;\n    /**\n     * Help source URL associated with the component.\n     */\n    helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n    /**\n     * Custom text to be rendered for the <code>helpSourceLink</code>.\n     */\n    helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n    /**\n     * Specifies if the radio group is disabled.\n     */\n    isDisabled?: boolean;\n    /**\n     * Specifies if the radio group is read-only.\n     */\n    isReadonly?: boolean;\n    /**\n     * Specifies whether the radio group requires a selection to be made.\n     */\n    isRequired?: boolean;\n    /**\n     * Label text for the group of radio buttons.\n     */\n    label: string;\n    /**\n     * Specifies where the label is positioned relative to the field.\n     */\n    labelEdge?: 'none' | 'top' | 'start' | 'inside';\n    /**\n     * Specifies the width of the label when <code>labelEdge</code> is <code>\"start\"</code>.\n     */\n    labelStartWidth?: Size;\n    /**\n     * Messages to show on screen that are associated with the component.\n     */\n    messages?: InlineUserAssistanceProps['messages'];\n\n    role?: 'radiogroup' | 'group';\n    /**\n     * Specifies the density of the user assistance presentation.  It can be set to:\n     * <ul>\n     * <li><code>'reflow'</code>: Show inline. Layout will reflow when text is displayed.</li>\n     * <li><code>'efficient'</code>: Show inline and reserve space to prevent layout reflow when user\n     * assistance text is displayed.</li>\n     * <li><code>'compact'</code>: Show inline and reserve space to prevent layout reflow when user\n     * assistance text is displayed.</li>\n     * </ul>\n     */\n    userAssistanceDensity?: UserAssistanceDensityType;\n\n    parentComponentVariant: 'radioSet' | 'checkboxSet';\n  };\n\nexport const CheckboxRadioField = forwardRef(\n  (\n    {\n      'aria-describedby': ariaDescribedBy,\n      assistiveText,\n      baseId,\n      direction = 'column',\n      columnSpan = 1,\n      hasValue,\n      helpSourceLink,\n      helpSourceText,\n      isDisabled,\n      isReadonly,\n      isRequired,\n      label,\n      labelEdge,\n      labelStartWidth = '33%',\n      parentComponentVariant,\n      messages,\n      userAssistanceDensity,\n      role,\n      children,\n      testId\n    }: Props,\n    ref: Ref<FocusableHandle> = null\n  ) => {\n    const testIdProps = useTestId(testId);\n    const UAtestId = `${testId}-inline-user-assistance`;\n    const UAtestIdTop = testId ? `${UAtestId}-top` : undefined;\n    const UAtestIdBottom = testId ? `${UAtestId}-bottom` : undefined;\n    const hasTopUserAssistance =\n      !isDisabled && !isReadonly && (!!assistiveText || (!!helpSourceLink && !!helpSourceText));\n    // we still render <InlineUserAssistance/> if density is 'efficient' or 'compact' to save space,\n    // even though we don't render user assistance for disabled or readonly fields\n    const hasBottomUserAssistance = !isDisabled && !isReadonly;\n    const groupRef = useRef<HTMLDivElement>(null);\n\n    const {\n      groupProps,\n      labelProps,\n      topUserAssistanceProps,\n      bottomUserAssistanceProps,\n      readonlyId\n    } = useCheckboxRadioField({\n      ariaDescribedBy,\n      baseId,\n      isRequired,\n      isReadonly,\n      isDisabled,\n      label,\n      labelEdge,\n      messages,\n      hasValue,\n      hasTopUserAssistance,\n      hasBottomUserAssistance,\n      parentComponentVariant\n    });\n\n    const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n    const readonlyLabel = translations.formControl_readOnly();\n    const isRadioSet = parentComponentVariant === 'radioSet';\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (!isDisabled) {\n          const inputChildren = groupRef.current?.querySelectorAll<HTMLInputElement>('input') ?? [];\n          const selectedChild = Array.from(inputChildren).find((child) => child.checked);\n\n          if (selectedChild) {\n            selectedChild.focus();\n          } else {\n            inputChildren[0].focus();\n          }\n        }\n      },\n      blur: () => {\n        if (groupRef.current?.contains(document.activeElement)) {\n          (document.activeElement as HTMLElement).blur();\n        }\n      }\n    }));\n\n    // the props from the hook are used for focus management on the radioset variant to allow for arrow navigation\n    // while checkboxset uses tabbing\n    const [isFocusRingShown, focusRingProps] = useCollectionFocusRing(\n      groupRef,\n      isRadioSet ? ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft'] : ['Tab']\n    );\n\n    const content = (\n      <>\n        {hasTopUserAssistance && (\n          <div\n            id={`${baseId}-top-ua-container`}\n            class={labelEdge === 'start' ? topUAContainerStyles.start : topUAContainerStyles.top}>\n            <InlineUserAssistanceContainer {...topUserAssistanceProps} testId={UAtestIdTop}>\n              <InlineHelp\n                assistiveText={assistiveText}\n                sourceLink={helpSourceLink}\n                sourceText={helpSourceText}\n              />\n            </InlineUserAssistanceContainer>\n          </div>\n        )}\n        <Flex\n          direction={direction}\n          {...(direction === 'row' && { gap: [0, xUnits(8) as Size], wrap: 'wrap' })}>\n          <CheckboxRadioContext.Provider value={{ isFocusRingShown }}>\n            {children}\n          </CheckboxRadioContext.Provider>\n        </Flex>\n        {hasBottomUserAssistance ? (\n          <InlineUserAssistance\n            {...bottomUserAssistanceProps}\n            requiredAlignment=\"start\"\n            messages={messages}\n            userAssistanceDensity={userAssistanceDensity === 'reflow' ? 'reflow' : 'efficient'}\n            testId={UAtestIdBottom}\n          />\n        ) : userAssistanceDensity === 'reflow' ? undefined : (\n          /* save space for user assistance if density is 'efficient' or 'compact', even though we don't\n             render user assistance for disabled or readonly fields */\n          <InlineUserAssistance\n            id={bottomUserAssistanceProps?.id}\n            userAssistanceDensity=\"efficient\"\n            testId={UAtestIdBottom}\n          />\n        )}\n      </>\n    );\n    // The top level element needs the column span class on it.\n    const classes = layoutSpanStyles.layoutSpanColumn[columnSpan];\n\n    return (\n      <div\n        role={role}\n        ref={groupRef}\n        class={classes}\n        {...groupProps}\n        {...focusRingProps}\n        {...testIdProps}>\n        {labelEdge === 'none' && content}\n        {labelEdge !== 'none' && (\n          <LabelValueLayout\n            parentComponentVariant={parentComponentVariant}\n            hasTopUserAssistance={hasTopUserAssistance}\n            label={\n              <Label\n                {...labelProps}\n                variant={labelEdge}\n                userAssistanceDensity=\"efficient\"\n                parentComponentVariant={parentComponentVariant}>\n                {label}\n              </Label>\n            }\n            labelEdge={labelEdge}\n            labelStartWidth={labelStartWidth}>\n            {content}\n          </LabelValueLayout>\n        )}\n        {isReadonly && (\n          <HiddenAccessible id={readonlyId} isHidden={true}>\n            {readonlyLabel}\n          </HiddenAccessible>\n        )}\n      </div>\n    );\n  }\n);\n"],"names":["_jsxs","_Fragment","_jsx"],"mappings":"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"}