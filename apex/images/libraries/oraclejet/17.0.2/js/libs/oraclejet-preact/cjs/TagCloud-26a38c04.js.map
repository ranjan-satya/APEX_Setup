{"version":3,"file":"TagCloud-26a38c04.js","sources":["../../src/UNSAFE_TagCloud/tagCloudNavUtils.ts","../../src/UNSAFE_TagCloud/tagCloudUtils.ts","../../src/UNSAFE_TagCloud/TagCloudItem.tsx","../../src/UNSAFE_TagCloud/useTagCloudDatatip.ts","../../src/UNSAFE_TagCloud/useTagCloudContextMenu.ts","../../src/UNSAFE_TagCloud/TagCloudWithDimensions.tsx","../../src/UNSAFE_TagCloud/TagCloud.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  ItemActionDetail,\n  ItemFocusDetail,\n  ItemHoverDetail,\n  ItemInfo,\n  TagCloudItemData\n} from './tagCloud.type';\n\n/**\n * Returns the item based on item info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getItem<K, D extends TagCloudItemData<K>>(itemInfo: ItemInfo, items: D[]) {\n  const { idx } = itemInfo;\n  return items[idx];\n}\n\nexport function getItemPadding(height: number | undefined) {\n  return height != null ? 0.15 * height : 0;\n}\n\n/**\n * Returns the next item's info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getNextItemInfo<K>(itemInfo: ItemInfo, items: TagCloudItemData<K>[]) {\n  let idx = itemInfo.idx;\n\n  idx = Math.min(items.length - 1, idx + 1);\n  return { idx, id: items[idx].id };\n}\n\n/**\n * Returns the previous item's info in a tag cloud.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getPrevItemInfo<K>(itemInfo: ItemInfo, items: TagCloudItemData<K>[]) {\n  let idx = itemInfo.idx;\n\n  idx = Math.max(0, idx - 1);\n  return { idx, id: items[idx].id };\n}\n\n/**\n * Returns utils functions for navigation in a tag cloud.\n * @param items\n * @returns\n */\nexport function getTagCloudNavUtils<K, D extends TagCloudItemData<K>>(items: D[]) {\n  return {\n    getItem: (itemInfo: ItemInfo) => {\n      return getItem(itemInfo, items);\n    },\n    getDetailFromInfo: (\n      itemInfo?: ItemInfo\n    ): ItemFocusDetail<K, D> | ItemHoverDetail<K, D> | ItemActionDetail<K, D> => {\n      if (!itemInfo) {\n        return { id: undefined, data: undefined };\n      }\n      const item = getItem(itemInfo, items);\n      return { id: item.id, data: item };\n    },\n    getPrevItemInfo: (itemInfo: ItemInfo) => {\n      return getPrevItemInfo(itemInfo, items);\n    },\n    getNextItemInfo: (itemInfo: ItemInfo) => {\n      return getNextItemInfo(itemInfo, items);\n    }\n  };\n}\n","import { ItemInfo, TagCloudItemData } from './tagCloud.type';\nimport { getContrastingTextColor } from '../utils/PRIVATE_colorUtils/colorUtils';\nimport { getUnion, intersects, type Rect } from '../utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { BundleType } from '../resources/nls/bundle';\nimport { TagItemProps } from './TagCloudItem';\nimport { GetTextDimensionsType } from '../hooks/PRIVATE_useTextDimensions';\nimport { getItemPadding } from './tagCloudNavUtils';\nimport { DatatipType } from './tagCloud.type';\nimport { cancelEvent } from '#utils/UNSAFE_visUtils';\nimport { generateAriaLabel } from '#utils/UNSAFE_visUtils/accUtils';\n\nconst BOTTOM_PADDING = 20;\nconst DEFAULT_FONT_SIZE = 12;\n\n/**\n * helper layout functions for font size calc\n * @param {number} minValue\n * @param {number} maxValue\n * @param {number} range\n * @return {number}\n */\nexport const fontSizeCalc = (value: number, minValue: number, maxValue: number, range: number) => {\n  return minValue === maxValue\n    ? DEFAULT_FONT_SIZE\n    : DEFAULT_FONT_SIZE +\n        Math.ceil((((range - 1) * (value - minValue)) / (maxValue - minValue)) * DEFAULT_FONT_SIZE);\n};\n\n/**\n * returns initial font size arr of items for layout\n * @param {Array} items\n * @return {Array}\n */\nexport function getInitialFontSize<K>(items: TagCloudItemData<K>[]): TagItemProps<K>[] {\n  const fontSizeArr = [];\n  let minValue = Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n  // First iterate thru data items to find the min and max values\n  for (let i = 0; i < items.length; i++) {\n    minValue = Math.min(minValue, items[i].value);\n    maxValue = Math.max(maxValue, items[i].value);\n  }\n\n  for (let i = 0; i < items.length; i++) {\n    const x = fontSizeCalc(items[i].value, minValue, maxValue, 3);\n    fontSizeArr.push({ ...items[i], fontSize: x });\n  }\n  return fontSizeArr;\n}\n\n/**\n * Calculates the line breaks for rectangular layout\n * @param {Array} arDims an array of Dimension objects for each tag\n * @param {number} width the available width\n * @return {Array} an array containing the starting tag index for each line in the layout\n * @private\n */\nexport function calculateLineBreaks(arDims: Rect[], width: number) {\n  const hPadding = 2;\n  const lines = [0];\n  let curWidth = arDims[0].w + hPadding;\n  if (arDims.length > 1) {\n    for (let i = 1; i < arDims.length; i++) {\n      if (curWidth + arDims[i].w > width) {\n        lines.push(i);\n        curWidth = 0;\n      }\n      curWidth += arDims[i].w + hPadding;\n    }\n  }\n  return lines;\n}\n\n/**\n * Returns the items position and font size in cloud layout.\n * @param items\n * @param tagcloudH\n * @param tagcloudW\n */\nexport function getCloudLayout<K>(\n  items: TagCloudItemData<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: GetTextDimensionsType\n): TagItemProps<K>[] {\n  const positions = [];\n  const steps = 180;\n  let xrStep = 10 / steps;\n  let yrStep = 10 / steps;\n  if (tagcloudW > tagcloudH) xrStep *= tagcloudW / tagcloudH;\n  else yrStep *= tagcloudH / tagcloudW;\n  const thetaStep = (2 * Math.PI) / steps;\n  let bounds = null;\n  let maxFontSize = 0;\n  const cosCache = [];\n  const sinCache = [];\n  const tagWordData = [];\n  const tagCloudX = 0; // availSpace.x\n  const tagCloudY = 0; // availSpace.y\n\n  const initialFontItems = getInitialFontSize(items);\n\n  for (let i = 0; i < initialFontItems.length; i++) {\n    let placed = false;\n    let step = 0;\n    let stepIncrement = 4;\n    const tag = initialFontItems[i];\n    const tagDimensions = getTextDimensions(tag.label, {\n      fontSize: tag.fontSize + 'px'\n    });\n    maxFontSize = Math.max(maxFontSize, tag.fontSize);\n    let lastCollisionIndex = -1;\n    while (!placed) {\n      // cache sin/cos values because Chrome is slow at these calculations\n      const lookup = step % steps;\n      if (cosCache[lookup] === undefined) cosCache[lookup] = Math.cos(step * thetaStep);\n      if (sinCache[lookup] === undefined) sinCache[lookup] = Math.sin(step * thetaStep);\n      const _x = xrStep * step * cosCache[lookup];\n      const _y = yrStep * step * sinCache[lookup];\n      const padding = getItemPadding(tagDimensions.height);\n      const tagCloudDiv = {\n        x: _x,\n        y: _y,\n        w: tagDimensions.width + 2 * padding,\n        h: tagDimensions.height + 2 * padding\n      }; // this needs to change\n      placed = true;\n      if (lastCollisionIndex !== -1) {\n        if (intersects(positions[lastCollisionIndex], tagCloudDiv)) {\n          placed = false;\n        }\n      }\n\n      if (placed) {\n        for (let j = 0; j < i; j++) {\n          if (intersects(positions[j], tagCloudDiv)) {\n            lastCollisionIndex = j;\n            placed = false;\n            break;\n          }\n        }\n      }\n\n      if (placed) {\n        if (!bounds) {\n          bounds = tagCloudDiv;\n        } else {\n          bounds = getUnion(bounds, tagCloudDiv);\n        }\n        lastCollisionIndex = -1;\n        positions[i] = tagCloudDiv;\n        tag.x = _x; // tag.setX(x)\n        tag.y = _y; // tag.setY(-tagCloudDiv.y + y);\n        tag.w = tagDimensions.width;\n        tag.h = tagDimensions.height;\n      }\n      // Adjust stepIncrement so we check smaller degrees as spiral loops out\n      if (step == 3600) {\n        // 20 loops\n        stepIncrement = 3;\n      } else if (step == 5400) {\n        // 30 loops\n        stepIncrement = 2;\n      } else if (step == 10800) {\n        // 60 loops\n        stepIncrement = 1;\n      }\n      step += stepIncrement;\n    }\n  }\n\n  if (bounds) {\n    const scale = Math.max(bounds.w / tagcloudW, bounds.h / tagcloudH);\n    const cx = bounds.x + bounds.w / 2;\n    const cy = bounds.y + bounds.h / 2;\n\n    for (let k = 0; k < initialFontItems.length; k++) {\n      let tagItemX;\n      const tagItem = initialFontItems[k];\n      if (!isRTL) {\n        tagItemX =\n          tagItem.x != null ? tagCloudX + tagItem.x / scale + (tagcloudW / 2 - cx / scale) : 0;\n      } else {\n        tagItemX =\n          tagItem.x != null ? tagCloudX - tagItem.x / scale - (tagcloudW / 2 - cx / scale) : 0;\n      }\n\n      const tagItemY =\n        tagItem.y != null ? tagCloudY + tagItem.y / scale + (tagcloudH / 2 - cy / scale) : 0;\n      const tagItemW = tagItem.w != null ? tagItem.w / scale : 0;\n      const tagItemH = tagItem.h != null ? tagItem.h / scale : 0;\n      const fontSize = tagItem.fontSize;\n      const tagItemFontSize = fontSize / scale;\n      tagWordData.push({\n        ...tagItem,\n        x: tagItemX,\n        y: tagItemY,\n        fontSize: tagItemFontSize,\n        w: tagItemW,\n        h: tagItemH\n      });\n    }\n  }\n  return tagWordData;\n}\n/**\n * Returns the items position and font size in rectangle layout.\n * @param items\n * @param tagcloudH\n * @param tagcloudW\n * @param isRTL\n * @param getTextDimensions\n */\nexport function getRectangleLayout<K>(\n  items: TagCloudItemData<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: GetTextDimensionsType\n) {\n  const tagWordData = [];\n  const arDims = [];\n  let maxWidth = 0;\n  let maxHeight = 0;\n  let maxFontSize = 0;\n  const vPadding = 2;\n  const margin = 0;\n  const tagCloudX = 0; // availSpace.x\n  const tagCloudY = 0; // availSpace.y\n\n  // initial items processing\n  const initialFontItems = getInitialFontSize(items);\n\n  // Get the unscaled dimensions\n  for (let i = 0; i < initialFontItems.length; i++) {\n    const tag = initialFontItems[i];\n    const tagDimensions = getTextDimensions(tag.label, {\n      fontSize: tag.fontSize + 'px'\n    });\n    maxWidth = Math.max(maxWidth, tagDimensions.width);\n    maxHeight = Math.max(maxHeight, tagDimensions.height);\n    maxFontSize = Math.max(maxFontSize, tag.fontSize);\n    arDims.push({\n      w: tagDimensions.width,\n      h: tagDimensions.height,\n      x: tagDimensions.x,\n      y: tagDimensions.y\n    });\n  }\n\n  // Iteratively calculate the ideal font scale\n  let minScale = 0;\n  let maxScale = (tagcloudW - 2 * margin) / maxWidth; // This is the max scale that can be applied before the longest word will no longer fit\n  let scale;\n  let arLines;\n  while (maxScale - minScale > 0.001) {\n    scale = (minScale + maxScale) / 2;\n    arLines = calculateLineBreaks(arDims, (tagcloudW - 2 * margin) / scale);\n    const h = arLines.length * (scale * maxHeight + vPadding) - vPadding;\n    if (h > tagcloudH - 2 * margin) {\n      maxScale = scale;\n    } else {\n      minScale = scale;\n    }\n  }\n\n  // Calculate final line breaks\n  scale = minScale;\n  arLines = calculateLineBreaks(arDims, (tagcloudW - 2 * margin) / scale);\n  arLines.push(initialFontItems.length);\n  for (let k = 0; k < arLines.length - 1; k++) {\n    const lineStart = arLines[k];\n    const lineEnd = arLines[k + 1];\n    let hPadding = 5;\n    let maxLineHeight = 0;\n    let justified = true;\n    if (lineEnd - lineStart > 1) {\n      let lineWidth = 0;\n      for (let j = lineStart; j < lineEnd; j++) {\n        lineWidth += arDims[j].w * scale;\n        maxLineHeight = Math.max(maxLineHeight, arDims[j].h * scale);\n      }\n      hPadding = (tagcloudW - 2 * margin - lineWidth) / (lineEnd - lineStart - 1);\n\n      if (k == arLines.length - 2) {\n        // Don't justify the last line unless flowing it with a gap of .5 * maxLineHeight fills more than\n        // 90% of the width\n        const flowPadding = 0.5 * maxLineHeight;\n        if (\n          flowPadding < hPadding &&\n          lineWidth + (lineEnd - lineStart) * flowPadding < 0.9 * (tagcloudW - 2 * margin)\n        ) {\n          hPadding = flowPadding;\n          justified = false;\n        }\n      }\n    }\n\n    const bottomY = margin + (k + 1) * (maxHeight * scale + vPadding) - vPadding;\n    let curX = margin;\n    for (let m = lineStart; m < lineEnd; m++) {\n      const tagLine = initialFontItems[m];\n      const fontSize = tagLine.fontSize;\n      const tagItemFontSize = fontSize * scale;\n      tagLine.fontSize = tagItemFontSize;\n      const tagDimensionsWidth = arDims[m].w * scale;\n      tagLine.y = tagCloudY + bottomY + arDims[m].y * scale - BOTTOM_PADDING;\n      if (justified && m === lineEnd - 1 && m !== lineStart) {\n        if (!isRTL) tagLine.x = tagCloudX + tagcloudW - tagDimensionsWidth - margin;\n        else tagLine.x = tagCloudX + tagDimensionsWidth + margin - tagcloudW;\n        // alignRight(tagLine);\n      } else {\n        // alignLeft(tagLine);\n        tagLine.x = tagCloudX + curX;\n        if (!isRTL) {\n          curX += arDims[m].w * scale + hPadding;\n        } else {\n          // tagLine.alignRight();\n          curX -= arDims[m].w * scale + hPadding;\n        }\n      }\n      tagWordData.push({ ...tagLine, w: tagDimensionsWidth, h: arDims[m].h * scale });\n    }\n  }\n  return tagWordData;\n}\n\n/**\n * Calls the right layout algorithm based on tagcloud type.\n * @param layout cloud or rectangle. cloud if not defined.\n * @param items\n * @param tagcloudW tagcloud width\n * @param tagcloudH tagcloud height\n * @param isRTL\n * @param getTextDimensions\n */\nexport function getLayout<K>(\n  layout: string | undefined,\n  items: TagCloudItemData<K>[],\n  tagcloudW: number,\n  tagcloudH: number,\n  isRTL: boolean,\n  getTextDimensions: GetTextDimensionsType\n) {\n  let layoutTagCloud;\n  if (layout === 'cloud' || !layout) {\n    layoutTagCloud = getCloudLayout(items, tagcloudW, tagcloudH, isRTL, getTextDimensions);\n  } else {\n    layoutTagCloud = getRectangleLayout(items, tagcloudW, tagcloudH, isRTL, getTextDimensions);\n  }\n  return layoutTagCloud;\n}\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param highlighted The set of highlighted item\n */\nexport function isItemHighlighted<K>(id: K, highlightedIds?: K[]) {\n  if (!highlightedIds) {\n    return;\n  }\n  if (highlightedIds.length === 0) {\n    return true;\n  }\n  return new Set(highlightedIds).has(id);\n}\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param selectedIds The set of highlighted item\n */\nexport function isItemSelected<K>(id: K, selectedIds?: K[]) {\n  if (!selectedIds || selectedIds.length === 0) {\n    return false;\n  }\n  return new Set(selectedIds).has(id);\n}\n\n/**\n * Returns the aria properties for the tag cloud.\n * @param isReadOnly { boolean } If the tag cloud is readonly.\n * @param accessibleLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getAriaProps(\n  translations: BundleType,\n  hasData?: boolean,\n  accessibleLabel?: string,\n  ariaDescribedBy?: string,\n  ariaLabelledBy?: string\n): {\n  'aria-label': HTMLAttributesSignalExcluded['aria-label'];\n  role: HTMLAttributesSignalExcluded['role'];\n  'aria-describedby': HTMLAttributesSignalExcluded['aria-describedby'];\n  'aria-labelledby': HTMLAttributesSignalExcluded['aria-labelledby'];\n} {\n  return {\n    'aria-label': `${accessibleLabel || ''} ${hasData ? '' : translations.vis_noData()}`,\n    role: 'application',\n    'aria-describedby': ariaDescribedBy,\n    'aria-labelledby': ariaLabelledBy\n  };\n}\n\n/**\n * Returns the aria properties for the tag cloud.\n * @param isReadOnly { boolean } If the tag cloud is readonly.\n * @param accessibleLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getItemAriaProps(\n  supportsSelection: boolean,\n  translations?: BundleType,\n  isSelected?: boolean,\n  accessibleLabel?: string,\n  role?: HTMLAttributesSignalExcluded['role']\n): {\n  'aria-label': HTMLAttributesSignalExcluded['aria-label'];\n  role: HTMLAttributesSignalExcluded['role'];\n} {\n  return {\n    'aria-label':\n      generateAriaLabel(translations!, accessibleLabel!, {\n        isSelected: !supportsSelection ? undefined : isSelected\n      }) || undefined,\n    role: role || 'img'\n  };\n}\n\n/**\n * Returns the item props for BaseTagCloudItem.\n * @param item The tagcloud item.\n * @param itemIdx The item index of the item.\n * @param supportsSelection Whether the tagcloud supports selection\n * @param isReadOnly Whether the tagcloud is readonly.\n * @param hoveredItem The info of the currently hovered item.\n * @param selectedIds The selected ids.\n * @param focusedItem The info of currently focused item.\n * @param highlightedIds The highlighted ids.\n * @param activeId The active Id\n */\nexport function getItemProps<K>(\n  item: TagCloudItemData<K>,\n  itemIdx: number,\n  supportsSelection: boolean,\n  isReadOnly: boolean,\n  hoveredItem?: ItemInfo,\n  selectedIds?: Array<K>,\n  focusedItem?: ItemInfo,\n  highlightedIds?: Array<K>,\n  activeId?: string\n) {\n  let isCurrent = false;\n  let style;\n  if (!isReadOnly) {\n    const isFocusedItem = itemIdx === focusedItem?.idx;\n    const isHoveredItem = itemIdx === hoveredItem?.idx;\n    isCurrent = !!(\n      (isFocusedItem && focusedItem?.isCurrent) ||\n      (isHoveredItem && hoveredItem?.isCurrent)\n    );\n  }\n  const isHighlighted = isItemHighlighted<K>(item.id, highlightedIds);\n  const isSelected = isItemSelected(item.id, selectedIds);\n\n  if (item.color) {\n    let color, backgroundColor, backgroundImage;\n\n    if (isSelected) {\n      backgroundColor = item.color;\n      color = getContrastingTextColor(backgroundColor);\n    }\n    // hovered and selection supported\n    else color = item.color;\n\n    style = {\n      color,\n      backgroundColor,\n      backgroundImage\n    };\n  } else if (!supportsSelection) {\n    style = {\n      backgroundColor: 'none'\n    };\n  }\n\n  return {\n    isCurrent,\n    isHighlighted: isHighlighted,\n    isSelected: isSelected,\n    isFocused: focusedItem ? hasFocusRing(focusedItem, itemIdx) : false,\n    key: item.id,\n    itemIdx,\n    style,\n    activeId: isCurrent ? activeId : undefined,\n    isReadOnly,\n    ...item\n  };\n}\n\n/**\n * Returns the text for the tag cloud datatip.\n * @param items The tag cloud items data.\n * @param focusedItem The item currently keyboard focused.\n * @param hoveredItem The item that is currently hovered.\n * @param datatip The datatip.\n */\nexport function getDatatipContent<D extends TagCloudItemData<number | string>>(\n  items: D[],\n  getItem: (itemInfo: ItemInfo, items: D[]) => D | undefined,\n  focusedItem: ItemInfo,\n  hoveredItem?: ItemInfo,\n  datatip?: DatatipType<D>\n) {\n  const activeItem = focusedItem.isCurrent\n    ? focusedItem\n    : hoveredItem?.isCurrent && hoveredItem.idx != null\n    ? hoveredItem\n    : undefined;\n\n  if (!activeItem) {\n    return {\n      content: undefined,\n      borderColor: undefined\n    };\n  }\n  const item = getItem(activeItem, items);\n  if (datatip && item) {\n    return datatip({ data: item });\n  }\n\n  return {\n    content: item?.accessibleLabel,\n    borderColor: undefined\n  };\n}\n\n/**\n * Returns the value of the data-oj-item-index attribute for a given element.\n * @param element The HTML element.\n */\nexport function getItemInfo(element: HTMLElement) {\n  const itemIdx = element.dataset['idx'];\n  if (itemIdx == null) return;\n\n  return {\n    idx: Number(itemIdx)\n  };\n}\n\n/**\n * Compares if two ItemInfo are equal\n * @param item1\n * @param item2\n * @returns\n */\nexport function isEqualItem(item1?: ItemInfo, item2?: ItemInfo) {\n  return item1?.idx === item2?.idx;\n}\n\n/**\n * Checks if the item is the currentItem and if the focus ring\n * is visible.\n * @param itemInfo ItemInfo\n * @param itemId Item index\n */\nexport function hasFocusRing(itemInfo: ItemInfo, itemIdx: number) {\n  if (!itemInfo.isFocusVisible) return false;\n  const { idx: idx } = itemInfo;\n\n  return idx === itemIdx;\n}\n\n/**\n * Returns KeyUp handler for Tagcloud.\n * @param triggerOnAction\n * @param updatefocusedItemInfo\n * @param focusedItemInfo\n * @returns\n */\nexport function getKeyUpHandler(\n  triggerOnAction: () => void,\n  updatefocusedItemInfo: (itemInfo: ItemInfo) => void,\n  focusedItemInfo: ItemInfo\n) {\n  return (event: KeyboardEvent) => {\n    const key = event.code;\n    switch (key) {\n      case 'Space': {\n        triggerOnAction();\n        cancelEvent(event);\n        break;\n      }\n      case 'Enter': {\n        triggerOnAction();\n        cancelEvent(event);\n        break;\n      }\n      case 'Tab': {\n        updatefocusedItemInfo({\n          ...focusedItemInfo,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { BundleType } from '../resources/nls/bundle';\nimport { getItemAriaProps } from './tagCloudUtils';\nimport { styles } from './themes/TagCloudStyles.css';\nimport { getItemPadding } from './tagCloudNavUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\nexport type TagItemProps<K> = {\n  id: K;\n  label: string;\n  accessibleLabel?: string;\n  value: number;\n  fontSize: number;\n  role?: HTMLAttributesSignalExcluded['role'];\n  itemIdx?: number;\n  supportsSelection?: boolean;\n  supportsAction?: boolean;\n  translations?: BundleType;\n  x?: number;\n  y?: number;\n  w?: number;\n  h?: number;\n  isHighlighted?: boolean;\n  isSelected?: boolean;\n  isCurrent?: boolean;\n  isFocused?: boolean;\n  isReadonly?: boolean;\n  class?: string;\n  style?: JSX.CSSProperties;\n  activeId?: string;\n};\n\nconst TagCloudItem = <K,>(props: TagItemProps<K>) => {\n  const {\n    itemBase,\n    itemStyle,\n    hoverUnselectedItemStyle,\n    selectedItemStyle,\n    hoveredSelectedItemStyle,\n    dimmedItemStyle,\n    interactiveCursorStyle\n  } = styles;\n  const isNotDimmed = props.isHighlighted || props.isHighlighted == null; // null means no highlighting feature\n\n  const itemClasses = classNames([\n    itemBase,\n    props.isSelected ? selectedItemStyle : itemStyle,\n    props.isCurrent\n      ? props.isSelected\n        ? hoveredSelectedItemStyle\n        : props.isFocused || props.supportsSelection\n        ? hoverUnselectedItemStyle\n        : ''\n      : '',\n    isNotDimmed ? '' : dimmedItemStyle,\n    props.supportsAction || props.supportsSelection ? interactiveCursorStyle : ''\n  ]);\n\n  const itemAriaProps = getItemAriaProps(\n    !!props.supportsSelection,\n    props.translations,\n    props.isSelected,\n    props.accessibleLabel,\n    props.role\n  );\n\n  const padding = getItemPadding(props.h);\n\n  return (\n    <div\n      class={itemClasses}\n      data-id={`${props.id}`}\n      data-idx={props.itemIdx}\n      style={{\n        ...props.style,\n        transform: `translate(${(props.x || 0) - padding}px,${(props.y || 0) - padding}px)`,\n        fontSize: props.fontSize,\n        padding: `${padding}px`,\n        lineHeight: props.fontSize + 'px'\n      }}\n      id={props.activeId}\n      {...itemAriaProps}>\n      {props.label}\n    </div>\n  );\n};\n\nexport { TagCloudItem };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref, useLayoutEffect, useState } from 'preact/hooks';\nimport { ItemInfo } from './tagCloud.type';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { TagItemProps } from './TagCloudItem';\nimport { ComponentChildren } from 'preact';\nimport { useDatatip, calculateOffset } from '../hooks/PRIVATE_useDatatip';\nimport { Property } from 'csstype';\n\ntype props<K> = {\n  touchResponse: 'touchStart' | 'touchHold';\n  datatip?: { content?: ComponentChildren; borderColor?: Property.BorderColor };\n  borderColor?: Property.BorderColor;\n  rootRef: Ref<HTMLDivElement>;\n  focusedItemInfo: ItemInfo;\n  focusedItemRef: Ref<TagItemProps<K> | null>;\n};\n\n/**\n * Calculate the datatip offset for datatip when keyboard focus is active.\n * @param rootRef The ref for root of the tag cloud.\n * @param currentItem The ItemInfo of the current keyboard focused item.\n * @param isRtl The direction.\n * @param focusedItemRef The ref for currentItem node.\n * @returns\n */\nconst calculateTagcloudOffset = <K>(\n  rootRef: Ref<HTMLDivElement>,\n  currentItem: ItemInfo,\n  isRtl: boolean,\n  focusedItemRef: Ref<TagItemProps<K> | null>\n) => {\n  if (\n    focusedItemRef?.current &&\n    currentItem.isCurrent &&\n    rootRef.current &&\n    focusedItemRef?.current.x != null &&\n    focusedItemRef?.current.w != null &&\n    focusedItemRef?.current.y != null &&\n    focusedItemRef?.current.h != null\n  ) {\n    const bounds = {\n      x: focusedItemRef.current.x,\n      y: focusedItemRef.current.y,\n      width: focusedItemRef.current.w,\n      height: focusedItemRef.current.h\n    };\n\n    const rootDims = rootRef.current.getBoundingClientRect();\n    return calculateOffset(isRtl, rootDims.width, bounds);\n  }\n  // fallback to default\n  return calculateOffset(isRtl, 0, undefined);\n};\n\n/**\n * Returns the datatip.\n * @param text The text string for the tag cloud item.\n * @param rootRef The ref for root of the tag cloud.\n * @param focusedItemRef The ref for focused item node.\n * @param focusedItemInfo The ItemInfo for focused item node.\n * @returns\n */\nexport const useTagCloudDatatip = <K>({\n  touchResponse,\n  datatip,\n  rootRef,\n  focusedItemRef,\n  focusedItemInfo\n}: props<K>) => {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const [offset, setOffset] = useState<{ mainAxis?: number; crossAxis?: number }>(\n    calculateTagcloudOffset(rootRef, focusedItemInfo, isRtl, focusedItemRef)\n  );\n\n  useLayoutEffect(() => {\n    setOffset(calculateTagcloudOffset(rootRef, focusedItemInfo, isRtl, focusedItemRef));\n  }, [focusedItemInfo, focusedItemRef, isRtl, rootRef]);\n\n  const anchor = focusedItemInfo?.isCurrent ? 'element' : 'pointer';\n  const placement = 'top-start' as const;\n\n  const { datatipContent, datatipProps } = useDatatip({\n    content: datatip?.content,\n    borderColor: datatip?.borderColor,\n    anchor,\n    placement,\n    offset: offset,\n    touchResponse\n  });\n  return { datatipContent, datatipProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Ref } from 'preact/hooks';\nimport { TagCloudContextMenuContext, TagCloudContextMenuConfig, ItemInfo } from './tagCloud.type';\nimport { type gestureTypes, useContextMenu } from '../hooks/PRIVATE_useVisContextMenu';\n\ntype Props<D> = {\n  focusedItemInfo: ItemInfo;\n  items: D[];\n  rootRef: Ref<HTMLDivElement>;\n  contextMenuConfig?: TagCloudContextMenuConfig<D>;\n  onContextMenuDismissed?: (gesture: gestureTypes) => void;\n  getItemInfo: (element: HTMLElement) =>\n    | {\n        idx: number;\n      }\n    | undefined;\n};\n\nexport const useTagCloudContextMenu = <D>({\n  getItemInfo,\n  focusedItemInfo,\n  rootRef,\n  contextMenuConfig,\n  items,\n  onContextMenuDismissed\n}: Props<D>) => {\n  const { contextMenuProps, contextMenuContent } = useContextMenu<TagCloudContextMenuContext<D>>({\n    onContextMenuHandler: ({ gesture, target }) => {\n      let idx;\n      let elem;\n      if (gesture === 'keyboard') {\n        idx = focusedItemInfo.idx;\n        elem = rootRef.current?.querySelector(`[data-idx=\"${idx}\"]`);\n      } else {\n        //We search for the key using the target of the event\n        idx = getItemInfo(target as HTMLElement)?.idx;\n      }\n      const data = idx !== undefined ? items[idx] : null;\n      let context: TagCloudContextMenuContext<D>;\n      if (data) {\n        context = {\n          type: 'item',\n          data: data\n        };\n      } else {\n        context = { type: 'background' };\n      }\n      return {\n        context,\n        elem\n      };\n    },\n    contextMenuOptions: {\n      isDisabled: !contextMenuConfig //If there is no context menu renderer we disable the hook\n    },\n    rootRef,\n    contextMenuConfig,\n    onContextMenuDismissed\n  });\n\n  return { contextMenuContent, contextMenuProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type {\n  ItemActionDetail,\n  ItemFocusDetail,\n  TagCloudItemData,\n  TagCloudProps\n} from './tagCloud.type';\nimport { TagCloudItem, TagItemProps } from './TagCloudItem';\nimport {\n  getAriaProps,\n  getDatatipContent,\n  getItemProps,\n  getLayout,\n  isEqualItem,\n  getKeyUpHandler\n} from './tagCloudUtils';\nimport { getTagCloudNavUtils } from './tagCloudNavUtils';\nimport { useVisEvent } from '../hooks/PRIVATE_useVisEvents/useVisEvents';\nimport { useTagCloudDatatip } from './useTagCloudDatatip';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useMemo, useRef } from 'preact/hooks';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { useTextDimensions } from '../hooks/PRIVATE_useTextDimensions';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { baseStyles } from './themes/TagCloudStyles.css';\nimport { useSelection } from '../hooks/PRIVATE_useVisSelection';\nimport { getItemInfo } from './tagCloudUtils';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\nimport { useTagCloudContextMenu } from './useTagCloudContextMenu';\nimport { ItemInfo } from './tagCloud.type';\nimport { useVisTouchResponse } from '#hooks/PRIVATE_useVisTouchResponse';\nimport { merge } from '#utils/UNSAFE_stringUtils';\n\ntype TagCloudWithDimensionsProps<K, D> = Omit<TagCloudProps<K, D>, 'width' | 'height'> & {\n  width: number;\n  height: number;\n};\n\nexport function TagCloudWithDimensions<K extends string | number, D extends TagCloudItemData<K>>({\n  selectionMode = 'none',\n  layout = 'cloud',\n  width,\n  height,\n  items,\n  onItemAction,\n  onItemHover,\n  onItemFocus,\n  testId,\n  contextMenuConfig,\n  ...props\n}: TagCloudWithDimensionsProps<K, D>) {\n  const testIdProps = useTestId(testId);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const focusedItemRef = useRef<TagItemProps<K> | null>(null);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const hasData = items && items.length !== 0;\n  const supportsSelection = !!(selectionMode && selectionMode !== 'none');\n  const supportsAction = onItemAction != null;\n  const isReadOnly = supportsAction && onItemHover === null && onItemFocus === null;\n  const idToDataMap = new Map(items.map((obj) => [obj.id, obj]));\n\n  const { getItem, getDetailFromInfo, getPrevItemInfo, getNextItemInfo } = getTagCloudNavUtils<\n    K,\n    D\n  >(items);\n\n  const { touchResponse, touchResponseStyle } = useVisTouchResponse({\n    type: 'auto',\n    supportsTouchDragGestures: false,\n    rootRef\n  });\n\n  const { focusedItemInfo, hoveredItemInfo, onContextMenuDismissed, activeId, eventsProps } =\n    useVisEvent<ItemInfo, ItemActionDetail<K, D>, ItemFocusDetail<K, D>, D>(\n      touchResponse,\n      !isReadOnly && hasData,\n      () => !isReadOnly,\n      getKeyUpHandler,\n      getDetailFromInfo,\n      getPrevItemInfo,\n      getNextItemInfo,\n      onItemAction,\n      onItemHover,\n      onItemFocus,\n      isEqualItem,\n      getItemInfo,\n      { idx: 0 }\n    );\n\n  const content = getDatatipContent<D>(\n    items,\n    getItem as (itemInfo: ItemInfo) => D,\n    focusedItemInfo,\n    hoveredItemInfo,\n    props.datatip\n  );\n  const {\n    datatipContent,\n    datatipProps: { 'aria-describedby': datatipAriaDescribedby, ...datatipProps }\n  } = useTagCloudDatatip({\n    touchResponse,\n    datatip: content,\n    rootRef,\n    focusedItemInfo,\n    focusedItemRef\n  });\n\n  const ariaProps = getAriaProps(\n    translations,\n    hasData,\n    props.accessibleLabel,\n    merge([props['aria-describedby'], datatipAriaDescribedby]),\n    props['aria-labelledby']\n  );\n\n  const idExtracter = (event: Event) => {\n    // return focused item for keyboard event.\n    // eventsProps should have already updated the focused item\n    const info =\n      event.type === 'keyup' ? focusedItemInfo : getItemInfo(event.target as HTMLElement);\n    return getDetailFromInfo(info).id;\n  };\n\n  const { selectionContent, selectionProps } = useSelection<K, D>({\n    idExtracter,\n    selection: props.selectedIds,\n    selectionMode: selectionMode,\n    onChange: props.onSelectionChange,\n    getDataById: (id) => idToDataMap.get(id)\n  });\n\n  const { direction } = useUser();\n\n  const { textMeasureContent, getTextDimensions } = useTextDimensions();\n  const layoutTags = useMemo(() => {\n    return getTextDimensions && hasData\n      ? getLayout(layout, items, width, height, direction === 'rtl', getTextDimensions)\n      : [];\n  }, [layout, items, hasData, width, height, direction, getTextDimensions]);\n\n  const { contextMenuContent, contextMenuProps } = useTagCloudContextMenu<D>({\n    getItemInfo,\n    focusedItemInfo,\n    rootRef,\n    contextMenuConfig,\n    items,\n    onContextMenuDismissed\n  });\n\n  const mergedProps = mergeProps(eventsProps, datatipProps, selectionProps, contextMenuProps);\n\n  return (\n    <div\n      ref={rootRef}\n      tabIndex={isReadOnly ? undefined : 0}\n      style={{ width, height, ...touchResponseStyle }}\n      class={baseStyles}\n      {...testIdProps}\n      {...ariaProps}\n      {...mergedProps}\n      aria-activedescendant={activeId}>\n      {layoutTags.map((item, itemIndex) => {\n        const itemProps = getItemProps(\n          item,\n          itemIndex,\n          supportsSelection,\n          isReadOnly,\n          hoveredItemInfo,\n          props.selectedIds,\n          focusedItemInfo,\n          props.highlightedIds,\n          activeId\n        );\n        const isFocusedItem = focusedItemInfo.idx === itemIndex;\n        isFocusedItem ? (focusedItemRef.current = item) : null;\n        return (\n          <TagCloudItem\n            fontSize={item.fontSize}\n            x={item.x}\n            y={item.y}\n            accessibleLabel={item.accessibleLabel}\n            supportsSelection={supportsSelection}\n            supportsAction={supportsAction}\n            translations={translations}\n            {...itemProps}\n          />\n        );\n      })}\n      {textMeasureContent}\n      {datatipContent}\n      {contextMenuContent}\n      {selectionContent}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { TagCloudItemData, TagCloudProps } from './tagCloud.type';\nimport { TrackResizeContainer } from '../PRIVATE_TrackResizeContainer';\nimport { TagCloudWithDimensions } from './TagCloudWithDimensions';\nimport { dimensionStyle } from './themes/TagCloudStyles.css';\n/**\n * Tag clouds are used to display text data with the importance of each tag shown with font size and/or color.\n */\nexport function TagCloud<K extends string | number, D extends TagCloudItemData<K>>({\n  height,\n  width,\n  ...props\n}: TagCloudProps<K, D>) {\n  return (\n    <TrackResizeContainer width={width} height={height} class={dimensionStyle}>\n      {(tagCloudWidth, tagCloudHeight) => (\n        <TagCloudWithDimensions width={tagCloudWidth} height={tagCloudHeight} {...props} />\n      )}\n    </TrackResizeContainer>\n  );\n}\n"],"names":["intersects","getUnion","generateAriaLabel","getContrastingTextColor","cancelEvent","styles","classNames","_jsx","calculateOffset","useUser","useState","useLayoutEffect","useDatatip","useContextMenu","useTestId","useRef","useTranslationBundle","useVisTouchResponse","useVisEvent","merge","useSelection","useTextDimensions","useMemo","mergeProps","_jsxs","baseStyles","TrackResizeContainer","dimensionStyle"],"mappings":"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"}