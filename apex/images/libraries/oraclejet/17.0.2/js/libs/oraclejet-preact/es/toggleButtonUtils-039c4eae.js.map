{"version":3,"file":"toggleButtonUtils-039c4eae.js","sources":["../../src/utils/UNSAFE_buttonUtils/toggleButtonUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { StylingOptions } from '../../UNSAFE_BaseButton';\nimport { ButtonSetPosition, LayoutWidths, InputTypes } from './toggle.types';\nimport type { ToggleButtonTypes } from './toggle.types';\n\n/**\n * Maps a position to the required button styling classes.\n * @param position the toggle location in the buttonSetItem\n * @return an array of styling classes\n */\nfunction positionStyling(position?: ButtonSetPosition): StylingOptions[] {\n  let positionStyling = [] as StylingOptions[];\n  switch (position) {\n    case 'start':\n      positionStyling = ['noBorderRadiusEnd', 'noBorderEnd'];\n      break;\n    case 'end':\n      positionStyling = ['noBorderRadiusStart', 'noBorderStart'];\n      break;\n    case 'middle':\n      positionStyling = [\n        'noBorderRadiusEnd',\n        'noBorderEnd',\n        'noBorderRadiusStart',\n        'noBorderStart'\n      ];\n      break;\n  }\n  return positionStyling;\n}\n\n/**\n * Convert a child index to a position\n * ie, [start, middle, middle, end]\n */\nexport function indexToPosition(index: number, length: number): ButtonSetPosition {\n  if (length === 1) {\n    return 'single';\n  }\n  if (!index) {\n    return 'start';\n  }\n  if (index === length - 1) {\n    return 'end';\n  }\n  return 'middle';\n}\n\n/**\n * Convert width styling to styling classes\n * @param layoutWidth\n * @returns an array of styling classes\n */\n\nfunction layoutWidthStyling(layoutWidth: LayoutWidths): StylingOptions[] {\n  return layoutWidth === 'equal' ? ['widthEqual'] : ['widthAuto'];\n}\n\n/**\n * Returns the styling classes for a toggle button based on state\n * @param layoutWidth\n * @param isSelected\n * @param isSwitch\n * @param isInput\n * @param position\n * @param hasLabel\n * @param isIconOnly\n * @returns\n */\nexport function toggleStyling(\n  layoutWidth: LayoutWidths = 'auto',\n  isSelected: boolean,\n  isSwitch: boolean,\n  isInput: boolean,\n  isAdjacent?: boolean,\n  position?: ButtonSetPosition,\n  hasLabel?: boolean,\n  isIconOnly?: boolean\n): StylingOptions[] {\n  const selectedStyling = isSelected && !isSwitch ? ['selected'] : [];\n  const iconStyling = isIconOnly ? ['min'] : [];\n  const inputStyling = isInput ? ['embedded', 'min'] : [];\n  const labelOnlyStyling = !isIconOnly ? (hasLabel ? ['default'] : ['min']) : ['min'];\n  const positionStyles = isAdjacent ? positionStyling(position) : [];\n  const buttonSetItemStyles =\n    position === 'single'\n      ? []\n      : position === 'middle' || position === 'end'\n      ? ['buttonSetItem', 'trailingItem']\n      : ['buttonSetItem'];\n  const styling: StylingOptions[] = [\n    ...inputStyling,\n    ...selectedStyling,\n    ...iconStyling,\n    ...positionStyles,\n    ...buttonSetItemStyles,\n    ...layoutWidthStyling(layoutWidth),\n    ...labelOnlyStyling\n  ] as StylingOptions[];\n  return styling;\n}\n\n/**\n * Merge buttonset input type choices with prop toggle type\n * @param inputType\n * @param buttonSetInputType\n * @returns\n */\n\nexport function isMergedInputs(\n  inputType: ToggleButtonTypes,\n  buttonSetInputType?: InputTypes\n): boolean {\n  return (\n    (buttonSetInputType && buttonSetInputType.length > 0) ||\n    inputType === 'radio' ||\n    inputType === 'checkbox'\n  );\n}\n/**\n * Used to toggle the value in a ButtonSetItem.\n * A checkbox can have 0 or many selected.\n * @param value\n * @param buttonSetValue\n * @returns\n */\nexport function toggleButtonSetItem(value: string, buttonSetValue?: Array<string>): Array<string> {\n  // create a new set from the previous and add or remove the changed value\n  if (!buttonSetValue) {\n    return [value];\n  }\n  return buttonSetValue.includes(value)\n    ? buttonSetValue.filter((i) => i !== value)\n    : [...buttonSetValue, value];\n}\n"],"names":[],"mappings":"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"}