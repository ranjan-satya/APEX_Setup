{"version":3,"file":"Text-aaacb6a0.js","sources":["../../src/UNSAFE_Text/Text.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { multiVariantStyles, styles } from './themes/TextStyles.css';\n\ntype StylePropsWithOutTruncate = {\n  /**\n   * Specifies text color. If set as \"inherit\", takes text color from its parent element.\n   */\n  variant?: 'primary' | 'secondary' | 'disabled' | 'danger' | 'warning' | 'success' | 'inherit';\n\n  /**\n   * Specifies font size and line height. If set as \"inherit\", takes font size and line height from its parent element.\n   */\n  size?: '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'inherit';\n\n  /**\n   * Specifies the font weight. If set as \"inherit\", takes font weight from its parent element.\n   */\n  weight?: 'normal' | 'semiBold' | 'bold' | 'inherit';\n\n  /**\n   * Specifies the overflow-wrap.\n   */\n  overflowWrap?: 'normal' | 'breakWord' | 'anywhere';\n\n  /**\n   * Specifies if hyphens should be included when handling long words with no spaces.\n   */\n  hyphens?: 'auto' | 'none';\n};\ntype TruncateProps =\n  | {\n      /**\n       * Truncates text at a specific number of lines and then displays an ellipsis (â€¦) at the end of the last line. Parent of the element needs to have a specific width so text starts overflowing and produce a truncation.\n       */\n      lineClamp?: number;\n      /**\n       * Determines text behavior when text is truncated. Be aware of setting either lineClamp or truncation. Setting both props would produce a type error. In most cases, lineClamp=1 tries to put the ellipsis at the end of a \"word\". On the other hand, using truncation=\"ellipsis\" will show as much as possible text, then put the ellipsis at the end.\n       */\n      truncation?: never;\n    }\n  | {\n      lineClamp?: never;\n      truncation?: 'none' | 'clip' | 'ellipsis';\n    };\ntype AdditionalProps = {\n  /**\n   * Specifies the text id\n   */\n  id?: string;\n\n  /**\n   * Specifies the children.\n   */\n  children?: ComponentChildren;\n};\ntype Props = StylePropsWithOutTruncate & TruncateProps & AdditionalProps;\n\nconst interpolations = [\n  ({ lineClamp }: Pick<TruncateProps, 'lineClamp'>) =>\n    !lineClamp ? {} : { class: styles.lineClamp, webkitLineClamp: lineClamp }\n];\nconst styleInterpolations = mergeInterpolations<Omit<Props, 'children'>>(interpolations);\n/**\n * Text shows written or printed work.\n */\nexport function Text({\n  children,\n  hyphens,\n  size,\n  truncation,\n  variant = 'inherit',\n  weight,\n  overflowWrap = 'anywhere',\n  ...props\n}: Props) {\n  const variantClasses = multiVariantStyles({\n    hyphens,\n    size,\n    truncation,\n    variant,\n    weight,\n    overflowWrap\n  });\n  const { class: interpolatedClasses, ...styles } = styleInterpolations(props);\n  const classes = classNames([variantClasses, interpolatedClasses]);\n\n  return (\n    <span class={classes} style={styles} id={props.id}>\n      {children}\n    </span>\n  );\n}\n"],"names":["styles","mergeInterpolations","multiVariantStyles","classNames","_jsx"],"mappings":";;;;;;;;AAkEA,MAAM,cAAc,GAAG;IACrB,CAAC,EAAE,SAAS,EAAoC,KAC9C,CAAC,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAEA,wCAAM,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE;CAC5E,CAAC;AACF,MAAM,mBAAmB,GAAGC,uCAAmB,CAA0B,cAAc,CAAC,CAAC;AACzF;;AAEG;AACG,SAAU,IAAI,CAAC,EACnB,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,UAAU,EACV,OAAO,GAAG,SAAS,EACnB,MAAM,EACN,YAAY,GAAG,UAAU,EACzB,GAAG,KAAK,EACF,EAAA;IACN,MAAM,cAAc,GAAGC,oDAAkB,CAAC;QACxC,OAAO;QACP,IAAI;QACJ,UAAU;QACV,OAAO;QACP,MAAM;QACN,YAAY;AACb,KAAA,CAAC,CAAC;AACH,IAAA,MAAM,EAAE,KAAK,EAAE,mBAAmB,EAAE,GAAG,MAAM,EAAE,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC7E,MAAM,OAAO,GAAGC,qBAAU,CAAC,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC,CAAC;AAElE,IAAA,QACEC,cAAM,CAAA,MAAA,EAAA,EAAA,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,YAC9C,QAAQ,EAAA,CACJ,EACP;AACJ;;;;"}