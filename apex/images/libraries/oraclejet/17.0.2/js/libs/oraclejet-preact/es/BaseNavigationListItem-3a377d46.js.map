{"version":3,"file":"BaseNavigationListItem-3a377d46.js","sources":["../../src/UNSAFE_NavigationListCommon/NavigationListContext.ts","../../src/UNSAFE_NavigationListCommon/useNavigationListContext.ts","../../src/UNSAFE_NavigationListCommon/useNavigationListItem.ts","../../src/UNSAFE_NavigationListCommon/BaseNavigationListItem.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { NavigationListProps } from './NavigationListProps';\n\ntype CurrentKeyDetail<K> = {\n  value: K;\n};\n\nexport type NavigationListContextProps<K extends string | number> = Pick<\n  NavigationListProps<K>,\n  'selection' | 'onSelectionChange' | 'onRemove'\n> & {\n  currentKey?: K;\n  showFocusRing: boolean;\n  onCurrentKeyChange:\n    | (<K extends string | number>(detail: CurrentKeyDetail<K>) => void)\n    | undefined;\n  navigationListItemPrefix: string;\n};\n\n/**\n * Context used to pass navlist information without having to pass it to navlist children props.\n * We want to communicate information down to any interested navlist item children.\n */\n\nconst NavigationListContext = createContext<NavigationListContextProps<string | number>>(null!);\n\nexport { NavigationListContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { NavigationListContext } from './NavigationListContext';\n\n/**\n * Utility hook for consuming the NavigationListContext\n *\n * @returns The value of NavigationListContext provider\n */\nfunction useNavigationListContext() {\n  return useContext(NavigationListContext);\n}\n\nexport { useNavigationListContext };\n","import { useCallback } from 'preact/hooks';\n\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useNavigationListContext } from './useNavigationListContext';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { FlexitemProps } from '../utils/UNSAFE_interpolations/flexitem';\nimport { flexitemInterpolations } from '../utils/UNSAFE_interpolations/flexitem';\nimport {\n  NavigationListItemStyles,\n  NavigationListItemVariantOptions\n} from '../UNSAFE_NavigationList/themes/NavigationListItemStyles.css';\nimport { NavigationListItemRedwoodTheme } from './themes/redwood/NavigationListItemTheme';\n\nconst flexItemStyleInterpolations = mergeInterpolations<FlexitemProps>([\n  ...Object.values(flexitemInterpolations)\n]);\nconst { class: labelContainerFlexItemClasses, ...labelContainerFlexItemStyle } =\n  flexItemStyleInterpolations({\n    alignSelf: 'center'\n  });\n\nexport function useNavigationListItem<K extends string | number>({ itemKey }: { itemKey: K }) {\n  const { onSelectionChange, selection, currentKey, showFocusRing, navigationListItemPrefix } =\n    useNavigationListContext();\n\n  //Selection and focus state\n  const isCurrent = currentKey === itemKey;\n\n  const isSelected = selection === itemKey;\n\n  //Styling\n  const { interactionProps, applyPseudoHoverStyle, applyHoverStyle, applyActiveStyle } =\n    useInteractionStyle();\n\n  const {\n    classes: listItemClasses,\n    styles: { labelContainerClasses }\n  } = useComponentTheme<NavigationListItemVariantOptions, NavigationListItemStyles>(\n    NavigationListItemRedwoodTheme,\n    {\n      focusRing: showFocusRing ? 'isFocusRing' : 'notFocusRing',\n      current: isCurrent ? 'isCurrent' : 'notCurrtent',\n      selected: isSelected ? 'isSelected' : 'notSelected',\n      hybridHover: applyHoverStyle ? 'isHybridHover' : 'notHybridHover',\n      pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',\n      active: applyActiveStyle ? 'isActive' : 'notActive'\n    }\n  );\n\n  //Item handlers\n  const handlePress = useCallback(() => {\n    onSelectionChange?.({ value: itemKey as K, reason: 'pointer' });\n  }, [itemKey, onSelectionChange]);\n\n  //Legacy navlist makes selection on keyDown, but since preact tabbar made selection after keyUp, will do the same\n  //for preact navlist\n  const { pressProps } = usePress(handlePress);\n\n  return {\n    itemId: navigationListItemPrefix + itemKey,\n    itemHandlers: mergeProps(interactionProps, pressProps /*,onFocusProps*/),\n    itemClasses: classNames([listItemClasses]),\n    isSelected,\n    labelContainerClasses: classNames([labelContainerClasses, labelContainerFlexItemClasses]),\n    labelContainerStyle: labelContainerFlexItemStyle\n  };\n}\n","import { useRef } from 'preact/hooks';\n\nimport { Text } from '../UNSAFE_Text';\n\nimport { useNavigationListItem } from './useNavigationListItem';\nimport { Flex } from '../UNSAFE_Flex';\nimport { Badge } from '../UNSAFE_Badge';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { WarningS } from '../UNSAFE_RedwoodIcons/WarningS';\nimport { ErrorS } from '../UNSAFE_RedwoodIcons/ErrorS';\nimport { InformationS } from '../UNSAFE_RedwoodIcons/InformationS';\nimport { SuccessS } from '../UNSAFE_RedwoodIcons/SuccessS';\nimport {\n  NavigationListItemStyles,\n  NavigationListItemVariantOptions\n} from '../UNSAFE_NavigationList/themes/NavigationListItemStyles.css';\nimport { NavigationListItemRedwoodTheme } from './themes/redwood/NavigationListItemTheme';\nimport { ComponentChildren } from 'preact';\n\ntype Severity = 'warning' | 'info' | 'none' | 'error' | 'confirmation';\n\nexport type BaseNavigationListItemProps<K extends string | number> = {\n  /**\n   * Key of the NavigationListItem.\n   */\n  itemKey: K;\n  /**\n   * Label of the NavigationListItem.\n   */\n  label?: string;\n  /**\n   * The content to be rendered inside the Badge component.\n   */\n  badge?: string;\n  /**\n   * The content to be rendered inside the Text component as a metadata.\n   */\n  metadata?: string;\n  /**\n   * The status icon to be rendered after the label.\n   */\n  severity?: Severity;\n  /**\n   * The content to be rendered for remove icon\n   */\n  removeIcon?: ComponentChildren;\n};\n\n/*TODO: JET-58535. Add ripple effect when touching navigationListItem. */\nexport function BaseNavigationListItem<K extends string | number>({\n  itemKey,\n  label,\n  badge,\n  metadata,\n  severity = 'none',\n  removeIcon\n}: BaseNavigationListItemProps<K>) {\n  const itemRef = useRef<HTMLLIElement | null>(null);\n\n  //Logic of the component handled here\n  const {\n    itemId,\n    itemHandlers,\n    itemClasses,\n    isSelected,\n    labelContainerClasses,\n    labelContainerStyle\n  } = useNavigationListItem({\n    itemKey\n  });\n\n  const severityRequirement = !(severity === 'none' || severity === undefined);\n\n  const IconComponent = (severityValue: Severity) => {\n    switch (severityValue) {\n      case 'error':\n        return <ErrorS color=\"danger\" />;\n      case 'warning':\n        return <WarningS color=\"warning\" />;\n      case 'info':\n        return <InformationS color=\"info\" />;\n      case 'confirmation':\n        return <SuccessS color=\"success\" />;\n      default:\n        return null;\n    }\n  };\n\n  const {\n    styles: { iconLabelContainer, iconContainer, navigationItemMetadata }\n  } = useComponentTheme<NavigationListItemVariantOptions, NavigationListItemStyles>(\n    NavigationListItemRedwoodTheme\n  );\n\n  const navigationItemMatadata = classNames([navigationItemMetadata]);\n\n  const endIconContainerClasses = classNames([iconLabelContainer, iconContainer]);\n  const {\n    styles: { navigationlistRemoveIcon }\n  } = useComponentTheme<NavigationListItemVariantOptions, NavigationListItemStyles>(\n    NavigationListItemRedwoodTheme\n  );\n\n  const removeClass = classNames([navigationlistRemoveIcon]);\n\n  return (\n    <li\n      role=\"tab\"\n      {...itemHandlers}\n      data-oj-key={itemKey}\n      id={itemId}\n      class={itemClasses}\n      aria-selected={isSelected}\n      ref={itemRef}>\n      {label && (\n        <span class={labelContainerClasses} style={labelContainerStyle}>\n          <Text size=\"inherit\" weight=\"inherit\" variant=\"inherit\">\n            {label}\n          </Text>\n        </span>\n      )}\n      {(metadata || severityRequirement || badge || removeIcon) && (\n        <Flex gap=\"2x\" align=\"center\" justify=\"end\" flex=\"1 1 auto\">\n          {' '}\n          {badge && (\n            <span class={endIconContainerClasses}>\n              <Badge size=\"md\" variant=\"neutralSubtle\">\n                {badge}\n              </Badge>\n            </span>\n          )}\n          {metadata && (\n            <span class={navigationItemMatadata}>\n              <Text>{'( ' + metadata + ' )'}</Text>\n            </span>\n          )}\n          {severityRequirement && (\n            <span class={endIconContainerClasses}>{IconComponent(severity)}</span>\n          )}\n          {removeIcon && <span class={removeClass}>{removeIcon}</span>}\n        </Flex>\n      )}\n    </li>\n  );\n}\n"],"names":["_jsx","ErrorS","WarningS","InformationS","SuccessS","_jsxs"],"mappings":"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"}