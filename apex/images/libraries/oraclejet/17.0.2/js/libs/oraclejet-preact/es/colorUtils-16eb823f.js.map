{"version":3,"file":"colorUtils-16eb823f.js","sources":["../../../../node_modules/ramda/es/isNil.js","../../src/utils/PRIVATE_colorUtils/colorUtils.ts"],"sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import { isNil } from 'ramda';\nimport type { CSSVarFunction } from '@vanilla-extract/private';\n\n/**\n * Takes in rgb components or CSS variable string of rgb components and returns an rgb string.\n */\nexport const rgb = (components: [number, number, number, number?] | CSSVarFunction) => {\n  const str = Array.isArray(components)\n    ? components.join(',')\n    : components.trim().replace(/\\s/g, '');\n  return str.startsWith('rgb(') ? str : `rgb(${str})`;\n};\n\n/**\n * Tests if a given RGB components array is valid.\n */\nexport const isRGB = (rgb: number[]): rgb is [number, number, number] =>\n  rgb.length === 3 && rgb.every((c) => !isNaN(c) && !isNil(c) && c >= 0 && c <= 255);\n\n/**\n * Tests if a given RGBA components array is valid.\n */\nexport const isRGBA = (rgba: number[]): rgba is [number, number, number, number] => {\n  const [r, g, b, a] = rgba;\n  return isRGB([r, g, b]) && a >= 0 && a <= 1;\n};\n\n/**\n * Converts RGB or RGBA color string to color components. If an alpha component is not supplied,\n * an implied value of 1 is returned.\n */\nexport const toRGBA = (colorString: string) => {\n  const [r, g, b, a = 1] = colorString\n    .replace(/\\s|rgb\\(|rgba\\(|\\)/g, '')\n    .split(',')\n    .map((c) => parseFloat(c));\n  const clr = [r, g, b, a];\n  return isRGBA(clr) ? clr : undefined;\n};\n\n/**\n * Converts shorthand hex notation to longform hex notation.\n */\nconst expandHexShorthand = ([m, r, g, b]: string) => m + r + r + g + g + b + b;\n\n/**\n *  Converts hex color string to RGBA color components.\n *  @private\n *  @param {string} hex\n *  @returns The RGBA color components or undefined.\n */\nexport const hexToRGBA = (hex: string) => {\n  const longhandHex = hex.length === 4 ? expandHexShorthand(hex) : hex;\n  const [c1, c2, c3, c4] = (longhandHex.slice(1).match(/.{1,2}/g) ?? [])?.map((c) =>\n    parseInt(c, 16)\n  );\n  const rgba =\n    c4 === undefined ? [c1, c2, c3, 1] : [c1, c2, c3, Math.round((c4 / 255) * 100) / 100];\n  return isRGBA(rgba) ? rgba : undefined;\n};\n\n/**\n * Transforms rgb coponents to hex color.\n */\n/**\n * Transforms rgb or rgba coponents to hex color with 6 or 8 digits.\n * For more information, see https://drafts.csswg.org/css-color/#hex-notation.\n * @param rgba\n * @returns Hex color string\n */\nexport const rgbaToHex = (rgba: [number, number, number, number?]) => {\n  const hex =\n    '#' +\n    rgba\n      .filter((c: number | undefined): c is number => c !== undefined)\n      .map((n, index) => (index < 3 ? n : Math.round(n * 255)).toString(16).padStart(2, '0'))\n      .join('');\n  return hex.length === 9 && hex.endsWith('ff') ? hex.substring(0, 7) : hex;\n};\n\n/**\n * Returns a specifed channel value from a css color specification (#, rgb(), rgba()).\n * If an alpha channel is requested and a # or rgb string is supplied,\n * an implied value of 1 is returned.\n * @private\n * @param {String} colorString  The color string.\n * @returns The channel value as a decimal number (between 0 and 255) or undefined.\n */\nexport const parseToRGBA = (colorString: string) => {\n  const clr = getNamedColor(colorString) ?? colorString;\n  return clr.startsWith('#') ? hexToRGBA(clr) : toRGBA(clr);\n};\n\n/**\n * Returns the contrast ratio between two relative luminance values. The ratio can range from 1 to 21.\n * Follows the formula in www.w3.org/TR/WCAG20/#contrast-ratiodef\n * @param {number} luminance1\n * @param {number} luminance2\n * @returns {number} The contrast ratio.\n */\nexport function getContrast(luminance1: number, luminance2: number) {\n  const l1 = luminance1 + 0.05;\n  const l2 = luminance2 + 0.05;\n  return l1 > l2 ? l1 / l2 : l2 / l1;\n}\n\n/**\n * Returns the relative brightness of any point in a colorspace, normalized to 0 for darkest black and 1 for lightest white.\n * Follows the formula in www.w3.org/TR/WCAG20/#relativeluminancedef\n * @param {string} colorString\n * @returns The relative luminance of the provided color or undefined.\n */\nexport const getLuminance = (colorString: string) => {\n  const transform = (c: number) => {\n    const cs = c / 255;\n    return cs < 0.03928 ? cs / 12.92 : Math.pow((cs + 0.055) / 1.055, 2.4);\n  };\n\n  const rgb = parseToRGBA(colorString)?.slice(0, 3) ?? [];\n  return isRGB(rgb)\n    ? 0.2126 * transform(rgb[0]) + 0.7152 * transform(rgb[1]) + 0.0722 * transform(rgb[2])\n    : undefined;\n};\n\n/**\n * Returns a contrasting text color for the specified background color.\n * @param {string} backgroundColor The background color.\n * @param {string} [lightTextColor = '#fff'] Light text color.\n * @param {string} [darkTextColor = '#000] Dark text color.\n * @returns A constrasting color for use on text.\n */\nexport const getContrastingTextColor = (\n  backgroundColor: string,\n  lightTextColor = '#fff',\n  darkTextColor = '#000'\n) => {\n  // TODO: Retrieve from cache if it has been computed before\n  const luminance = getLuminance(backgroundColor) ?? 1;\n  return getContrast(luminance, 1) > getContrast(luminance, 0) ? lightTextColor : darkTextColor;\n};\n\n/**\n * colormap const\n */\nconst colorMap = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faEbd7',\n  aqua: '#00ffff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffE4c4',\n  black: '#000000',\n  blanchedalmond: '#ffEbcd',\n  blue: '#0000ff',\n  blueviolet: '#8a2bE2',\n  brown: '#a52a2a',\n  burlywood: '#dEb887',\n  cadetblue: '#5f9Ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691E',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495Ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#00ffff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#E9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkturquoise: '#00cEd1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dodgerblue: '#1E90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#ff00ff',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0E68c',\n  lavender: '#E6E6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8E6',\n  lightcoral: '#f08080',\n  lightcyan: '#E0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90EE90',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cEfa',\n  lightslategray: '#778899',\n  lightsteelblue: '#b0c4dE',\n  lightyellow: '#ffffE0',\n  lime: '#00ff00',\n  limegreen: '#32cd32',\n  linen: '#faf0E6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68EE',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffE4E1',\n  moccasin: '#ffE4b5',\n  navajowhite: '#ffdEad',\n  navy: '#000080',\n  oldlace: '#fdf5E6',\n  olive: '#808000',\n  olivedrab: '#6b8E23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#EEE8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afEEEE',\n  palevioletred: '#db7093',\n  papayawhip: '#ffEfd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#ff0000',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169E1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2E8b57',\n  seashell: '#fff5EE',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87cEEb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40E0d0',\n  violet: '#EE82EE',\n  wheat: '#f5dEb3',\n  white: '#ffffff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ffff00',\n  yellowgreen: '#9acd32',\n  transparent: 'rgba(255,255,255,0)'\n} as const;\n\nexport type NamedColor = keyof typeof colorMap;\n\n/**\n * Returns a color definition string from the named color.\n * @param {String} name  The color name.\n * @returns A hex or RGBA color string.\n */\nexport const getNamedColor = (name: string) => colorMap[name.trim().toLowerCase() as NamedColor];\n"],"names":["isNil"],"mappings":"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"}