{"version":3,"file":"useContextMenu-f3cf0db8.js","sources":["../../src/hooks/PRIVATE_useVisContextMenu/util.ts","../../src/hooks/PRIVATE_useVisContextMenu/ContextMenu.tsx","../../src/hooks/PRIVATE_useVisContextMenu/useContextMenu.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\n\nimport { Menu } from '../../UNSAFE_Menu';\n\nexport const initialMenuProps: MenuProps = {\n  isOpen: false,\n  initialFocus: 'menu',\n  placement: 'bottom-start',\n  offsetValue: 0,\n  anchorRef: { current: null }\n};\n\nexport type MenuProps = Pick<\n  ComponentProps<typeof Menu>,\n  'anchorRef' | 'initialFocus' | 'placement' | 'offsetValue' | 'isOpen'\n>;\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\nimport { Menu } from '#UNSAFE_Menu';\nimport { initialMenuProps, MenuProps } from './util';\nimport { Ref, useCallback, Dispatch, StateUpdater } from 'preact/hooks';\nimport { ContextMenuConfig } from '#utils/UNSAFE_visTypes/common';\nimport type { gestureTypes } from './useContextMenu';\n\nexport type Props<T> = Omit<ComponentProps<typeof Menu>, 'children'> & {\n  contextMenuConfig: ContextMenuConfig<T>;\n} & { contextMenuContext: T } & { rootRef: Ref<HTMLElement> } & {\n  setMenuProps: Dispatch<StateUpdater<MenuProps>>;\n} & { onContextMenuDismissed?: (gesture: gestureTypes) => void;  \n} & { gestureRef: Ref<gestureTypes>};\n\n/**\n * The internal component used to render a custom context menu\n */\nexport function ContextMenu<T>({\n  contextMenuConfig,\n  contextMenuContext,\n  rootRef,\n  setMenuProps,\n  onContextMenuDismissed,\n  gestureRef,\n  ...menuProps\n}: Props<T>) {\n  const handleCloseContextMenu = useCallback<Required<ComponentProps<typeof Menu>>['onClose']>(\n    (detail) => {\n      /* \n      TODO: Focus ring should be visible when context menu was closed because of selecting an item using keyboard, \n      but should not be visible when the selection was done using mouse or touch. This would probably means menu \n      onClose API is going to be changed a little bit so we can satisfy this requirement. JET-62372\n      */\n      //Focus has to be set on the current target that was obtained\n      //during context menu gesture when menu is dismissed or item is \"selected\"\n      if (detail.reason === 'dismissed' || detail.reason === 'itemAction') {\n        rootRef.current?.focus({ preventScroll: true });\n        onContextMenuDismissed?.(gestureRef.current);\n      }\n      // We close the menu.The only prop that matters here is isOpen\n      setMenuProps(initialMenuProps);\n    },\n    [rootRef, setMenuProps, onContextMenuDismissed]\n  );\n  return (\n    <Menu\n      {...menuProps}\n      onClose={handleCloseContextMenu}\n      aria-label={contextMenuConfig.accessibleLabel}>\n      {menuProps.isOpen && contextMenuConfig.itemsRenderer(contextMenuContext)}\n    </Menu>\n  );\n}\n","import { Ref, useCallback, useRef, useState } from 'preact/hooks';\n\nimport { ContextMenu } from './ContextMenu';\nimport { useContextMenuGesture } from '#hooks/UNSAFE_useContextMenuGesture';\nimport { Coords } from '../../UNSAFE_Floating';\n\nimport { ContextMenuConfig } from '../../utils/UNSAFE_visTypes/common';\nimport { MenuProps, initialMenuProps } from './util';\n\nexport type gestureTypes = 'mouse'|'touch'|'keyboard'|null;\nconst TOUCH_OFFSET_VALUE = 30;\n\nconst menuPropGestureStates: Record<\n  'mouse' | 'keyboard' | 'touch',\n  Omit<Required<MenuProps>, 'anchorRef' | 'isOpen'>\n> = {\n  mouse: {\n    initialFocus: 'menu',\n    placement: 'bottom-start',\n    offsetValue: 0\n  },\n  keyboard: {\n    initialFocus: 'firstItem',\n    placement: 'bottom-start',\n    offsetValue: 0\n  },\n  touch: {\n    initialFocus: 'menu',\n    placement: 'end',\n    offsetValue: TOUCH_OFFSET_VALUE\n  }\n};\n\ntype ContextMenuEventDetail = ({ gesture: 'mouse' | 'touch' } | { gesture: 'keyboard' }) & {\n  target: Element;\n};\n\ntype ContextMenuHandler<Context> = (detail: ContextMenuEventDetail) => {\n  context: Context;\n  elem: Element | null | undefined;\n};\n\ntype ContextMenuOptions = {\n  isDisabled?: boolean;\n};\ntype Props<Context> = {\n  onContextMenuHandler: ContextMenuHandler<Context>;\n  contextMenuOptions: ContextMenuOptions;\n  rootRef: Ref<HTMLElement>;\n  contextMenuConfig?: ContextMenuConfig<Context>;\n  onContextMenuDismissed?: (gesture: gestureTypes) => void;\n};\n\nexport function useContextMenu<Context>({\n  onContextMenuHandler,\n  contextMenuOptions,\n  rootRef,\n  contextMenuConfig,\n  onContextMenuDismissed\n}: Props<Context>) {\n  const [contextMenuContext, setContextMenuContext] = useState<Context>();\n\n  const [menuProps, setMenuProps] = useState<MenuProps>(initialMenuProps);\n\n  type ContextMenuEventDetail = (\n    | { gesture: 'mouse' | 'touch'; anchor: Coords }\n    | { gesture: 'keyboard'; anchor: Element }\n  ) & { currentTarget: Element; target: Element };\n\n  const gestureRef = useRef<gestureTypes>(null);\n  const onVisContextMenuHandler = useCallback(\n    ({ gesture, anchor, target }: ContextMenuEventDetail) => {\n      gestureRef.current = gesture;\n      const { context, elem } = onContextMenuHandler({\n        gesture,\n        target\n      });\n      setContextMenuContext(context);\n      setMenuProps({\n        ...menuPropGestureStates[gesture],\n        anchorRef: { current: elem? elem : anchor },\n        isOpen: true\n      });\n    },\n    [onContextMenuHandler]\n  );\n\n  const contextMenuContent = contextMenuConfig && (\n    <ContextMenu\n      {...menuProps}\n      onContextMenuDismissed={onContextMenuDismissed}\n      gestureRef={gestureRef}\n      setMenuProps={setMenuProps}\n      rootRef={rootRef}\n      contextMenuConfig={contextMenuConfig}\n      contextMenuContext={contextMenuContext!}\n    />\n  );\n\n  const { triggerProps } = useContextMenuGesture(onVisContextMenuHandler, contextMenuOptions);\n\n  return { contextMenuProps: triggerProps, contextMenuContent };\n}\n"],"names":["useCallback","_jsx","Menu","useState","useRef","useContextMenuGesture"],"mappings":"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"}