{"version":3,"file":"BaseButton-5b2791b1.js","sources":["../../src/UNSAFE_BaseButton/BaseButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Vers.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { useHover } from '../hooks/UNSAFE_useHover';\nimport { useActive } from '../hooks/UNSAFE_useActive';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { useColorScheme } from '../hooks/UNSAFE_useColorScheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport { dimensionInterpolations } from '../utils/UNSAFE_interpolations/dimensions';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { BaseButtonVariantOptions } from './themes/BaseButtonStyles.css';\nimport { BaseButtonRedwoodTheme } from './themes/redwood/BaseButtonTheme';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\n\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\n\nexport type ActionDetail = {\n  reason: 'pointer' | 'keyboard';\n};\n\ntype BaseButtonElementDetails =\n  | {\n      type: 'button';\n      isFocusable?: never;\n      buttonType?: 'button' | 'submit';\n      isLabel?: never;\n      isSwitch?: boolean;\n    }\n  | {\n      type: 'a';\n      href: string;\n      target?: string;\n      rel?: string;\n      isFocusable?: never;\n      isLabel?: never;\n      isSwitch?: never;\n    }\n  | { type: 'span'; isFocusable?: boolean; isLabel?: boolean; isSwitch?: boolean };\n\ntype IntrinsicProps = Pick<\n  HTMLAttributesSignalExcluded<HTMLElement>,\n  | 'autofocus'\n  | 'title'\n  | 'onBlur'\n  | 'onFocus'\n  | 'onMouseEnter'\n  | 'onMouseLeave'\n  | 'onTouchEnd'\n  | 'onTouchStart'\n  | 'onKeyDown'\n>;\nexport type StylingOptions =\n  | 'default'\n  | 'min'\n  | 'embedded'\n  | 'container'\n  | 'unstyled'\n  | 'fill'\n  | 'noBorderRadiusEnd'\n  | 'noBorderRadiusStart'\n  | 'noBorderEnd'\n  | 'noBorderStart'\n  | 'active'\n  | 'selected'\n  | 'buttonSetItem'\n  | 'trailingItem'\n  | 'widthEqual'\n  | 'widthAuto';\n\ntype AriaProps = {\n  'aria-label'?: string;\n  'aria-hidden'?: boolean;\n  'aria-expanded'?: boolean;\n  'aria-roledescription'?: string;\n  'aria-describedby'?: string;\n  'aria-haspopup'?: HTMLAttributesSignalExcluded['aria-haspopup'];\n  'aria-pressed'?: boolean;\n  'aria-checked'?: boolean;\n};\n\nexport type Props = IntrinsicProps &\n  AriaProps &\n  DimensionProps &\n  TestIdProps & {\n    /**\n     *The default slot is the button's text label. The oj-c-base-button element accepts plain text or DOM nodes as children for the default slot.\"\n     */\n    children?: ComponentChildren;\n\n    /**\n     * Specifies that the button element should be disabled.\n     */\n    isDisabled?: boolean;\n\n    /**\n     * Specifies if repeated events are dispatched for key or pointer held down\n     */\n    isRepeat?: boolean;\n\n    /**\n     *\n     * Indicates in what states the button has chrome (background and border).\n     *     \"ghost\": \"Ghost buttons are the least prominent variation.  Ghost buttons are\n     * useful for performing low-priority tasks, such as manipulating the UI.\",\n     *     \"borderless\"': \"Borderless buttons are a more prominent variation. Borderless\n     * buttons are useful for supplemental actions that require minimal emphasis.\",\n     *     \"outlined\"': \"Outlined buttons are salient, but lighter weight than\n     * solid buttons. Outlined buttons are useful for secondary actions.\",\n     *     \"solid\"': \"Solid buttons stand out, and direct the user's attention to the\n     *  most important actions in the UI.\",\n     *     \"callToAction\"': \"A Call To Action (CTA) button guides the user to take or\n     * complete the action that is the main goal of the page or page section. There\n     * should only be one CTA button on a page at any given time.\",\n     *     \"danger\"': \"A Danger button alerts the user to a dangerous situation.\"\n     */\n    variant?: 'ghost' | 'borderless' | 'outlined' | 'solid' | 'callToAction' | 'danger';\n\n    /**\n     * The size indicates how large the button is rendered: 'xs', \"sm\", \"md\" (default), \"lg\".\n     */\n    size?: 'xs' | 'sm' | 'md' | 'lg';\n\n    /**\n     * Edge can be used to specify that the button is intended to go at the bottom of\n     * a region, stretching from left to right: \"bottom\" or \"none\" (default).\n     */\n    edge?: 'none' | 'bottom';\n\n    /**\n     * Styling can be used for customizing buttons by removing label padding (\"min\") or\n     * removing all styling (\"unstyled\").\n     */\n    styling?: StylingOptions[];\n\n    /**\n     * Triggered when a button is clicked, whether by keyboard, mouse, or touch events.\n     */\n    onAction?: (details: ActionDetail) => void;\n\n    /**\n     * Indicate element type and associated details\n     */\n    elementDetails?: BaseButtonElementDetails;\n  };\n\nconst interpolations = [...Object.values(dimensionInterpolations)];\nconst styleInterpolations = mergeInterpolations<Props>(interpolations);\n\nconst clientHints = getClientHints();\n// :active only works on IOS devices if a touch handler exists\nconst iosProps = clientHints.platform === 'ios' ? { ontouchstart: function () {} } : {};\nconst isHybrid = getClientHints().hoverSupport === 'events';\n\nconst roleProps = (\n  elType: string,\n  hidden: boolean,\n  isFocusable: boolean,\n  isLabel: boolean,\n  isSwitch: boolean\n): { role?: HTMLAttributesSignalExcluded['role'] } => {\n  switch (elType) {\n    case 'link':\n      return { role: 'link' };\n    case 'button':\n      return isSwitch ? { role: 'switch' } : {};\n    case 'span':\n      return isLabel\n        ? {}\n        : hidden\n        ? { role: 'none' }\n        : isFocusable\n        ? isSwitch\n          ? { role: 'switch' }\n          : { role: 'button' }\n        : { role: 'img' };\n    default:\n      return hidden ? { role: 'none' } : isFocusable ? { role: 'button' } : { role: 'img' };\n  }\n};\n\nexport const BaseButton = forwardRef(\n  (\n    {\n      variant,\n      isDisabled = false,\n      isRepeat = false,\n      size,\n      elementDetails = { type: 'button', buttonType: 'button' },\n      styling = ['default'],\n      edge = 'none',\n      'aria-label': accessibleLabel,\n      'aria-hidden': ariaHidden,\n      'aria-expanded': ariaExpanded,\n      'aria-roledescription': ariaRoledescription,\n      'aria-haspopup': ariaHasPopup,\n      'aria-describedby': ariaDescribedBy,\n      'aria-pressed': ariaPressed,\n      'aria-checked': ariaChecked,\n      testId,\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      onTouchEnd,\n      onTouchStart,\n      onKeyDown,\n      ...props\n    }: Props,\n    ref?:\n      | ForwardedRef<HTMLButtonElement>\n      | ForwardedRef<HTMLAnchorElement>\n      | ForwardedRef<HTMLSpanElement>\n  ) => {\n    const pressHandler = (e: Event) => {\n      if (props.onAction) {\n        props.onAction({\n          reason: e.type == 'keyup' ? 'keyboard' : 'pointer'\n        });\n      }\n    };\n\n    const { pressProps } = usePress(pressHandler, {\n      isDisabled,\n      isRepeat\n    });\n    const isStyled = (name: StylingOptions) => {\n      return styling.indexOf(name) > -1;\n    };\n    const { hoverProps, isHover } = useHover({ isDisabled: !isHybrid });\n    const { activeProps, isActive } = useActive();\n    const { class: cls, ...styles } = styleInterpolations(props);\n    const {\n      type: elementType = 'button',\n      isFocusable: isElementFocusable = true,\n      isLabel: isElementLabel = false,\n      isSwitch: isElementSwitch = false,\n      buttonType = 'button',\n      ...elementProps\n    } = { ...elementDetails };\n    const typeProps =\n      elementType === 'button' && buttonType === 'button' ? { type: buttonType } : {};\n\n    // 'role' should be 'none' when aria-hidden is true or 'img' when false and not focusable\n    const role = roleProps(\n      elementType,\n      ariaHidden ?? false,\n      isElementFocusable,\n      isElementLabel,\n      isElementSwitch\n    );\n    const ElementType = elementDetails.type;\n    const isSpan = ElementType == 'span';\n    const isBaseButton = ElementType == 'button';\n    const { tabbableModeProps } = useTabbableMode(isDisabled);\n    const colorScheme = useColorScheme();\n\n    const { variantClasses } = useComponentTheme<BaseButtonVariantOptions>(BaseButtonRedwoodTheme, {\n      size,\n      variant,\n      unstyled: isStyled('unstyled') ? 'isUnstyled' : 'notUnstyled',\n      embedded: isStyled('embedded') ? 'isEmbedded' : 'notEmbedded',\n      container: isStyled('container') ? 'isContainer' : 'notContainer',\n      noBorderRadiusStart: isStyled('noBorderRadiusStart')\n        ? 'isNoBorderRadiusStart'\n        : 'notNoBorderRadiusStart',\n      noBorderRadiusEnd: isStyled('noBorderRadiusEnd')\n        ? 'isNoBorderRadiusEnd'\n        : 'notNoBorderRadiusEnd',\n      noBorderStart: isStyled('noBorderStart') ? 'isNoBorderStart' : 'notNoBorderStart',\n      noBorderEnd: isStyled('noBorderEnd') ? 'isNoBorderEnd' : 'notNoBorderEnd',\n      activeStyle: isStyled('active') ? 'isActiveStyle' : 'notActiveStyle',\n      selectedStyle: isStyled('selected') ? 'isSelectedStyle' : 'notSelectedStyle',\n      buttonSetItem: isStyled('buttonSetItem') ? 'isButtonSetItem' : 'notButtonSetItem',\n      trailingItem: isStyled('trailingItem') ? 'isTrailingItem' : 'notTrailingItem',\n      fill: isStyled('fill') ? 'isFill' : 'notFill',\n      min: isStyled('min') ? 'isMin' : 'notMin',\n      disabled: isDisabled ? 'isDisabled' : 'notDisabled',\n      edge,\n      hybrid: isHybrid ? 'isHybrid' : 'notHybrid',\n      active: isActive ? 'isActive' : 'notActive',\n      hover: isHover ? 'isHover' : 'notHover',\n      span: isSpan ? 'isSpan' : 'notSpan',\n      widthEqual: isStyled('widthEqual') ? 'isWidthEqual' : 'notWidthEqual',\n      widthAuto: isStyled('widthAuto') ? 'isWidthAuto' : 'notWidthAuto',\n      colorScheme\n    });\n\n    const globalEventProps = {\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      onTouchEnd,\n      onTouchStart,\n      onKeyDown\n    };\n\n    const arDisabled = isBaseButton ? {} : isDisabled ? { 'aria-disabled': isDisabled } : {};\n    const arHaspopups = ariaHasPopup ? { 'aria-haspopup': ariaHasPopup } : {};\n\n    const ariaProps =\n      role.role === 'none'\n        ? {}\n        : {\n            'aria-label': accessibleLabel,\n            'aria-describedby': ariaDescribedBy,\n            'aria-hidden': ariaHidden,\n            'aria-roledescription': ariaRoledescription,\n            'aria-expanded': ariaExpanded,\n            'aria-pressed': ariaPressed,\n            'aria-checked': ariaChecked,\n            ...arDisabled,\n            ...arHaspopups\n          };\n\n    const mergedProps = mergeProps(\n      elementProps,\n      pressProps,\n      iosProps,\n      hoverProps,\n      isStyled('container') ? {} : activeProps,\n      globalEventProps\n    );\n\n    const wrapperClasses = classNames([cls, variantClasses]);\n    const testIdProps = useTestId(testId);\n\n    const getTabIndex = () => {\n      if (\n        (isSpan && (isElementFocusable === false || isDisabled)) ||\n        (isBaseButton && isDisabled)\n      ) {\n        // no tabIndex value should be defined for disabled button elements and non-focusable or disabled span elements\n        return { tabIndex: undefined };\n      }\n      return tabbableModeProps;\n    };\n\n    return (\n      <ElementType\n        // The ref casting was done to satisfy TS compiler, when the forwardRef had to be updated to ForwardedRef.\n        ref={\n          ref as ForwardedRef<HTMLButtonElement> &\n            ForwardedRef<HTMLAnchorElement> &\n            ForwardedRef<HTMLSpanElement>\n        }\n        disabled={isDisabled}\n        class={wrapperClasses}\n        style={styles}\n        autofocus={props['autofocus']}\n        title={props.title}\n        {...ariaProps}\n        {...getTabIndex()}\n        {...typeProps}\n        {...testIdProps}\n        {...mergedProps}\n        {...role}>\n        {props.children}\n      </ElementType>\n    );\n  }\n);\n\nBaseButton.displayName = 'BaseButton';\n"],"names":["_jsx"],"mappings":"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"}