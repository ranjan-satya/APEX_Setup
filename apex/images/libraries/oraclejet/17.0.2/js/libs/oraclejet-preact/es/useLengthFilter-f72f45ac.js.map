{"version":3,"file":"useLengthFilter-f72f45ac.js","sources":["../../src/hooks/UNSAFE_useLengthFilter/useLengthFilter.ts"],"sourcesContent":["import { ComponentProps } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport { TextFieldInput } from '../../UNSAFE_TextField';\nimport { calcLength, CountUnit as _CountUnit, filter } from '../../utils/UNSAFE_lengthFilter';\n\nexport type CountUnit = _CountUnit;\n\ntype PickedPropsFromTextFieldInput = Pick<\n  ComponentProps<typeof TextFieldInput>,\n  'onCommit' | 'onInput' | 'value'\n>;\ntype UseLengthFilterProps = PickedPropsFromTextFieldInput & {\n  maxLength?: number;\n  maxLengthUnit?: CountUnit;\n};\n\n/**\n * A custom hook that applies the length filter to text field input\n * @param param0 The props for the useLengthFilter hook\n * @returns The filtered event handlers\n */\nexport function useLengthFilter({\n  maxLength,\n  maxLengthUnit,\n  onCommit,\n  onInput,\n  value\n}: UseLengthFilterProps) {\n  const hasNoValue = value === undefined;\n  const [isMaxLengthExceeded, setMaxLengthExceeded] = useState(false);\n  const parse = useCallback(\n    (value: string) => filter(value, maxLength, maxLengthUnit),\n    [maxLength, maxLengthUnit]\n  );\n  // Reapply maxLength filter when the value is changed\n  useEffect(() => {\n    if (hasNoValue) {\n      return;\n    }\n\n    const filteredValue = parse(value);\n    if (filteredValue !== value) {\n      onInput?.({ previousValue: value, value: filteredValue });\n      onCommit?.({ previousValue: value, value: filteredValue });\n\n      // Value is filtered, means that the max length is exceeded\n      setMaxLengthExceeded(true);\n    } else {\n      // Value is not filtered, means that the max length is not exceeded\n      setMaxLengthExceeded(false);\n    }\n  }, [value, onCommit, onInput, parse, hasNoValue]);\n\n  const onFilteredInput = useCallback(\n    (...args: Parameters<Exclude<typeof onInput, undefined>>) => {\n      const { previousValue, value } = args[0];\n      const filteredValue = parse(value ?? '');\n\n      // Call the onInput event only when the value is changed\n      if (previousValue !== filteredValue) {\n        onInput?.({ ...args[0], value: filteredValue });\n        // value is not filtered, so the max length is not exceeded\n        setMaxLengthExceeded(false);\n      } else {\n        // value is changed but then filtered to previous value\n        // meaning that the max length was exceeded\n        setMaxLengthExceeded(true);\n      }\n    },\n    [onInput, parse]\n  );\n\n  const valueLength = hasNoValue ? undefined : calcLength(value, maxLengthUnit);\n  // this is set to true when the parsed value length is exactly the maxlength\n  const isMaxLengthReached = hasNoValue ? undefined : maxLength === valueLength;\n\n  return {\n    valueLength,\n    isMaxLengthReached,\n    isMaxLengthExceeded,\n    onFilteredInput\n  };\n}\n"],"names":[],"mappings":";;;;AAgBA;;;;AAIG;AACa,SAAA,eAAe,CAAC,EAC9B,SAAS,EACT,aAAa,EACb,QAAQ,EACR,OAAO,EACP,KAAK,EACgB,EAAA;AACrB,IAAA,MAAM,UAAU,GAAG,KAAK,KAAK,SAAS,CAAC;IACvC,MAAM,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpE,MAAM,KAAK,GAAG,WAAW,CACvB,CAAC,KAAa,KAAK,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,aAAa,CAAC,EAC1D,CAAC,SAAS,EAAE,aAAa,CAAC,CAC3B,CAAC;;IAEF,SAAS,CAAC,MAAK;QACb,IAAI,UAAU,EAAE;YACd,OAAO;SACR;AAED,QAAA,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACnC,QAAA,IAAI,aAAa,KAAK,KAAK,EAAE;AAC3B,YAAA,OAAO,GAAG,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;AAC1D,YAAA,QAAQ,GAAG,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;;YAG3D,oBAAoB,CAAC,IAAI,CAAC,CAAC;SAC5B;aAAM;;YAEL,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC7B;AACH,KAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;IAElD,MAAM,eAAe,GAAG,WAAW,CACjC,CAAC,GAAG,IAAoD,KAAI;QAC1D,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;;AAGzC,QAAA,IAAI,aAAa,KAAK,aAAa,EAAE;AACnC,YAAA,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;;YAEhD,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;;;YAGL,oBAAoB,CAAC,IAAI,CAAC,CAAC;SAC5B;AACH,KAAC,EACD,CAAC,OAAO,EAAE,KAAK,CAAC,CACjB,CAAC;AAEF,IAAA,MAAM,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;;AAE9E,IAAA,MAAM,kBAAkB,GAAG,UAAU,GAAG,SAAS,GAAG,SAAS,KAAK,WAAW,CAAC;IAE9E,OAAO;QACL,WAAW;QACX,kBAAkB;QAClB,mBAAmB;QACnB,eAAe;KAChB,CAAC;AACJ;;;;"}