{"version":3,"file":"useChartNav-be57fa70.js","sources":["../../src/hooks/PRIVATE_useChartNav/useChartNav.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref, useRef, useState } from 'preact/hooks';\nimport { getRandomId } from '../../utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport { getInfo, cancelEvent } from '../../utils/UNSAFE_visUtils';\nimport { ChartGroupInfo, Info } from '../../utils/UNSAFE_visTypes/chart';\nimport { useVisHover } from '#hooks/PRIVATE_useVisHover';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\ntype Props = {\n  rootRef: Ref<HTMLElement>;\n  getNextChartItem: (\n    info: Info,\n    arrow: 'ArrowLeft' | 'ArrowRight' | 'ArrowDown' | 'ArrowUp'\n  ) => Info;\n  getNextNavGroup: (info: ChartGroupInfo, arrow: 'ArrowLeft' | 'ArrowRight') => ChartGroupInfo;\n  getDefaultNavGroup: (info: ChartGroupInfo) => ChartGroupInfo | undefined;\n  xIndexExtent: { startIndex: number; endIndex: number };\n  touchResponse: 'touchStart' | 'touchHold';\n  onItemHover?: (detail: { seriesIndex?: number; groupIndex?: number }) => void;\n  onItemFocus?: (detail: { seriesIndex?: number; groupIndex?: number }) => void;\n  drilling?: 'on' | 'groupsOnly' | 'off';\n};\n\n/**\n * Returns whether the two groups are same.\n * @param g1 GroupInfo\n * @param g2 GroupInfo\n * @returns\n */\nfunction isGroupEqual(g1?: Partial<ChartGroupInfo>, g2?: Partial<ChartGroupInfo>) {\n  return (\n    g1?.groupIndex === g2?.groupIndex &&\n    g1?.isCurrent === g2?.isCurrent &&\n    g1?.isFocusVisible === g2?.isFocusVisible\n  );\n}\n\n/**\n * Returns whether the two item info are same.\n * @param i1 ItemInfo\n * @param i2 ItemInfo\n * @returns\n */\nfunction isItemEqual(i1?: Info, i2?: Info) {\n  return i1?.seriesIndex === i2?.seriesIndex && isGroupEqual(i1, i2);\n}\n\n/**\n * Returns whether the two item info are same.\n * @param i1 ItemInfo\n * @param i2 ItemInfo\n * @returns\n */\nfunction isItemInfoEqual(i1?: Info, i2?: Info) {\n  return i1?.seriesIndex === i2?.seriesIndex && i2?.groupIndex === i1?.groupIndex;\n}\n\n/**\n * Hook to handle chart navigation.\n */\nexport function useChartNav({\n  rootRef,\n  getNextChartItem,\n  getDefaultNavGroup,\n  getNextNavGroup,\n  xIndexExtent,\n  touchResponse,\n  onItemHover,\n  onItemFocus,\n  drilling\n}: Props) {\n  const [focusedItemInfo, setfocusedItemInfo] = useState<Info>({\n    groupIndex: xIndexExtent.startIndex,\n    seriesIndex: 0\n  });\n\n  const isGroupDrillEnabled = drilling === 'on' || drilling === 'groupsOnly';\n  const [hoveredItemInfo, setHoveredItemInfo] = useState<Info>();\n\n  const [focusedGroupInfo, setFocusedGroupInfo] = useState<ChartGroupInfo>({ groupIndex: 0 });\n  const activeId = useRef<string>();\n  const previousHoveredItemRef = useRef<Info>();\n  const previousFocusedItemRef = useRef<Info>();\n\n  const isItemFocused = focusedItemInfo.isCurrent;\n  const isGroupFocused = focusedGroupInfo.isCurrent;\n\n  const updateGroupInfo = (groupInfo: ChartGroupInfo) => {\n    if (!isGroupEqual(groupInfo, focusedGroupInfo)) {\n      setFocusedGroupInfo(groupInfo);\n    }\n  };\n\n  const update = (type: 'hover' | 'focus', info?: Info) => {\n    const prevInfoRef = type === 'hover' ? previousHoveredItemRef : previousFocusedItemRef;\n    const callback = type === 'hover' ? onItemHover : onItemFocus;\n    if (!isItemEqual(info, prevInfoRef.current)) {\n      const input = { groupIndex: info?.groupIndex, seriesIndex: info?.seriesIndex };\n      callback?.(input);\n      prevInfoRef.current = info;\n      activeId.current = getRandomId();\n    }\n  };\n\n  const updateFocusedItemInfo = (itemInfo: Info) => {\n    if (!isItemEqual(itemInfo, focusedItemInfo)) {\n      setfocusedItemInfo(itemInfo);\n      // preserve hovered effect if same item is focused\n      if (hoveredItemInfo && !isItemInfoEqual(hoveredItemInfo, itemInfo)) {\n        setHoveredItemInfo({ ...hoveredItemInfo, isCurrent: false });\n      }\n      if (itemInfo.isCurrent) {\n        update('focus', itemInfo);\n      }\n    }\n  };\n\n  const updateHoveredItemInfo = (itemInfo?: Info) => {\n    if (!hoveredItemInfo || !isItemEqual(itemInfo, hoveredItemInfo)) {\n      setHoveredItemInfo(itemInfo);\n      setfocusedItemInfo({ ...focusedItemInfo, isCurrent: false });\n      update('hover', itemInfo);\n    }\n  };\n\n  const handleTab = (event: KeyboardEvent) => {\n    const defaultGroup = getDefaultNavGroup(focusedGroupInfo);\n    const validItemInfoIndex = Math.max(\n      xIndexExtent.startIndex,\n      Math.min(xIndexExtent.endIndex, focusedItemInfo.groupIndex!)\n    );\n    if (event.shiftKey) {\n      if (isItemFocused) {\n        updateFocusedItemInfo({\n          ...focusedItemInfo,\n          groupIndex: validItemInfoIndex,\n          isCurrent: false,\n          isFocusVisible: false\n        });\n        update('focus', undefined);\n      } else if (isGroupFocused) {\n        updateFocusedItemInfo({\n          ...focusedItemInfo,\n          groupIndex: validItemInfoIndex,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        if (isGroupDrillEnabled) {\n          updateGroupInfo({\n            ...focusedGroupInfo,\n            ...defaultGroup,\n            isCurrent: false,\n            isFocusVisible: false\n          });\n          cancelEvent(event);\n        }\n      } else if (isGroupDrillEnabled) {\n        updateGroupInfo({\n          ...focusedGroupInfo,\n          ...defaultGroup,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n      }\n    } else {\n      if (isItemFocused) {\n        updateFocusedItemInfo({\n          ...focusedItemInfo,\n          groupIndex: validItemInfoIndex,\n          isCurrent: false,\n          isFocusVisible: false\n        });\n        if (isGroupDrillEnabled) {\n          updateGroupInfo({\n            ...focusedGroupInfo,\n            ...defaultGroup,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n          cancelEvent(event);\n        }\n        update('focus', undefined);\n      } else if (isGroupFocused && isGroupDrillEnabled) {\n        updateGroupInfo({\n          ...focusedGroupInfo,\n          ...defaultGroup,\n          isCurrent: false,\n          isFocusVisible: false\n        });\n      } else {\n        updateFocusedItemInfo({\n          ...focusedItemInfo,\n          groupIndex: validItemInfoIndex,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n      }\n    }\n    activeId.current = getRandomId();\n  };\n\n  const onKeyUp = (event: KeyboardEvent) => {\n    const key = event.key;\n    switch (key) {\n      case 'Tab': {\n        if (!isItemFocused && !isGroupFocused) {\n          handleTab(event);\n        }\n        break;\n      }\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const key = event.key;\n    switch (key) {\n      case 'Tab': {\n        handleTab(event);\n        break;\n      }\n      case 'ArrowRight': {\n        if (isGroupFocused) {\n          const info = getNextNavGroup(focusedGroupInfo, key);\n          updateGroupInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        } else {\n          const info = getNextChartItem(focusedItemInfo, key);\n          updateFocusedItemInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        }\n        setHoveredItemInfo(undefined);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowLeft': {\n        if (isGroupFocused) {\n          const info = getNextNavGroup(focusedGroupInfo, key);\n          updateGroupInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        } else {\n          const info = getNextChartItem(focusedItemInfo, key);\n          updateFocusedItemInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        }\n        setHoveredItemInfo(undefined);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowUp': {\n        if (isItemFocused) {\n          const info = getNextChartItem(focusedItemInfo, key);\n          updateFocusedItemInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        }\n        setHoveredItemInfo(undefined);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowDown': {\n        if (isItemFocused) {\n          const info = getNextChartItem(focusedItemInfo, key);\n          updateFocusedItemInfo({\n            ...info,\n            isCurrent: true,\n            isFocusVisible: true\n          });\n        }\n        setHoveredItemInfo(undefined);\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n\n  const onPointerUp = (event: PointerEvent) => {\n    const info = getInfo(rootRef, event.target as HTMLElement);\n\n    if (!info) {\n      return;\n    }\n    const { seriesIndex, groupIndex } = info;\n\n    if (seriesIndex != undefined && groupIndex != undefined) {\n      updateFocusedItemInfo({\n        seriesIndex,\n        groupIndex,\n        isCurrent: false,\n        isFocusVisible: false\n      });\n      updateGroupInfo({\n        ...focusedGroupInfo,\n        isCurrent: false,\n        isFocusVisible: false\n      });\n    } else if (groupIndex !== undefined && seriesIndex === undefined) {\n      updateGroupInfo({\n        groupIndex,\n        isCurrent: true,\n        isFocusVisible: false\n      });\n      updateFocusedItemInfo({\n        ...focusedItemInfo,\n        isCurrent: false,\n        isFocusVisible: false\n      });\n    }\n  };\n\n  const onHover = (event: PointerEvent) => {\n    const info = getInfo(rootRef, event.target as HTMLElement);\n    if (!info) {\n      updateHoveredItemInfo(undefined);\n      return;\n    }\n    const { seriesIndex, groupIndex } = info;\n\n    if (seriesIndex != undefined) {\n      updateHoveredItemInfo({\n        seriesIndex,\n        groupIndex,\n        isCurrent: true\n      });\n      updateFocusedItemInfo({\n        ...focusedItemInfo,\n        isCurrent: false\n      });\n    }\n  };\n\n  const onHoverLeave = () => {\n    updateHoveredItemInfo(undefined);\n  };\n\n  const hoverHandlers = useVisHover(onHover, undefined, onHoverLeave, touchResponse);\n\n  const onFocusUpdate = () => {\n    const validItemInfoIndex = Math.max(\n      xIndexExtent.startIndex,\n      Math.min(xIndexExtent.endIndex, focusedItemInfo.groupIndex!)\n    );\n    updateFocusedItemInfo({\n      ...focusedItemInfo,\n      groupIndex: validItemInfoIndex,\n      isCurrent: true,\n      isFocusVisible: true\n    });\n  };\n\n  const onBlur = () => {\n    updateFocusedItemInfo({\n      ...focusedItemInfo,\n      isCurrent: false,\n      isFocusVisible: false\n    });\n  };\n\n  return {\n    focusedItemInfo,\n    focusedGroupInfo,\n    hoveredItemInfo,\n    activeId: activeId.current,\n    navProps: mergeProps(hoverHandlers, {\n      onKeyDown,\n      onKeyUp,\n      onPointerUp,\n      onBlur\n    }),\n    onFocusUpdate\n  };\n}\n"],"names":[],"mappings":"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"}