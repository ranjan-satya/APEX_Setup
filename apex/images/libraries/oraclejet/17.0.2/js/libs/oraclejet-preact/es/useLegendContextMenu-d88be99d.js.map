{"version":3,"file":"useLegendContextMenu-d88be99d.js","sources":["../../src/UNSAFE_Legend/LegendImageMarker.tsx","../../src/UNSAFE_Legend/LegendSymbol.tsx","../../src/UNSAFE_Legend/LegendText.tsx","../../src/utils/PRIVATE_legendUtils/legendUtils.ts","../../src/PRIVATE_BaseLegend/BaseLegendItem.tsx","../../src/PRIVATE_BaseLegend/BaseLegend.tsx","../../src/UNSAFE_Legend/useLegendDatatip.ts","../../src/UNSAFE_Legend/useLegendLayout.ts","../../src/PRIVATE_BaseLegend/useLegendContextMenu.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { styles } from './themes/LegendStyles.css';\n\ntype ImageMarkerProps = {\n  source: string;\n};\n\nexport function ImageMarker(props: ImageMarkerProps) {\n  const { imageMarkerStyle } = styles;\n  return <img class={imageMarkerStyle} src={props.source} />;\n}\n","import { SvgSymbol } from '../PRIVATE_SvgShapes';\nimport { ImageMarker } from './LegendImageMarker';\nimport { Property } from 'csstype';\nimport { styles } from './themes/LegendStyles.css';\nimport { SymbolProps } from '../utils/UNSAFE_visTypes/legend';\n\ntype LegendSymbolProps = {\n  isHidden?: boolean;\n  lineLength?: number;\n  width?: Property.Width;\n  height?: Property.Height;\n  borderColor?: Property.Color;\n} & SymbolProps;\n\nexport const LegendSymbol = ({\n  // The default color is not in the redwood pallete.\n  // TODO: replace default legend color with UX approved pallete color when available.\n  markerColor = '#a6acb1',\n  lineColor = '#a6acb1',\n  markerShape = 'square',\n  isHidden = false,\n  lineStyle = 'none',\n  ...props\n}: LegendSymbolProps) => {\n  const { legendSymbolBaseStyle } = styles;\n  const dimensionsNotSet = props.width == null && props.height == null;\n  const setAspectRatioNone =\n    !dimensionsNotSet && (markerShape === 'rectangle' || markerShape === 'ellipse');\n  const defaultLineWidth = lineStyle != 'none' && markerShape != 'none' ? 2 : 3;\n  return (\n    <div className={legendSymbolBaseStyle} style={{ width: props.width, height: props.height }}>\n      {props.source ? (\n        <ImageMarker source={props.source} />\n      ) : (\n        <SvgSymbol\n          setAspectRatioNone={setAspectRatioNone}\n          markerShape={isHidden ? 'square' : markerShape}\n          lineStyle={isHidden ? 'none' : lineStyle}\n          lineColor={lineColor}\n          lineLength={props.lineLength}\n          lineWidth={props.lineWidth != null ? props.lineWidth : defaultLineWidth}\n          markerColor={isHidden ? 'transparent' : markerColor}\n          borderColor={isHidden ? markerColor || lineColor : props.borderColor}\n          setAbsolutePos={true}\n        />\n      )}\n    </div>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Text } from '../UNSAFE_Text';\nimport { Property } from 'csstype';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { styles } from './themes/LegendStyles.css';\n\ntype LegendTextProps = {\n  text: string;\n  type: 'label' | 'title';\n  fontStyle?: Property.FontStyle;\n  fontSize?: Property.FontSize;\n  fontWeight?: Property.FontWeight;\n  textDecoration?: Property.TextDecoration;\n  color?: Property.Color;\n  fontFamily?: Property.FontFamily;\n  id?: string;\n  align?: 'start' | 'center' | 'end';\n};\n\n/**\n * Returns the legend text component.\n */\nexport const LegendText = ({\n  text,\n  type = 'label',\n  id,\n  align = 'start',\n  ...props\n}: LegendTextProps) => {\n  const {\n    legendTextBaseStyle,\n    legendTextTitle,\n    legendTitleStartAlign,\n    legendTitleCenterAlign,\n    legendTitleEndAlign\n  } = styles;\n  const isTitle = type === 'title';\n  return (\n    <div\n      class={classNames([\n        legendTextBaseStyle,\n        isTitle ? legendTextTitle : '',\n        isTitle && align === 'start' ? legendTitleStartAlign : '',\n        isTitle && align === 'center' ? legendTitleCenterAlign : '',\n        isTitle && align === 'end' ? legendTitleEndAlign : ''\n      ])}\n      style={{\n        ...props\n      }}>\n      <Text size=\"inherit\" variant=\"inherit\" weight=\"inherit\" truncation={'ellipsis'} id={id}>\n        {text}\n      </Text>\n    </div>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { HTMLAttributesSignalExcluded } from '../UNSAFE_attributeUtils';\nimport { LayoutInfo } from '../../UNSAFE_Legend/useLegendLayout';\nimport { dvtVars } from '../../Common/themes/themeContract.css';\nimport { xUnits } from '../../UNSAFE_Theme/utils';\nimport { Font } from '../../hooks/PRIVATE_useTextDimensions';\nimport { styles } from '../../UNSAFE_Legend/themes/LegendStyles.css';\nimport { ItemInfo, LegendItemData, LegendSectionData } from '../UNSAFE_visTypes/legend';\nimport { cancelEvent } from '../../utils/UNSAFE_visUtils/eventsUtils';\n\n/**\n * Returns the value of the data-oj-item-index attribute for a given element.\n * @param element The HTML element.\n * @returns\n */\nexport const getItemInfo = (element: HTMLElement) => {\n  const item = element.dataset['ojItem'];\n  const section = element.dataset['ojSection'];\n\n  if (item == null || section == null) {\n    return;\n  }\n  return {\n    itemIdx: Number(item),\n    sectionIdx: Number(section)\n  };\n};\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param highlighted The set of highlighted item\n */\nexport function isItemHighlighted<K>(id: K, highlighted?: K[]) {\n  if (!highlighted) {\n    return;\n  }\n  if (highlighted.length === 0) {\n    return true;\n  }\n  return new Set(highlighted).has(id);\n}\n\n/**\n * Checks if the item is hidden.\n * @param id Id of the item.\n * @param hiddenIds The set of hidden items.\n * @returns\n */\nexport function isItemHidden<K>(id: K, hiddenIds?: K[]) {\n  if (!hiddenIds) {\n    return;\n  }\n  return new Set(hiddenIds).has(id);\n}\n/**\n * Checks if the item is the currentItem and if the focus ring\n * is visible.\n * @param itemInfo ItemInfo\n * @param itemIdx Item index\n * @param sectionIdx Section index\n */\nexport const hasFocusRing = (itemInfo: ItemInfo, itemIdx: number, sectionIdx?: number) => {\n  if (!itemInfo.isFocusVisible) return false;\n  const { itemIdx: item, sectionIdx: section } = itemInfo;\n\n  if (sectionIdx == null) {\n    return item === itemIdx;\n  }\n  return item === itemIdx && section === sectionIdx;\n};\n\n/**\n * Returns the text for the legend datatip.\n * @param items The legend items data.\n * @param itemInfoRef The item currently hovered.\n * @param currentItem The item that is currently keyboard focused.\n */\nexport function getDatatipText<K, D extends LegendItemData<K>>(\n  items: LegendItemData<K>[] | LegendSectionData<K, D>[],\n  getItem: (\n    itemInfo: ItemInfo,\n    items: LegendItemData<K>[] | LegendSectionData<K, D>[]\n  ) => LegendItemData<K> | undefined,\n  focusedItem: ItemInfo,\n  hoveredItem?: ItemInfo\n) {\n  const isPointerActive = hoveredItem?.isCurrent;\n\n  if (isPointerActive && hoveredItem.itemIdx != null) {\n    return getItem(hoveredItem, items)?.datatip;\n  }\n  if (focusedItem && focusedItem.isCurrent) {\n    return getItem(focusedItem, items)?.datatip;\n  }\n  return;\n}\n\n/**\n * Returns the aria properties for the legend.\n * @param isReadOnly { boolean } If the legend is readonly.\n * @param ariaLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getAriaProps<K>(\n  isReadOnly?: boolean,\n  ariaLabel?: string,\n  hiddenIds?: K[],\n  ariaDescribedBy?: string,\n  ariaLabelledBy?: string\n): {\n  'aria-label'?: HTMLAttributesSignalExcluded['aria-label'];\n  'aria-disabled'?: HTMLAttributesSignalExcluded['aria-disabled'];\n  'aria-describedby': HTMLAttributesSignalExcluded['aria-describedby'];\n  'aria-labelledby': HTMLAttributesSignalExcluded['aria-labelledby'];\n  role?: HTMLAttributesSignalExcluded['role'];\n} {\n  const hideAndShow = hiddenIds && !isReadOnly;\n  return {\n    'aria-label': ariaLabel,\n    'aria-disabled': isReadOnly,\n    role: hideAndShow ? 'menu' : 'application',\n    'aria-describedby': ariaDescribedBy,\n    'aria-labelledby': ariaLabelledBy\n  };\n}\n\n/**\n * Returns the item props for BaseLegendItem.\n * @param item The legend item.\n * @param itemIdx The item index of the item.\n * @param sectionIdx The section index of section of the item.\n * @param focusedItem The info of currently focused item.\n * @param isReadOnly Whether the legend is readonly.\n * @param hoveredItem The info of the currently hovered item.\n * @param hiddenIds The hidden ids.\n * @param highlightedIds The highlighted ids.\n */\nexport function getItemProps<K>(\n  item: LegendItemData<K>,\n  itemIdx: number,\n  sectionIdx: number | undefined,\n  focusedItem: ItemInfo,\n  isReadOnly?: boolean,\n  hoveredItem?: ItemInfo,\n  hiddenIds?: K[],\n  highlightedIds?: K[]\n) {\n  let isCurrent = false;\n  if (!isReadOnly) {\n    const isFocusedItem = itemIdx === focusedItem.itemIdx && sectionIdx === focusedItem.sectionIdx;\n    const isHoveredItem =\n      itemIdx === hoveredItem?.itemIdx && sectionIdx === hoveredItem?.sectionIdx;\n    isCurrent = !!(\n      (isFocusedItem && focusedItem.isCurrent) ||\n      (isHoveredItem && hoveredItem?.isCurrent)\n    );\n  }\n\n  return {\n    isCurrent,\n    isHighlighted: isItemHighlighted<K>(item.id, highlightedIds),\n    isHidden: isItemHidden(item.id, hiddenIds),\n    isFocused: hasFocusRing(focusedItem, itemIdx, sectionIdx),\n    key: item.id,\n    ...item\n  };\n}\n\n/**\n * Compares if two ItemInfo are equal\n * @param item1\n * @param item2\n * @returns\n */\nexport const isEqualItem = (item1?: ItemInfo, item2?: ItemInfo) => {\n  return item1?.itemIdx === item2?.itemIdx && item1?.sectionIdx === item2?.sectionIdx;\n};\n\n/**\n * Returns the num of cols and rows for the legend.\n */\nexport const getGridNums = (numItems: number, layoutInfo?: LayoutInfo) => {\n  let itemsPerRow;\n  let itemsPerCol;\n\n  if (layoutInfo?.isWrapped) {\n    itemsPerRow = layoutInfo.itemsPerRow;\n    itemsPerCol = Math.ceil(numItems / itemsPerRow);\n    itemsPerRow = Math.ceil(numItems / itemsPerCol);\n  }\n\n  return { itemsPerRow, itemsPerCol };\n};\n\n/**\n * Returns the grid row and column for given item.\n * @param noOfItems The number of items in the section.\n * @param index The index of the item.\n * @param itemsPerRow The num of items per row in the grid.\n * @param itemsPerCol The num of items per col in the grid.\n * @returns\n */\nexport function getGridCellIndices(\n  noOfItems: number,\n  index: number,\n  itemsPerRow?: number,\n  itemsPerCol?: number\n) {\n  let gridRow;\n  let gridCol;\n\n  if (itemsPerRow && itemsPerCol && noOfItems > itemsPerRow) {\n    gridRow = (index % itemsPerCol) + 1;\n    gridCol = Math.floor(index / itemsPerCol) + 1;\n  }\n  return { gridRow, gridCol };\n}\n\n/**\n * Returns the resolved values for the legend vars.\n */\n\nexport const legendVars = [\n  {\n    tokenVar: xUnits(1),\n    key: 'unit',\n    cssProp: 'padding'\n  },\n  {\n    tokenVar: dvtVars.label.sm.fontSize,\n    key: 'fontSize',\n    cssProp: 'font-size'\n  }\n];\n\n/**\n * Returns the resolved values for the legend vars.\n */\nexport function getLegendTextStyle(props: Font, resolvedVars: Record<string, any>) {\n  return {\n    fontStyle: props.fontStyle,\n    fontSize: (resolvedVars['fontSize'] ?? props.fontSize) as string | undefined,\n    fontWeight: props.fontWeight,\n    fontFamily: props.fontFamily\n  };\n}\n\n/**\n * Returns the style for current legend item.\n */\nexport function getLegendCurrentItemStyle(\n  isCurrent: boolean,\n  isHighlighted: boolean | undefined,\n  hideAndShowBehavior: 'on' | 'off',\n  hoverBehavior: 'dim' | 'none',\n  isHidden: boolean | undefined,\n  actionable: 'inherit' | 'off'\n) {\n  if (isCurrent) {\n    if (isHighlighted == null && isHidden == null && actionable !== 'off')\n      return styles.legendItemIsCurrentWithCursor;\n    else if (isHighlighted == null && hideAndShowBehavior === 'on' && actionable !== 'off')\n      return styles.legendItemIsCurrentWithCursor;\n    else if (isHidden == null && hoverBehavior === 'dim' && actionable !== 'off')\n      return styles.legendItemIsCurrentWithoutCursor;\n  }\n  return '';\n}\n\nexport function getIsLegendItemActionable(\n  legendData: any[],\n  isReadOnly: boolean,\n  isSectional?: boolean\n) {\n  return (itemInfo: ItemInfo) => {\n    let item;\n    if (isSectional && itemInfo.sectionIdx != null) {\n      item = legendData[itemInfo.sectionIdx].items[itemInfo.itemIdx];\n    } else {\n      item = legendData[itemInfo.itemIdx];\n    }\n    return !isReadOnly && item?.actionable !== 'off';\n  };\n}\n/*\n * Returns KeyUp handler for legend.\n * @param triggerOnAction\n * @param updatefocusedItemInfo\n * @param focusedItemInfo\n * @returns\n */\nexport function getKeyUpHandler(\n  triggerOnAction: () => void,\n  updatefocusedItemInfo: (itemInfo: ItemInfo) => void,\n  focusedItemInfo: ItemInfo,\n  isHideShow?: boolean\n) {\n  return (event: KeyboardEvent) => {\n    const key = event.code;\n    switch (key) {\n      case 'Space': {\n        if (isHideShow) {\n          triggerOnAction();\n          cancelEvent(event);\n        }\n        break;\n      }\n      case 'Enter': {\n        triggerOnAction();\n        cancelEvent(event);\n        break;\n      }\n      case 'Home': {\n        updatefocusedItemInfo({\n          itemIdx: 0,\n          sectionIdx: 0,\n          isFocusVisible: true,\n          isCurrent: true\n        });\n        cancelEvent(event);\n        break;\n      }\n      case 'End': {\n        updatefocusedItemInfo({\n          itemIdx: -1,\n          sectionIdx: -1,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n      case 'Tab': {\n        updatefocusedItemInfo({\n          ...focusedItemInfo,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { LegendSymbol } from '../UNSAFE_Legend/LegendSymbol';\nimport { LegendText } from '../UNSAFE_Legend/LegendText';\nimport { ForwardedRef, forwardRef } from 'preact/compat';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { styles } from '../UNSAFE_Legend/themes/LegendStyles.css';\nimport { getLegendCurrentItemStyle } from '../utils/PRIVATE_legendUtils/legendUtils';\nimport { SymbolProps, TextStylesProps } from '../utils/UNSAFE_visTypes/legend';\n\ntype BaseLegendItemProps = {\n  text: string;\n  itemIdx: number;\n  sectionIdx: number;\n  isCurrent: boolean;\n  isFocused: boolean;\n  isHighlighted?: boolean;\n  isHidden?: boolean;\n  symbolWidth?: number;\n  symbolHeight?: number;\n  id?: string;\n  'aria-label'?: HTMLAttributesSignalExcluded['aria-label'];\n  class?: string;\n  minWidth?: number;\n  gridCol?: number;\n  gridRow?: number;\n  hideAndShowBehavior?: 'on' | 'off';\n  actionable?: 'off' | 'inherit';\n  hoverBehavior?: 'dim' | 'none';\n} & SymbolProps &\n  TextStylesProps;\n\nexport const BaseLegendItem = forwardRef(\n  (\n    {\n      id,\n      text,\n      sectionIdx,\n      itemIdx,\n      isHighlighted,\n      symbolHeight,\n      symbolWidth,\n      isFocused,\n      isCurrent,\n      isHidden,\n      actionable = 'inherit',\n      hoverBehavior = 'none',\n      hideAndShowBehavior = 'off',\n      ...props\n    }: BaseLegendItemProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const textStyles = {\n      fontFamily: props.textFontFamily,\n      fontSize: props.textFontSize,\n      color: props.textColor,\n      fontStyle: props.textFontStyle,\n      fontWeight: props.textFontWeight,\n      textDecoration: props.textTextDecoration\n    };\n\n    const symbolProps = {\n      lineStyle: props.lineStyle,\n      lineWidth: props.lineWidth,\n      markerShape: props.markerShape,\n      markerColor: props.markerColor,\n      source: props.source,\n      borderColor: props.borderColor,\n      lineColor: props.lineColor\n    };\n\n    const isNotDimmed = isHighlighted || isHighlighted == null;\n    const { legendItemBaseStyle, legendItemOpacity, legendItemFocusRing } = styles;\n\n    return (\n      <div\n        class={classNames([\n          legendItemBaseStyle,\n          getLegendCurrentItemStyle(\n            isCurrent,\n            isHighlighted,\n            hideAndShowBehavior,\n            hoverBehavior,\n            isHidden,\n            actionable\n          ),\n          !isNotDimmed ? legendItemOpacity : '',\n          isFocused ? legendItemFocusRing : '',\n          props.class\n        ])}\n        style={{\n          gridRow: props.gridRow,\n          gridColumn: props.gridCol,\n          minWidth: props.minWidth !== undefined ? `${props.minWidth}px` : undefined\n        }}\n        id={id}\n        ref={ref}\n        data-oj-section={sectionIdx}\n        data-oj-item={itemIdx}\n        role={isHidden != null ? 'menuitemcheckbox' : 'img'}\n        aria-checked={isHidden != null ? !isHidden : undefined}\n        aria-label={props['aria-label'] || text}>\n        <LegendSymbol\n          {...symbolProps}\n          isHidden={isHidden}\n          lineLength={symbolWidth}\n          width={symbolWidth != null ? `${symbolWidth}px` : undefined}\n          height={symbolHeight != null ? `${symbolHeight}px` : undefined}\n        />\n        <LegendText {...textStyles} text={text} type=\"label\" />\n      </div>\n    );\n  }\n);\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { BaseLegendItem } from './BaseLegendItem';\nimport { getItemProps, getGridCellIndices } from '../utils/PRIVATE_legendUtils/legendUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { styles } from '../UNSAFE_Legend/themes/LegendStyles.css';\nimport { BaseLegendProps, LegendItemData } from '../utils/UNSAFE_visTypes/legend';\n\n/**\n * The controlled legend reponsible only for rendering the legend items.\n */\nexport const BaseLegend = <\n  K extends string | number,\n  D extends LegendItemData<K> = LegendItemData<K>\n>({\n  orientation = 'horizontal',\n  highlightedIds,\n  hiddenIds,\n  focusedItemInfo,\n  hoveredItemInfo,\n  sectionIdx,\n  activeId,\n  isReadOnly,\n  items,\n  symbolHeight,\n  symbolWidth,\n  hideAndShowBehavior = 'off',\n  hoverBehavior = 'none',\n  ...props\n}: BaseLegendProps<K, D>) => {\n  const isHoriz = orientation === 'horizontal';\n  const columTemplates = isHoriz ? `repeat(${props.itemsPerRow}, ${props.itemWidth})` : undefined;\n  const {\n    baseLegendStyles,\n    baseLegendHorizontal,\n    baseLegendVertical,\n    baseLegendVerticalItem,\n    baseLegendPaddingBottom,\n    baseLegendPaddingTop,\n    baseLegendPaddingEnd\n  } = styles;\n\n  return (\n    <div\n      className={classNames([\n        baseLegendStyles,\n        isHoriz ? baseLegendHorizontal : baseLegendVertical\n      ])}\n      style={{\n        gridTemplateColumns: columTemplates,\n        // set maxWidth to 100% on second render for text truncation to work.\n        maxWidth: '100%'\n      }}>\n      {items.map((item: LegendItemData<K>, index: number) => {\n        const {\n          markerColor,\n          markerShape,\n          source,\n          borderColor,\n          lineColor,\n          isCurrent,\n          isFocused,\n          isHidden,\n          isHighlighted,\n          key,\n          actionable,\n          text,\n          lineStyle,\n          lineWidth\n        } = getItemProps<K>(\n          item,\n          index,\n          sectionIdx,\n          focusedItemInfo,\n          isReadOnly,\n          hoveredItemInfo,\n          hiddenIds,\n          highlightedIds\n        );\n        const isFocusedItem =\n          focusedItemInfo.sectionIdx === sectionIdx && focusedItemInfo.itemIdx === index;\n        const { gridRow, gridCol } = getGridCellIndices(\n          items.length,\n          index,\n          props.itemsPerRow,\n          props.itemsPerCol\n        );\n        const needsBottomSpace = gridRow != null && gridRow != props.itemsPerCol;\n        const needsTopSpace = gridRow != null && gridRow != 1;\n        return (\n          <BaseLegendItem\n            ref={isFocusedItem ? props.focusedItemRef : undefined}\n            text={text}\n            itemIdx={index}\n            sectionIdx={sectionIdx}\n            symbolHeight={symbolHeight}\n            symbolWidth={symbolWidth}\n            markerColor={markerColor}\n            markerShape={markerShape}\n            lineStyle={lineStyle}\n            lineWidth={lineWidth}\n            source={source}\n            borderColor={borderColor}\n            aria-label={item['aria-label']}\n            lineColor={lineColor}\n            isCurrent={isCurrent}\n            isFocused={isFocused}\n            isHidden={isHidden}\n            isHighlighted={isHighlighted}\n            key={key}\n            gridRow={gridRow}\n            gridCol={gridCol}\n            minWidth={props.itemWidth}\n            id={isCurrent ? activeId : ''}\n            textColor={props.textColor}\n            textFontFamily={props.textFontFamily}\n            textFontSize={props.textFontSize}\n            textFontStyle={props.textFontStyle}\n            textFontWeight={props.textFontWeight}\n            textTextDecoration={props.textTextDecoration}\n            class={classNames([\n              isHoriz ? '' : baseLegendVerticalItem,\n              needsTopSpace ? baseLegendPaddingTop : '',\n              needsBottomSpace ? baseLegendPaddingBottom : '',\n              baseLegendPaddingEnd\n            ])}\n            hideAndShowBehavior={hideAndShowBehavior}\n            hoverBehavior={hoverBehavior}\n            actionable={actionable}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { MutableRef, Ref, useLayoutEffect, useState } from 'preact/hooks';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { ItemInfo } from '../utils/UNSAFE_visTypes/legend';\nimport { DATATIP_OFFSET } from '#utils/UNSAFE_visUtils/datatipUtils';\nimport { useDatatip } from '#hooks/PRIVATE_useDatatip';\n\ntype props = {\n  text?: string;\n  rootDimsRef: MutableRef<DOMRect | undefined>;\n  focusedItemRef: Ref<HTMLDivElement>;\n  focusedItemInfo: ItemInfo;\n  touchResponse: 'touchStart' | 'touchHold';\n};\n\n/**\n * Calculate the datatip offset for datatip when keyboard focus is active.\n * @param focusedItemRef The ref for currentItem node.\n * @param rootRef The ref for root of the legend.\n * @param currentItem The ItemInfo of the current keyboard focused item.\n * @returns\n */\nconst calculateOffset = (\n  focusedItemRef: Ref<HTMLDivElement>,\n  rootDimsRef: MutableRef<DOMRect | undefined>,\n  currentItem: ItemInfo,\n  isRtl: boolean\n) => {\n  let crossAxis = 0;\n  let mainAxisOffset = DATATIP_OFFSET;\n  if (focusedItemRef.current && currentItem.isCurrent && rootDimsRef.current) {\n    const rootDim = rootDimsRef.current;\n    const itemDim = focusedItemRef.current.getBoundingClientRect();\n    crossAxis = itemDim.x + itemDim.width / 2 - (rootDim.x + rootDim.width / 2);\n    crossAxis = isRtl ? -1 * crossAxis : crossAxis;\n    mainAxisOffset += rootDim.y - itemDim.y;\n    mainAxisOffset = Math.min(\n      DATATIP_OFFSET,\n      Math.max(mainAxisOffset, itemDim.height - rootDim.height + DATATIP_OFFSET)\n    );\n  }\n  return { crossAxis, mainAxis: mainAxisOffset };\n};\n\nexport const useLegendDatatip = ({\n  text,\n  rootDimsRef,\n  focusedItemRef,\n  focusedItemInfo,\n  touchResponse\n}: props) => {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const [offset, setOffset] = useState<{ mainAxis?: number; crossAxis?: number }>(\n    calculateOffset(focusedItemRef, rootDimsRef, focusedItemInfo, isRtl)\n  );\n\n  useLayoutEffect(() => {\n    setOffset(calculateOffset(focusedItemRef, rootDimsRef, focusedItemInfo, isRtl));\n  }, [focusedItemInfo, focusedItemRef, isRtl, rootDimsRef]);\n\n  const anchor = focusedItemInfo?.isCurrent ? 'element' : 'pointer';\n\n  return useDatatip({\n    content: text,\n    placement: 'top',\n    anchor,\n    offset,\n    touchResponse\n  });\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { RefObject } from 'preact';\nimport { useMemo, useRef, useLayoutEffect, useState } from 'preact/hooks';\nimport { Font, GetTextDimensionsType, useTextDimensions } from '../hooks/PRIVATE_useTextDimensions';\nimport { LegendItemData, LegendSectionData } from '../utils/UNSAFE_visTypes/legend';\n\ntype Props<K, D extends LegendItemData<K>> = {\n  sections?: LegendSectionData<K, D>[];\n  items?: LegendItemData<K>[];\n  resolvedVars: Record<string, any>;\n  rootRef: RefObject<HTMLDivElement>;\n  rootDimsRef: RefObject<DOMRect | undefined>;\n  orientation?: 'vertical' | 'horizontal';\n  legendFontStylesObj?: Font;\n  symbolWidth?: number;\n};\n\nexport type LayoutInfo = {\n  isWrapped: boolean;\n  maxItemWidth: number;\n  itemsPerRow: number;\n};\n\n/**\n * Returns maximum of the width among the items in a section of legend also return the width of the entire section.\n * @param items Legend items array\n * @param unitLength Base  element\n * @param getTextDimensions Text width measurement function\n * @param legendFontStylesObj Legend text font style properties object\n * @param symbolWidth Width of legend symbol\n * @returns\n */\nconst getMaxWidth = <K>(\n  items: LegendItemData<K>[],\n  unitLength: number,\n  getTextDimensions: GetTextDimensionsType,\n  legendFontStylesObj?: Font,\n  symbolWidth?: number\n) => {\n  let maxItemWidth = 0;\n  let horizontalSectionWidth = 0;\n  let itemSymbolWidth = 0;\n  if (symbolWidth) {\n    itemSymbolWidth = unitLength * 1.5 + symbolWidth;\n  } else {\n    //itemSymbolWidth = marginLeft + marginRight + width below expression is simplified\n    itemSymbolWidth = 4 * unitLength;\n  }\n  items?.forEach((item) => {\n    const legendItem = item as LegendItemData<K>;\n    const { width } = getTextDimensions(legendItem.text, legendFontStylesObj);\n    //itemTextWidth = paddingLeft + paddingRight + width\n    const itemTextWidth = unitLength * 2.5 + width;\n    //horizontalSectionWidth = total width of the section\n    horizontalSectionWidth += itemSymbolWidth + itemTextWidth;\n    maxItemWidth = Math.max(maxItemWidth, Math.ceil(itemSymbolWidth + itemTextWidth));\n  });\n\n  return { maxItemWidth, horizontalSectionWidth };\n};\n\nexport function useLegendLayout<K, D extends LegendItemData<K>>({\n  resolvedVars,\n  sections,\n  items,\n  rootRef,\n  rootDimsRef,\n  orientation,\n  legendFontStylesObj = {},\n  symbolWidth\n}: Props<K, D>) {\n  const { textMeasureContent, getTextDimensions } = useTextDimensions();\n  const orientationRef = useRef(orientation);\n  const hasOrientationChanged = orientationRef.current !== orientation;\n  const [needsRerender, setRerender] = useState(false);\n\n  useLayoutEffect(() => {\n    if (hasOrientationChanged) {\n      //rerender the Legend\n      orientationRef.current = orientation;\n      setRerender(!needsRerender);\n    }\n  }, [hasOrientationChanged, needsRerender, orientation]);\n\n  const layoutInfo = useMemo(() => {\n    if (\n      !rootRef.current ||\n      !Object.keys(resolvedVars).length ||\n      !getTextDimensions ||\n      hasOrientationChanged ||\n      orientation === 'vertical'\n    ) {\n      return;\n    }\n    const unitLength = parseFloat(resolvedVars['unit']);\n    // recalculate rootDims everytime items change.\n    rootDimsRef.current = rootRef?.current?.getBoundingClientRect();\n    let maxWidth = 0;\n    let isWrapped = false;\n    if (sections) {\n      sections.forEach((section) => {\n        const { maxItemWidth, horizontalSectionWidth } = getMaxWidth(\n          section.items,\n          unitLength,\n          getTextDimensions,\n          legendFontStylesObj,\n          symbolWidth\n        );\n\n        if (!isWrapped) {\n          isWrapped = horizontalSectionWidth > Math.ceil(rootDimsRef.current?.width!);\n        }\n        maxWidth = Math.max(maxWidth, maxItemWidth);\n      });\n    }\n    if (items) {\n      const { maxItemWidth, horizontalSectionWidth } = getMaxWidth(\n        items,\n        unitLength,\n        getTextDimensions,\n        legendFontStylesObj,\n        symbolWidth\n      );\n      maxWidth = maxItemWidth;\n      isWrapped = horizontalSectionWidth > Math.ceil(rootDimsRef.current?.width!);\n    }\n    const legendLayoutInfo = {\n      maxItemWidth: Math.min(maxWidth, rootDimsRef.current?.width!),\n      itemsPerRow: Math.max(1, Math.floor(rootDimsRef.current?.width! / maxWidth)),\n      isWrapped\n    };\n    return legendLayoutInfo;\n  }, [\n    sections,\n    items,\n    rootDimsRef,\n    rootRef,\n    legendFontStylesObj,\n    resolvedVars,\n    symbolWidth,\n    getTextDimensions,\n    orientation,\n    hasOrientationChanged\n  ]);\n\n  return {\n    textMeasureContent,\n    layoutInfo\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Ref } from 'preact/hooks';\nimport {\n  LegendContextMenuContext,\n  LegendContextMenuConfig,\n  ItemInfo,\n  LegendSectionData\n} from '../utils/UNSAFE_visTypes/legend';\nimport { type gestureTypes, useContextMenu } from '../hooks/PRIVATE_useVisContextMenu';\nimport { getItemInfo } from '../utils/PRIVATE_legendUtils/legendUtils';\n\ntype Props<D, S> = {\n  isReadOnly: boolean;\n  rootRef: Ref<HTMLDivElement>;\n  contextMenuConfig?: LegendContextMenuConfig<D>;\n  focusedItemInfo: ItemInfo;\n  items?: D[];\n  sections?: S[];\n  onContextMenuDismissed?: (gesture: gestureTypes) => void;\n};\n\nexport const useLegendContextMenu = <K, D, S extends LegendSectionData<K, D> | void = void>({\n  rootRef,\n  contextMenuConfig,\n  focusedItemInfo,\n  items,\n  sections,\n  isReadOnly,\n  onContextMenuDismissed\n}: Props<D, S>) => {\n  const { contextMenuProps, contextMenuContent } = useContextMenu<LegendContextMenuContext<D>>({\n    onContextMenuHandler: ({ gesture, target }) => {\n      let elem, itemIdx, sectionIdx;\n      if (gesture === 'keyboard') {\n        itemIdx = focusedItemInfo.itemIdx;\n        sectionIdx = focusedItemInfo.sectionIdx;\n        if (items) {\n          elem = rootRef.current?.querySelector(`[data-oj-item=\"${itemIdx}\"]`);\n        } else if (sections) {\n          elem = rootRef.current?.querySelector( `[data-oj-item=\"${itemIdx}\"][data-oj-section=\"${sectionIdx}\"]`);\n        }\n      } else {\n        //We search for the key using the target of the event\n        itemIdx = getItemInfo(target as HTMLElement)?.itemIdx;\n        if (sections) {\n          sectionIdx = getItemInfo(target as HTMLElement)?.sectionIdx;\n        }\n      }\n      let data;\n      if (items) {\n        data = itemIdx !== undefined ? items[itemIdx] : null;\n      } else if (sections) {\n        data =\n          sectionIdx !== undefined && itemIdx !== undefined\n            ? sections[sectionIdx]?.items[itemIdx]\n            : null;\n      }\n\n      let context: LegendContextMenuContext<D>;\n      if (data) {\n        context = {\n          type: 'item',\n          data: data\n        };\n      } else {\n        context = { type: 'background' };\n      }\n      return {\n        context,\n        elem\n      };\n    },\n    contextMenuOptions: {\n      isDisabled: !contextMenuConfig || isReadOnly //If there is no context menu renderer or if isReadOnly is true, we disable the hook\n    },\n    rootRef,\n    contextMenuConfig,\n    onContextMenuDismissed\n  });\n\n  return { contextMenuContent, contextMenuProps };\n};\n"],"names":["_jsx","_jsxs"],"mappings":"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"}