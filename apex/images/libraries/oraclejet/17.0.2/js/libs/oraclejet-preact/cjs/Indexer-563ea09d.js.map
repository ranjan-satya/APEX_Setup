{"version":3,"file":"Indexer-563ea09d.js","sources":["../../src/UNSAFE_Indexer/IndexerItems.tsx","../../src/UNSAFE_Indexer/Indexer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Fragment } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { Flex } from '../UNSAFE_Flex';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { ItemContext } from 'src/UNSAFE_Collection';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { IndexerStyles, IndexerItemVariantOptions } from './themes/IndexerStyles.css';\nimport { IndexerRedwoodTheme } from './themes/redwood/IndexerTheme';\n\n/**\n * Type of a section\n */\nexport type Section<K> = {\n  /**\n   * The key of each section\n   */\n  key: K;\n  /**\n   * The label of each section\n   */\n  label?: string;\n  /**\n   * A property that indicates whether the section\n   * is disabled or not. Typically, when Indexer is\n   * used with ListView, a disabled section implies\n   * that there's no corresponding items in the ListView\n   */\n  isDisabled?: boolean;\n};\n\n/**\n * The others section variable that application could use\n * to compare value\n */\n// const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\nexport const SECTION_OTHERS: Section<string> = Object.freeze({\n  key: '__others__',\n  label: '#'\n});\n\nexport const ITEM_SELECTOR = '[data-oj-key]';\n\nexport type SectionProps<K> = {\n  context: ItemContext<Section<K>>;\n  currentKey: K;\n  selectedKey: K;\n  valueNow: number; // the index of an item within currently visible sections\n  isFocusRingVisible: boolean;\n};\n\nexport const SectionItem = forwardRef(\n  <K extends string | number>(props: SectionProps<K>, ref: ForwardedRef<HTMLLIElement>) => {\n    const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n    const { context, selectedKey } = props;\n    const isSelected = context.data.key === selectedKey;\n    const commonProps = getCommonProps(props, ref);\n\n    const { classes } = useComponentTheme<IndexerItemVariantOptions, IndexerStyles>(\n      IndexerRedwoodTheme,\n      {\n        focused: commonProps.ref && commonProps.isFocusRingVisible ? 'isFocused' : 'notFocused',\n        disabled: context.data.isDisabled ? 'isDisabled' : 'notDisabled',\n        selected: isSelected ? 'isSelected' : 'notSelected'\n      }\n    );\n    const itemClasses = classNames([classes]);\n\n    const sectionLabel = context.data.label || context.data.key;\n    const valueText = context.data.isDisabled\n      ? translations.indexer_disabledLabel({ SECTION: `${sectionLabel}` })\n      : `${sectionLabel}`;\n\n    return (\n      <li\n        {...commonProps}\n        class={itemClasses}\n        data-oj-valuetext={valueText}\n        data-oj-disabled={context.data.isDisabled}>\n        {context.data.label || context.data.key}\n      </li>\n    );\n  }\n);\n\nfunction getCommonProps<K>(\n  { context, currentKey, valueNow, isFocusRingVisible }: SectionProps<K>,\n  ref: ForwardedRef<HTMLLIElement>\n) {\n  const isCurrent = context.data.key === currentKey;\n  return {\n    ...(isCurrent && { ref }),\n    key: context.data.key,\n    'data-oj-key': context.data.key,\n    'data-oj-key-type': typeof context.data.key,\n    'data-oj-valuenow': valueNow,\n    isFocusRingVisible: !!isFocusRingVisible\n  };\n}\n\ntype LastSectionProps<K> = SectionProps<K> & {\n  lastValueNow: number;\n};\n\n// render the last section, that contains the last character and others character\nexport const LastSectionItem = forwardRef(\n  <K extends string | number>(\n    { lastValueNow, ...sectionProps }: LastSectionProps<K>,\n    ref: ForwardedRef<HTMLLIElement>\n  ) => {\n    const commonProps = { ...sectionProps, ref };\n    return (\n      <Fragment>\n        <SectionItem {...commonProps} />\n        <OthersItem\n          {...commonProps}\n          ref={ref}\n          context={{ index: -1, data: SECTION_OTHERS } as ItemContext<Section<K>>}\n          valueNow={lastValueNow}\n        />\n      </Fragment>\n    );\n  }\n);\n\nconst OthersItem = forwardRef(<K,>(props: SectionProps<K>, ref: ForwardedRef<HTMLLIElement>) => {\n  const { context, selectedKey } = props;\n  const commonProps = getCommonProps(props, ref);\n\n  const isSelected = context.data.key === selectedKey;\n  const { classes } = useComponentTheme<IndexerItemVariantOptions>(IndexerRedwoodTheme, {\n    focused: commonProps.ref && commonProps.isFocusRingVisible ? 'isFocused' : 'notFocused',\n    selected: isSelected ? 'isSelected' : 'notSelected'\n  });\n  const othersClasses = classNames([classes]);\n  const othersValueText = SECTION_OTHERS.label;\n\n  return (\n    <li {...commonProps} class={othersClasses} data-oj-valuetext={othersValueText}>\n      {context.data.label}\n    </li>\n  );\n});\n\ntype SeparatorProps<K> = SectionProps<K> & {\n  sectionsPerTruncation: number;\n  last: number;\n  sections: Section<K>[];\n};\n\nexport const SeparatorItem = forwardRef(\n  <K extends string | number>(props: SeparatorProps<K>, ref: ForwardedRef<HTMLLIElement>) => {\n    const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n    const { context, sections } = props;\n    const commonProps = getCommonProps(props, ref);\n    const { from, to } = getSeparatorRange(props);\n    const {\n      classes,\n      styles: { dotStyle }\n    } = useComponentTheme<IndexerItemVariantOptions, IndexerStyles>(IndexerRedwoodTheme, {\n      focused: commonProps.ref && commonProps.isFocusRingVisible ? 'isFocused' : 'notFocused'\n    });\n\n    if (!isInSeparatorMiddle(context.index, from, to)) {\n      return null;\n    }\n\n    const fromText = sections[from].label || sections[from].key;\n    const toText = sections[to].label || sections[to].key;\n\n    const separatorClasses = classNames([classes]);\n\n    const separatorValueText = translations.indexer_separatorLabel({\n      FROM_SECTION: `${fromText}`,\n      TO_SECTION: `${toText}`\n    });\n\n    return (\n      <li {...commonProps} class={separatorClasses} data-oj-valuetext={separatorValueText}>\n        <Flex align=\"center\" justify=\"center\">\n          <div class={dotStyle}></div>\n        </Flex>\n      </li>\n    );\n  }\n);\n\nexport function hasSeparator<K>(props: SeparatorProps<K>) {\n  const { from, to } = getSeparatorRange(props);\n  return isInSeparatorMiddle(props.context.index, from, to);\n}\n\nfunction getSeparatorRange<K>({ context, sectionsPerTruncation, last }: SeparatorProps<K>) {\n  const from = context.index - (context.index % sectionsPerTruncation) + 1;\n  let to = from + sectionsPerTruncation - 2;\n  to = to >= last ? last - 1 : to;\n\n  return { from, to };\n}\n\nfunction isInSeparatorMiddle(index: number, from: number, to: number) {\n  return index === Math.floor((from + to) / 2);\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, createRef, RefObject } from 'preact';\nimport { useEffect, useRef, useState, StateUpdater, useCallback, Dispatch } from 'preact/hooks';\nimport { Flex } from '../UNSAFE_Flex';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useSingleSelection } from '../hooks/PRIVATE_useSingleSelection/useSingleSelection';\nimport { useCurrentKey } from '../hooks/PRIVATE_useCurrentKey';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { keyExtractor, getPrevNextKey, isMobile } from '../utils/PRIVATE_collectionUtils';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { ItemContext, CurrentKeyDetail, SingleSelectionDetail } from '../UNSAFE_Collection';\nimport { Collection } from '../PRIVATE_Collection';\nimport {\n  Section,\n  SectionItem,\n  LastSectionItem,\n  SeparatorItem,\n  SECTION_OTHERS,\n  hasSeparator,\n  ITEM_SELECTOR\n} from './IndexerItems';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { IndexerStyles } from './themes/IndexerStyles.css';\nimport { IndexerRedwoodTheme } from './themes/redwood/IndexerTheme';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\n\nexport type CommitDetail<K> = {\n  value: K;\n};\n\ntype Props<K> = {\n  /**\n   * An array of sections, the default sections is an\n   * array of 26 English alphabets and the # others character\n   */\n  sections?: Section<K>[];\n\n  /**\n   * The currently selected Section\n   */\n  value?: K;\n\n  /**\n   * A function that will be invoked when selection happens,\n   * no matter the Section was selected before or not.\n   */\n  onCommit?: (detail: CommitDetail<K>) => void;\n};\n\nconst defaultSections: Section<string>[] = [\n  { key: 'A' },\n  { key: 'B' },\n  { key: 'C' },\n  { key: 'D' },\n  { key: 'E' },\n  { key: 'F' },\n  { key: 'G' },\n  { key: 'H' },\n  { key: 'I' },\n  { key: 'J' },\n  { key: 'K' },\n  { key: 'L' },\n  { key: 'M' },\n  { key: 'N' },\n  { key: 'O' },\n  { key: 'P' },\n  { key: 'Q' },\n  { key: 'R' },\n  { key: 'S' },\n  { key: 'T' },\n  { key: 'U' },\n  { key: 'V' },\n  { key: 'W' },\n  { key: 'X' },\n  { key: 'Y' },\n  { key: 'Z' }\n];\n\n/**\n * Pure Preact based component that consumes Collection component\n * and renders an indexer.\n */\nexport function Indexer<K extends string | number>({\n  sections = defaultSections as Section<K>[],\n  value,\n  onCommit = () => {},\n  testId\n}: Props<K> & TestIdProps) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const ulRef = useRef<HTMLUListElement>(null);\n  const currElementRef = createRef<HTMLLIElement>();\n  const [current, setCurrent] = useState<K | undefined>(sections[0]?.key);\n  // the number of sections in each truncation\n  const [sectionsPerTruncation, setSectionsPerTruncation] = useState<number>(-1);\n  // the total number of rendered sections and separators\n  const renderedSectionsCount = useRef<number>(-1);\n  const itemHeightRef = useRef<number>(0);\n  // the id for aria describedby\n  const uniqueId = useId();\n\n  const [showFocusRing, focusRingProps] = useCollectionFocusRing(rootRef, ['ArrowUp', 'ArrowDown']);\n\n  const { currentKeyProps } = useCurrentKey(\n    (element) => keyExtractor(element, ITEM_SELECTOR),\n    true,\n    getPrevNextKey(rootRef.current, current, true, ITEM_SELECTOR),\n    getPrevNextKey(rootRef.current, current, false, ITEM_SELECTOR),\n    undefined,\n    undefined,\n    current,\n    (detail: CurrentKeyDetail<K>) => setCurrent(detail.value)\n  );\n\n  const { selectionProps } = useSingleSelection(\n    (element) => handleKeyExtract(element, ulRef, current as K),\n    // pass in undefined so onCommit handler will be called\n    // no matter whether the Section was selected before or not\n    undefined,\n    (detail: SingleSelectionDetail<K>) => handleSelection(detail, onCommit, sections)\n  );\n\n  /**\n   * Item renderer that will return a section item or a section separator\n   * based on the sectionsPerTruncation and item context index.\n   * @param context item context\n   */\n  const itemRenderer = (context: ItemContext<Section<K>>): ComponentChildren => {\n    const last = sections.length - 1;\n    renderedSectionsCount.current += 1;\n\n    const commonProps = {\n      context,\n      ref: currElementRef,\n      currentKey: current as K,\n      selectedKey: value as K,\n      valueNow: renderedSectionsCount.current,\n      isFocusRingVisible: !!showFocusRing\n    };\n\n    // render the last and the others character, they are always present\n    if (context.index === last) {\n      return <LastSectionItem {...commonProps} lastValueNow={renderedSectionsCount.current + 1} />;\n    }\n\n    // render a section, in the non-truncation case or when it is the first in a truncation\n    if (sectionsPerTruncation <= 1 || context.index % sectionsPerTruncation === 0) {\n      return <SectionItem {...commonProps} />;\n    }\n\n    // render the separator in the middle of a truncation\n    const separatorProps = { ...commonProps, sectionsPerTruncation, last, sections };\n    if (hasSeparator(separatorProps)) {\n      return <SeparatorItem {...separatorProps} />;\n    }\n\n    // remove the count for truncated sections\n    renderedSectionsCount.current -= 1;\n\n    return null;\n  };\n\n  // truncate the Indexer during resize\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        updateSectionsPerTruncation(\n          entry.contentRect.height,\n          itemHeightRef.current,\n          sections.length,\n          sections[0]?.key,\n          sectionsPerTruncation,\n          setSectionsPerTruncation,\n          setCurrent\n        );\n      }\n    },\n    [sections, sectionsPerTruncation]\n  );\n\n  useEffect(() => {\n    if (ulRef.current) {\n      // Get aria values from IndexerItem to update aria values on Indexer ul element\n      ulRef.current.setAttribute('aria-valuemax', renderedSectionsCount.current + 1 + '');\n      ulRef.current.setAttribute(\n        'aria-valuetext',\n        currElementRef.current?.dataset?.['ojValuetext'] || ''\n      );\n      ulRef.current.setAttribute(\n        'aria-valuenow',\n        currElementRef.current?.dataset?.['ojValuenow'] || ''\n      );\n    }\n    renderedSectionsCount.current = -1;\n  });\n\n  /**\n   * Set up the initial values for sectionsPerTruncation and event listeners\n   */\n  useEffect(() => {\n    const root = rootRef.current;\n    if (root) {\n      itemHeightRef.current = root.querySelector('li')?.offsetHeight || 0;\n      updateSectionsPerTruncation(\n        root.offsetHeight,\n        itemHeightRef.current,\n        sections.length,\n        sections[0]?.key,\n        sectionsPerTruncation,\n        setSectionsPerTruncation,\n        setCurrent\n      );\n    }\n  }, [sections, sectionsPerTruncation]);\n\n  /**\n   * Set up resize observer and refresh the resize observer when\n   * sectionsPerTruncation is changed, otherwise it will only have the\n   * old copy of sectionsPerTruncation.\n   */\n  useEffect(() => {\n    const root = rootRef.current;\n    if (root) {\n      const resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n        handleResize(entries);\n      });\n      resizeObserver.observe(root);\n      return () => {\n        resizeObserver.unobserve(root);\n      };\n    }\n    return undefined;\n  }, [sectionsPerTruncation, handleResize]);\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const {\n    styles: { baseStyle, innerStyle }\n  } = useComponentTheme<never, IndexerStyles>(IndexerRedwoodTheme);\n  const testIdProps = useTestId(testId);\n\n  return (\n    <div ref={rootRef} class={baseStyle} {...testIdProps}>\n      <Flex align=\"center\" width=\"6x\" height=\"100%\">\n        <ul\n          {...mergeProps(currentKeyProps, focusRingProps, selectionProps)}\n          ref={ulRef}\n          tabIndex={0}\n          aria-label=\"Indexer\"\n          aria-orientation=\"vertical\"\n          aria-valuemin={0}\n          aria-describedby={uniqueId}\n          role=\"slider\"\n          class={innerStyle}>\n          <Collection items={sections}>{itemRenderer}</Collection>\n        </ul>\n      </Flex>\n      <HiddenAccessible>\n        <span id={uniqueId}>{getIndexerDescription(translations)}</span>\n      </HiddenAccessible>\n    </div>\n  );\n}\n\n// A function to extract key for selection\nconst handleKeyExtract = <K extends string | number>(\n  element: HTMLElement,\n  rootRef: RefObject<HTMLElement>,\n  current: K\n) => {\n  if (element === rootRef.current) {\n    return current === undefined ? null : current;\n  }\n  return keyExtractor(element, ITEM_SELECTOR) as K;\n};\n\nconst handleSelection = <K extends string | number>(\n  detail: SingleSelectionDetail<K>,\n  onCommit: (value: CommitDetail<K>) => void,\n  sections: Section<K>[]\n) => {\n  if (detail.value === SECTION_OTHERS.key) {\n    onCommit({ value: SECTION_OTHERS.key as K });\n  } else {\n    const selectedSection = sections.find((section) => section.key === detail.value) as Section<K>;\n    onCommit({ value: selectedSection.key as K });\n  }\n};\n\n/**\n * A function that calculates the section count, based on\n * the container height and the number of sections\n * @param height height of Indexer container\n */\nconst updateSectionsPerTruncation = <K extends string | number>(\n  height: number,\n  itemHeight: number,\n  sectionsLength: number,\n  firstSectionKey: K,\n  sectionsPerTruncation: number,\n  setSectionsPerTruncation: Dispatch<StateUpdater<number>>,\n  setCurrent: Dispatch<StateUpdater<K | undefined>>\n) => {\n  if (height === 0 || itemHeight === 0) {\n    return;\n  }\n\n  const maxSections = height / itemHeight;\n  const last = sectionsLength - 1;\n\n  // when the container size is too small to hold two sections\n  if (maxSections < 2) {\n    if (sectionsPerTruncation !== last) {\n      setSectionsPerTruncation(last);\n      setCurrent(firstSectionKey);\n    }\n\n    // no truncation\n    // compare with < 0.01 for the deviation from calculation, when sectionsLength and maxSections\n    // are about the same, maxNum === sectionsLength doesn't work\n  } else if (maxSections > sectionsLength || sectionsLength - maxSections < 0.01) {\n    if (sectionsPerTruncation > 1) {\n      setSectionsPerTruncation(1);\n      setCurrent(firstSectionKey);\n    }\n\n    // need truncation\n  } else {\n    const tempSectionCount = findSectionCount(maxSections, last);\n    if (tempSectionCount !== sectionsPerTruncation && tempSectionCount < sectionsLength) {\n      setSectionsPerTruncation(tempSectionCount);\n      setCurrent(firstSectionKey);\n    }\n  }\n};\n\n/**\n * A helper function to find the best section count\n * in a truncation\n *\n * @param maxSections maximum number of sections allowed in a truncation\n * @param last the index of last section\n */\nconst findSectionCount = (maxSections: number, last: number) => {\n  // need truncation\n  maxSections -= 2; // minus the last character and the others character\n  maxSections /= 2; // each truncation has a section and a separator\n\n  const newSectionCount = Math.round(last / maxSections) + 1;\n  const truncationLeftover = last % newSectionCount;\n  const truncationCount = Math.floor(last / newSectionCount) + (truncationLeftover > 1 ? 1 : 0);\n\n  // When the sectionCount becomes greater, it will result in\n  // same truncations but with different sections appearing.\n  // The following is to find the best sectionCount in this case\n  // and prevent unnecessary truncations.\n  let tempLeftover = last - (truncationCount - 1) * newSectionCount;\n  let tempSectionCount = newSectionCount;\n  while (tempSectionCount > tempLeftover) {\n    tempSectionCount -= 1;\n    tempLeftover = last - (truncationCount - 1) * tempSectionCount;\n  }\n  if (tempSectionCount != newSectionCount) {\n    tempSectionCount += 1;\n  }\n\n  return tempSectionCount;\n};\n\n/**\n * Helper function to find the aria description for Indexer,\n * based on whether current device is a mobile device\n */\nfunction getIndexerDescription(translations: any) {\n  if (isMobile()) {\n    return translations.indexer_touchInstructionText();\n  } else {\n    return translations.indexer_keyboardInstructionText();\n  }\n}\n"],"names":["forwardRef","useTranslationBundle","useComponentTheme","IndexerRedwoodTheme","classNames","_jsx","_jsxs","Fragment","Flex","useRef","createRef","useState","useId","useCollectionFocusRing","useCurrentKey","keyExtractor","getPrevNextKey","useSingleSelection","useCallback","useEffect","useTestId","mergeProps","Collection","HiddenAccessible","isMobile"],"mappings":"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"}