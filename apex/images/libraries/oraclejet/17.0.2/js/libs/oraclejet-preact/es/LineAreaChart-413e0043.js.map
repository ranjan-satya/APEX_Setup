{"version":3,"file":"LineAreaChart-413e0043.js","sources":["../../src/UNSAFE_LineAreaChart/AreaSeries.tsx","../../src/PRIVATE_Chart/Markers.tsx","../../src/UNSAFE_LineAreaChart/LineSeries.tsx","../../src/UNSAFE_LineAreaChart/LineAreaChart.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { getCmdsForArea } from '../utils/PRIVATE_chartUtils/utils';\nimport { Point } from '../utils/PRIVATE_visSVGUtils';\nimport { Scale } from '../utils/UNSAFE_visTypes/chart';\nimport { dvtVars } from '../Common/themes/themeContract.css';\n\ntype AreaSeriesProps = {\n  yScale: Scale;\n  color: ColorProps['color'];\n  lineType?: 'straight' | 'curved';\n  isHorizontal: boolean;\n  isLog: boolean;\n  areaColorOpacity: number;\n  lineSegmentCoords: Point[][];\n  bottomCoords?: Point[];\n  isHighlighted: boolean;\n  isBottomSegmentCurved: boolean;\n  seriesIndex: number;\n};\n\nexport function AreaSeries({\n  yScale,\n  lineType = 'straight',\n  color,\n  isHorizontal,\n  isLog,\n  areaColorOpacity,\n  lineSegmentCoords,\n  bottomCoords,\n  isHighlighted,\n  isBottomSegmentCurved,\n  seriesIndex\n}: AreaSeriesProps) {\n  const style = {\n    fill: color,\n    opacity: isHighlighted\n      ? areaColorOpacity\n      : `calc(${dvtVars.dimmedOpacity} * ${areaColorOpacity})`\n  };\n\n  return (\n    <>\n      {lineSegmentCoords.map((lineSegmentCoords: Point[]) => {\n        let baseCoords;\n        if (bottomCoords) {\n          // custom bottom coords. eg: top of last series in stacked area\n          baseCoords = bottomCoords;\n        } else {\n          // TODO: make this more generic when we support apps setting baseline\n          // for log assume domain min is the baseline, otherwise use 0 baseline\n          const baselineCoord = yScale.transform(isLog ? yScale.domain()[0] : 0);\n          baseCoords = isHorizontal\n            ? ([\n                [baselineCoord, lineSegmentCoords[0][1]],\n                [baselineCoord, lineSegmentCoords[lineSegmentCoords.length - 1][1]]\n              ] as Point[])\n            : ([\n                [lineSegmentCoords[0][0], baselineCoord],\n                [lineSegmentCoords[lineSegmentCoords.length - 1][0], baselineCoord]\n              ] as Point[]);\n        }\n        const cmds = getCmdsForArea(\n          lineSegmentCoords,\n          baseCoords,\n          lineType,\n          isHorizontal,\n          isBottomSegmentCurved\n        );\n        return (\n          <path d={cmds} style={style} data-oj-series-index={seriesIndex} data-oj-object={'area'} />\n        );\n      })}\n    </>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { LineAreaItem } from '../UNSAFE_LineAreaChart/lineAreaChart.types';\nimport { Marker, MARKER_PADDING } from '../PRIVATE_SvgShapes';\nimport { MarkerShapes } from '../utils/UNSAFE_visTypes/common';\nimport { getGroupCenterCoord } from '../utils/PRIVATE_chartUtils/layoutUtils';\nimport { ChartSeriesData, Scale, Group } from '../utils/UNSAFE_visTypes/chart';\nimport { getMarkerFillAndStroke } from '../utils/PRIVATE_chartUtils/utils';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { getItemAriaLabel } from '../utils/PRIVATE_chartUtils/accUtils';\nimport { supportsMobileScreenReader } from '../utils/UNSAFE_visUtils';\n\nconst MARKER_DEFAULT_SIZE = 10;\ntype MarkersProps<K, D> = {\n  yScale: Scale;\n  xScale: Scale;\n  startIndex: number;\n  endIndex: number;\n  seriesIndex: number;\n  series: ChartSeriesData<K, D>;\n  markerType: MarkerShapes;\n  data: number[];\n  color: ColorProps['color'];\n  groups: Group[];\n  focusedItemIndex?: number;\n  isSelectionEnabled: boolean;\n  hoveredItemIndex?: number;\n  selectedIds?: Set<string | number>;\n  hiddenIds?: Set<string | number>;\n  activeId?: string;\n  orientation: 'horizontal' | 'vertical';\n  isDrillEnabled: boolean;\n  isLog: boolean;\n  isPointInsideMarquee: ((id: K, point: { x: number; y: number }) => boolean) | undefined;\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined;\n  timeAxisType?: 'enabled' | 'skipGaps' | 'mixedFrequency';\n};\n\nexport function Markers<K extends string | number, D extends LineAreaItem<K>>({\n  yScale,\n  xScale,\n  color,\n  seriesIndex,\n  startIndex,\n  endIndex,\n  hiddenIds,\n  selectedIds,\n  orientation,\n  isLog,\n  data,\n  markerType,\n  getDataItem,\n  focusedItemIndex,\n  hoveredItemIndex,\n  isDrillEnabled,\n  activeId,\n  isSelectionEnabled,\n  timeAxisType,\n  isPointInsideMarquee,\n  series,\n  groups\n}: MarkersProps<K, D>) {\n  const isHoriz = orientation === 'horizontal';\n  const items = [];\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  for (let groupIndex = startIndex; groupIndex < endIndex + 1; groupIndex++) {\n    const item = getDataItem(seriesIndex, groupIndex);\n    const value = data[groupIndex];\n    if (!item || value == null || hiddenIds?.has(item.id) || (isLog && value <= 0)) {\n      continue;\n    }\n    const x = isHoriz\n      ? yScale.transform(value)\n      : getGroupCenterCoord<K, D>(groups[groupIndex], groupIndex, xScale, item, timeAxisType);\n    const y = isHoriz\n      ? getGroupCenterCoord<K, D>(groups[groupIndex], groupIndex, xScale, item, timeAxisType)\n      : yScale.transform(value);\n    const isFocused = focusedItemIndex === groupIndex;\n    const isHovered = hoveredItemIndex === groupIndex;\n    const isSelected = !!(selectedIds?.has(item.id!) || isPointInsideMarquee?.(item.id, { x, y }));\n    const isDrillable = item.drilling === 'on' || (item.drilling != 'off' && isDrillEnabled);\n    const { fill, stroke, outerStroke } = getMarkerFillAndStroke(\n      !!item.isMarkerDisplayed,\n      isSelectionEnabled,\n      isHovered,\n      isFocused,\n      isSelected,\n      color,\n      item.markerColor\n    );\n    const itemMarkerType = item.isMarkerDisplayed ? item.markerType || markerType : markerType;\n    const isActive = isFocused || isHovered;\n    const ariaLabel =\n      supportsMobileScreenReader || isActive\n        ? getItemAriaLabel(\n            translations,\n            series.name || series.id.toString(),\n            groups[groupIndex].name || groups[groupIndex].id,\n            item.value,\n            isSelectionEnabled,\n            isSelected,\n            isDrillable,\n            item.accessibleLabel\n          )\n        : undefined;\n\n    const dataInfo = {\n      'data-oj-series-index': seriesIndex,\n      'data-oj-group-index': groupIndex,\n      'data-oj-object': 'item',\n      id: isActive ? activeId : undefined,\n      role: ariaLabel ? 'img' : undefined,\n      'aria-label': ariaLabel\n    };\n\n    const markerSize = (item.markerSize || MARKER_DEFAULT_SIZE) + 2 * MARKER_PADDING;\n    items.push(\n      <Marker\n        type={itemMarkerType}\n        tx={x}\n        ty={y}\n        isInteractive={isDrillable || isSelectionEnabled}\n        scale={1}\n        fill={fill}\n        stroke={stroke}\n        outerStroke={outerStroke}\n        width={markerSize}\n        height={markerSize}\n        dataInfo={dataInfo}\n        preserveRectAspectRatio\n      />\n    );\n  }\n  return <>{items}</>;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { getCmdsForLine } from '../utils/PRIVATE_chartUtils/utils';\nimport { Point } from '../utils/PRIVATE_visSVGUtils';\nimport { rgba } from '../UNSAFE_Theme';\nimport { colorSchemeVars } from '../Common/themes/themeContract.css';\nimport { styles } from '../PRIVATE_Chart/themes/ChartStyles.css';\nimport { Property } from 'csstype';\n\ntype LineSeriesProps = {\n  color: ColorProps['color'];\n  lineStyle?: 'dotted' | 'dashed' | 'solid';\n  lineColor?: Property.Color;\n  lineWidth?: number;\n  lineType?: 'straight' | 'curved';\n  isHorizontal: boolean;\n  lineSegmentCoords: Point[][];\n  isHighlighted: boolean;\n  seriesIndex: number;\n};\n\nexport function LineSeries({\n  color,\n  isHorizontal,\n  lineType = 'straight',\n  lineColor,\n  lineStyle,\n  lineWidth = 3,\n  isHighlighted,\n  lineSegmentCoords,\n  seriesIndex\n}: LineSeriesProps) {\n  const style = {\n    stroke: lineColor || color,\n    strokeDasharray: lineStyle === 'dotted' ? 3 : lineStyle === 'dashed' ? 6 : undefined,\n    strokeWidth: lineWidth,\n    fill: rgba(colorSchemeVars.palette.neutral[0], 0)\n  };\n\n  return (\n    <>\n      {lineSegmentCoords.map((value: Point[]) => {\n        const cmds = getCmdsForLine(value, lineType, isHorizontal);\n        return lineType === 'straight' ? (\n          <polyline\n            points={cmds}\n            style={style}\n            className={isHighlighted ? undefined : styles.dimmed}\n            data-oj-series-index={seriesIndex}\n            data-oj-object={'line'}\n          />\n        ) : (\n          <path\n            d={cmds}\n            style={style}\n            className={isHighlighted ? undefined : styles.dimmed}\n            data-oj-series-index={seriesIndex}\n            data-oj-object={'line'}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { LineAreaChartProps, LineAreaItem } from './lineAreaChart.types';\nimport { findNearestDataPoint } from '../utils/PRIVATE_chartUtils/layoutUtils';\nimport { AreaSeries } from './AreaSeries';\nimport { getCumulativeSeries, getMarkers, getSeriesData } from '../utils/PRIVATE_chartUtils/utils';\nimport { Markers } from '../PRIVATE_Chart/Markers';\nimport { getLineAreaChartNavUtil } from '../utils/PRIVATE_chartUtils/navUtils';\nimport { Chart } from '../PRIVATE_Chart';\nimport { Scale, TimeAxisProps } from '../utils/UNSAFE_visTypes/chart';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { getColorRamp } from '../utils/UNSAFE_visUtils';\nimport { LineSeries } from './LineSeries';\nimport { Point } from '../utils/PRIVATE_visSVGUtils';\nimport { getLineAreaSegments } from '../utils/PRIVATE_chartUtils/utils';\nimport { colorSchemeVars } from '../Common/themes/themeContract.css';\nimport { getItemColor, getMarkerType } from '../utils/PRIVATE_chartUtils/dataStyleUtils';\n\nconst AXIS_OFFSET = 0.2;\n\n/**\n * The LineAreaChart displays information graphically using lines and filled areas, making relationships among the data easier to understand.\n */\nexport function LineAreaChart<K extends string | number, D extends LineAreaItem<K>>({\n  width,\n  height,\n  selectedIds = [],\n  hiddenIds = [],\n  highlightedIds,\n  hideAndShowBehavior = 'none',\n  orientation = 'vertical',\n  yAxis,\n  series,\n  groups,\n  isStacked = false,\n  getDataItem,\n  selectionMode = 'none',\n  drilling = 'off',\n  type = 'line',\n  ...props\n}: LineAreaChartProps<K, D>) {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const isLog = yAxis?.scale === 'log';\n  const timeAxisType = (props.xAxis as TimeAxisProps)?.timeAxisType;\n  const hiddenSet = new Set(hiddenIds);\n  const selectedSet = new Set(selectedIds);\n  const highlightedSet = new Set(highlightedIds);\n  const isHoriz = orientation === 'horizontal';\n  const colors = getColorRamp();\n  const renderedSeries = isStacked\n    ? getCumulativeSeries(series.length, groups.length, getDataItem, hiddenSet, isLog)\n    : getSeriesData<K, D>(series?.length, groups?.length, getDataItem, hiddenSet, isLog);\n\n  const renderedGetDataItem = (seriesIndex: number, groupIndex: number): D | undefined => {\n    if (!isStacked) return getDataItem(seriesIndex, groupIndex);\n    return {\n      ...getDataItem(seriesIndex, groupIndex),\n      value: renderedSeries[seriesIndex][groupIndex]\n    } as D;\n  };\n\n  const getGapRatio = () => {\n    return 1;\n  };\n\n  const getNextChartItemFunc = (startIndex: number, endIndex: number) => {\n    return getLineAreaChartNavUtil<K, D>(\n      getDataItem,\n      series.length,\n      startIndex,\n      endIndex,\n      isStacked,\n      isRtl,\n      isHoriz\n    );\n  };\n\n  const getDataItemPos = (xScale: Scale, yScale: Scale) => {\n    return (seriesIndex: number, groupIndex: number) => {\n      const value = renderedSeries[seriesIndex][groupIndex];\n      let xVal = groupIndex;\n      if (timeAxisType) {\n        const val =\n          timeAxisType === 'mixedFrequency'\n            ? getDataItem(seriesIndex, groupIndex)?.x\n            : groups[groupIndex].id;\n        xVal = new Date(val!).getTime();\n      }\n      const x = isHoriz ? yScale.transform(value) : xScale.transform(xVal);\n      const y = isHoriz ? xScale.transform(xVal) : yScale.transform(value);\n      return { x, y, height: 0, width: 0 };\n    };\n  };\n\n  const getMarkerColorAndType = (seriesIndex: number, groupIndex: number) => {\n    return {\n      color: getItemColor<K, D>(seriesIndex, groupIndex, series, getDataItem),\n      type: getMarkerType<K>(seriesIndex, groupIndex, 'lineWithArea', getDataItem)\n    };\n  };\n\n  const findNearest = (xScale: Scale, yScale: Scale) => {\n    const getSeriesDataInfo = () => {\n      return {\n        offset: 0,\n        dataWidth: 0\n      };\n    };\n\n    const getYCoord = (value: number, yScale: Scale) => {\n      return yScale.transform(value);\n    };\n\n    return findNearestDataPoint<K, D>(\n      series,\n      groups,\n      xScale,\n      yScale,\n      renderedGetDataItem,\n      isStacked,\n      getSeriesDataInfo,\n      getYCoord,\n      isLog,\n      0,\n      hiddenSet,\n      timeAxisType\n    );\n  };\n  const markers = getMarkers();\n  const areaOpacity = type === 'lineWithArea' ? 0.5 : 1;\n  const isAreaRendered = type === 'area' || type === 'lineWithArea';\n  const isContrastLineNeeded = type === 'area';\n  const allLineSegmentCoords: Point[][] = [];\n  return (\n    <Chart\n      width={width}\n      height={height}\n      selectedIds={selectedSet}\n      hiddenIds={hiddenIds}\n      hideAndShowBehavior={hideAndShowBehavior}\n      orientation={orientation}\n      yAxis={yAxis}\n      series={series}\n      groups={groups}\n      selectionMode={selectionMode}\n      drilling={drilling}\n      isStacked={isStacked}\n      getDataItem={getDataItem}\n      findNearest={findNearest}\n      getDataItemPos={getDataItemPos}\n      getMarkerInfo={getMarkerColorAndType}\n      renderGridLinesInFront={isAreaRendered}\n      getNavUtil={getNextChartItemFunc}\n      getGapRatio={getGapRatio}\n      offset={AXIS_OFFSET}\n      isRtl={isRtl}\n      {...props}>\n      {({\n        xStartIndex,\n        xEndIndex,\n        xScale,\n        yScale,\n        activeId,\n        focusedItemInfo,\n        hoveredItemInfo,\n        isPointInsideMarquee\n      }) => {\n        return (\n          <>\n            {renderedSeries.map((lineAreaSeries, index) => {\n              if (lineAreaSeries.length === 0) {\n                /* TODO: need a better way to handle when a series is hidden. */\n                return;\n              }\n              const seriesItem = series[index];\n              const lineSegmentCoords: Point[][] = getLineAreaSegments<K, D>(\n                yScale,\n                xScale,\n                lineAreaSeries,\n                xStartIndex,\n                xEndIndex,\n                isHoriz,\n                isLog,\n                groups,\n                index,\n                renderedGetDataItem,\n                timeAxisType\n              );\n              allLineSegmentCoords[index] = lineSegmentCoords[0];\n              const isBottomSegmentCurved =\n                seriesItem.lineType === 'curved' &&\n                isStacked &&\n                renderedSeries.length > 1 &&\n                index > 0;\n\n              const isHighlighted =\n                highlightedIds === undefined || highlightedSet.has(seriesItem.id);\n              return (\n                <>\n                  {isAreaRendered && (\n                    <AreaSeries\n                      yScale={yScale}\n                      lineType={seriesItem.lineType}\n                      color={seriesItem.areaColor || colors[index % colors.length]}\n                      isHorizontal={isHoriz}\n                      areaColorOpacity={areaOpacity}\n                      isBottomSegmentCurved={isBottomSegmentCurved}\n                      bottomCoords={\n                        isStacked && index != 0 ? allLineSegmentCoords[index - 1] : undefined\n                      }\n                      lineSegmentCoords={lineSegmentCoords}\n                      isLog={isLog}\n                      isHighlighted={isHighlighted}\n                      seriesIndex={index}\n                    />\n                  )}\n                  <LineSeries\n                    lineType={seriesItem.lineType}\n                    /* TODO: confirm with UX if this is contrastLine (changes depending on dark/light mode) or always white. \n                        It's always white in legacy.*/\n                    lineColor={\n                      isContrastLineNeeded ? colorSchemeVars.dvt.contrastLine : seriesItem.lineColor\n                    }\n                    /* The area generated in legacy are bit apart and not touching when stacked. Preact areas are a bit closer than legacy when curved. \n                      Increased the contrast linewidth (to 2.5 from legacy 1.25) to give legacy visual treatment.\n                      TODO: investivage why legacy areas are not touching. maybe we want to do the same in preact svg utils that\n                      generates this curve.\n                     */\n                    lineWidth={\n                      isContrastLineNeeded ? (isStacked ? 2.5 : 1.25) : seriesItem.lineWidth\n                    }\n                    lineStyle={seriesItem.lineStyle}\n                    color={seriesItem.lineColor || colors[index % colors.length]}\n                    lineSegmentCoords={lineSegmentCoords}\n                    isHorizontal={isHoriz}\n                    isHighlighted={isHighlighted}\n                    seriesIndex={index}\n                  />\n                  {\n                    /*for non stacked charts, markers should render in the order of series.\n                     some markers might get hidden behind area but this preserves the legacy behavior. */\n                    !isStacked && (\n                      <Markers\n                        yScale={yScale}\n                        xScale={xScale}\n                        groups={groups}\n                        series={seriesItem}\n                        timeAxisType={timeAxisType}\n                        data={lineAreaSeries}\n                        color={\n                          seriesItem.lineColor ||\n                          seriesItem.areaColor ||\n                          colors[\n                            index % colors.length\n                          ] /* TODO : make this use getItemColor function from dataStyleUtils. */\n                        }\n                        seriesIndex={index}\n                        startIndex={xStartIndex}\n                        endIndex={xEndIndex}\n                        markerType={markers[index % markers.length]}\n                        orientation={orientation}\n                        isLog={isLog}\n                        activeId={activeId}\n                        getDataItem={getDataItem}\n                        isPointInsideMarquee={isPointInsideMarquee}\n                        selectedIds={selectedSet}\n                        focusedItemIndex={\n                          focusedItemInfo.seriesIndex === index &&\n                          focusedItemInfo.isFocusVisible &&\n                          !(props.isDataCursorEnabled && props.dataCursorStyle?.isMarkerDisplayed)\n                            ? focusedItemInfo.groupIndex\n                            : undefined\n                        }\n                        hoveredItemIndex={\n                          hoveredItemInfo?.isCurrent && hoveredItemInfo.seriesIndex === index\n                            ? hoveredItemInfo.groupIndex\n                            : undefined\n                        }\n                        isSelectionEnabled={\n                          selectionMode === 'single' || selectionMode === 'multiple'\n                        }\n                        isDrillEnabled={drilling === 'on'}\n                      />\n                    )\n                  }\n                </>\n              );\n            })}\n            {isStacked &&\n              renderedSeries.map((lineAreaSeries, index) => {\n                if (lineAreaSeries.length === 0) {\n                  /* TODO: need a better way to handle when a series is hidden.*/\n                  return;\n                }\n                const seriesItem = series[index];\n                return (\n                  <Markers\n                    yScale={yScale}\n                    series={series[index]}\n                    xScale={xScale}\n                    groups={groups}\n                    timeAxisType={timeAxisType}\n                    data={lineAreaSeries}\n                    color={\n                      seriesItem.lineColor || seriesItem.areaColor || colors[index % colors.length]\n                    }\n                    seriesIndex={index}\n                    isPointInsideMarquee={isPointInsideMarquee}\n                    startIndex={xStartIndex}\n                    endIndex={xEndIndex}\n                    markerType={markers[index % markers.length]}\n                    orientation={orientation}\n                    isLog={isLog}\n                    activeId={activeId}\n                    getDataItem={getDataItem}\n                    selectedIds={selectedSet}\n                    focusedItemIndex={\n                      focusedItemInfo.seriesIndex === index && focusedItemInfo.isFocusVisible\n                        ? focusedItemInfo.groupIndex\n                        : undefined\n                    }\n                    hoveredItemIndex={\n                      hoveredItemInfo?.isCurrent && hoveredItemInfo.seriesIndex === index\n                        ? hoveredItemInfo.groupIndex\n                        : undefined\n                    }\n                    isSelectionEnabled={selectionMode === 'single' || selectionMode === 'multiple'}\n                    isDrillEnabled={drilling === 'on'}\n                  />\n                );\n              })}\n          </>\n        );\n      }}\n    </Chart>\n  );\n}\n"],"names":["_jsx","_Fragment","_jsxs"],"mappings":"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"}