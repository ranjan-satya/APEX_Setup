{"version":3,"file":"FormLayout-ab6f90b8.js","sources":["../../src/UNSAFE_FormLayout/FormLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useFormContext, FormContext, FormContextProps } from '../hooks/UNSAFE_useFormContext';\nimport { styles } from './themes/FormLayoutStyles.css';\nimport { layoutLocalVars } from '../utils/UNSAFE_styles/Layout/LayoutStyles.css';\nimport { FormLayoutRedwoodTheme } from './themes/redwood/FormLayoutTheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { layoutSpanStyles, LayoutColumns, LayoutColumnSpan } from '../utils/UNSAFE_styles/Layout';\nimport { useTestId, type TestIdProps } from '#hooks/UNSAFE_useTestId';\n\ntype Props = TestIdProps & {\n  /**\n   * Specifies if the FormLayout will dynamically adjust its columns to match the container size based on\n   * defined container breakpoints.\n   */\n  columnBehavior?: 'responsive' | 'fixed';\n\n  /**\n   * The number of columns to display. In a 'responsive' layout, you will have the specified number of\n   * columns or fewer, depending on the defined container breakpoints.\n   */\n  columns?: LayoutColumns;\n\n  /**\n   * Specifies how many columns to span in a FormLayout with direction === 'row'.\n   */\n  columnSpan?: LayoutColumnSpan;\n\n  /**\n   * The direction the children should be laid out, row first or column first.\n   */\n  direction?: 'row' | 'column';\n\n  /**\n   * Indicates if the form layout will use 100% of the container's width, and will ignore the theme's max column width.\n   */\n  isFullWidth?: boolean;\n\n  /**\n   * Indicates whether the form layout is readonly.\n   */\n  isReadonly?: FormContextProps['isReadonly'];\n\n  /**\n   * Specifies the label position.\n   */\n  labelEdge?: FormContextProps['labelEdge'];\n\n  /**\n   * Specifies the width of the start aligned label, ignored for top & inside aligned.\n   */\n  labelStartWidth?: FormContextProps['labelStartWidth'];\n\n  /**\n   * Specifies if start or top label text should wrap or truncate.\n   */\n  labelWrapping?: FormContextProps['labelWrapping'];\n\n  /**\n   * Specifies the density of the user assistance presentation.\n   */\n  userAssistanceDensity?: FormContextProps['userAssistanceDensity'];\n\n  children?: ComponentChildren;\n};\n\nexport const FormLayout = ({\n  columns = 1,\n  columnBehavior = 'responsive',\n  columnSpan = 1,\n  direction = 'row',\n  isFullWidth,\n  isReadonly: propIsReadonly,\n  labelEdge: propLabelEdge,\n  labelStartWidth: propLabelStartWidth,\n  labelWrapping: propLabelWrapping,\n  userAssistanceDensity: propUserAssistanceDensity,\n  children,\n  testId\n}: Props) => {\n  const {\n    isDisabled,\n    isFormLayout: formIsFormLayout,\n    isReadonly: isFormReadonly,\n    labelEdge: formLabelEdge,\n    labelStartWidth: formLabelStartWidth,\n    labelWrapping: formLabelWrapping,\n    textAlign,\n    userAssistanceDensity: formUserAssistanceDensity\n  } = useFormContext();\n  const testIdProps = useTestId(testId);\n  const layoutElementTestIdProps = useTestId(`${testId}_layout`);\n  const isReadonly = propIsReadonly ?? isFormReadonly;\n  const labelEdge = propLabelEdge ?? formLabelEdge;\n  const labelStartWidth = propLabelStartWidth ?? formLabelStartWidth;\n  const labelWrapping = propLabelWrapping ?? formLabelWrapping;\n  // If we have the prop, pass it on, or if we are in a form layout, use the context value, otherwise default to 'efficient'\n  const userAssistanceDensity =\n    propUserAssistanceDensity ?? (formIsFormLayout ? formUserAssistanceDensity : 'efficient');\n\n  // We need to set the localVars.columnCount so that we can correctly set the max width to the current column count\n  const assignVarStyles = assignInlineVars({\n    [layoutLocalVars.columnCount]: `${columns}`\n  });\n  const { baseTheme, classes } = useComponentTheme(FormLayoutRedwoodTheme, {\n    columnBehavior,\n    direction\n  });\n\n  return (\n    <FormContext.Provider\n      value={{\n        isDisabled,\n        isFormLayout: true,\n        isReadonly,\n        labelEdge,\n        labelStartWidth,\n        labelWrapping,\n        textAlign,\n        userAssistanceDensity\n      }}>\n      <div\n        class={classNames([\n          baseTheme,\n          styles.rootWrapperStyle,\n          isFullWidth && styles.rootWrapperFullWidthStyle,\n          layoutSpanStyles.layoutSpanColumn[columnSpan]\n        ])}\n        {...testIdProps}\n        style={assignVarStyles}>\n        <div class={classes} {...layoutElementTestIdProps}>\n          {children}\n        </div>\n      </div>\n    </FormContext.Provider>\n  );\n};\n"],"names":["useFormContext","useTestId","assignInlineVars","layoutLocalVars","useComponentTheme","FormLayoutRedwoodTheme","_jsx","FormContext","classNames","styles","layoutSpanStyles"],"mappings":";;;;;;;;;;;;;;MA0Ea,UAAU,GAAG,CAAC,EACzB,OAAO,GAAG,CAAC,EACX,cAAc,GAAG,YAAY,EAC7B,UAAU,GAAG,CAAC,EACd,SAAS,GAAG,KAAK,EACjB,WAAW,EACX,UAAU,EAAE,cAAc,EAC1B,SAAS,EAAE,aAAa,EACxB,eAAe,EAAE,mBAAmB,EACpC,aAAa,EAAE,iBAAiB,EAChC,qBAAqB,EAAE,yBAAyB,EAChD,QAAQ,EACR,MAAM,EACA,KAAI;AACV,IAAA,MAAM,EACJ,UAAU,EACV,YAAY,EAAE,gBAAgB,EAC9B,UAAU,EAAE,cAAc,EAC1B,SAAS,EAAE,aAAa,EACxB,eAAe,EAAE,mBAAmB,EACpC,aAAa,EAAE,iBAAiB,EAChC,SAAS,EACT,qBAAqB,EAAE,yBAAyB,EACjD,GAAGA,6BAAc,EAAE,CAAC;AACrB,IAAA,MAAM,WAAW,GAAGC,mBAAS,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,wBAAwB,GAAGA,mBAAS,CAAC,GAAG,MAAM,CAAA,OAAA,CAAS,CAAC,CAAC;AAC/D,IAAA,MAAM,UAAU,GAAG,cAAc,IAAI,cAAc,CAAC;AACpD,IAAA,MAAM,SAAS,GAAG,aAAa,IAAI,aAAa,CAAC;AACjD,IAAA,MAAM,eAAe,GAAG,mBAAmB,IAAI,mBAAmB,CAAC;AACnE,IAAA,MAAM,aAAa,GAAG,iBAAiB,IAAI,iBAAiB,CAAC;;AAE7D,IAAA,MAAM,qBAAqB,GACzB,yBAAyB,KAAK,gBAAgB,GAAG,yBAAyB,GAAG,WAAW,CAAC,CAAC;;IAG5F,MAAM,eAAe,GAAGC,0CAAgB,CAAC;AACvC,QAAA,CAACC,gCAAe,CAAC,WAAW,GAAG,CAAA,EAAG,OAAO,CAAE,CAAA;AAC5C,KAAA,CAAC,CAAC;IACH,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAGC,mCAAiB,CAACC,uEAAsB,EAAE;QACvE,cAAc;QACd,SAAS;AACV,KAAA,CAAC,CAAC;AAEH,IAAA,QACEC,cAAC,CAAAC,uBAAW,CAAC,QAAQ,EAAA,EACnB,KAAK,EAAE;YACL,UAAU;AACV,YAAA,YAAY,EAAE,IAAI;YAClB,UAAU;YACV,SAAS;YACT,eAAe;YACf,aAAa;YACb,SAAS;YACT,qBAAqB;AACtB,SAAA,EAAA,QAAA,EACDD,cACE,CAAA,KAAA,EAAA,EAAA,KAAK,EAAEE,qBAAU,CAAC;gBAChB,SAAS;AACT,gBAAAC,oDAAM,CAAC,gBAAgB;gBACvB,WAAW,IAAIA,oDAAM,CAAC,yBAAyB;AAC/C,gBAAAC,iCAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC;AAC9C,aAAA,CAAC,KACE,WAAW,EACf,KAAK,EAAE,eAAe,YACtBJ,cAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,OAAO,EAAA,GAAM,wBAAwB,EAC9C,QAAA,EAAA,QAAQ,GACL,EACF,CAAA,EAAA,CACe,EACvB;AACJ;;;;"}