{"version":3,"file":"listViewTabbableModeTests-5185dff8.js","sources":["../../src/PRIVATE_List/__tests__/shared/listViewTabbableModeTests.tsx"],"sourcesContent":["import { fireEvent, render, waitFor, screen } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { VNode } from 'preact';\n\nimport { Metadata } from '../../../UNSAFE_Collection';\nimport userEvent from '@testing-library/user-event';\n\nimport { populateData } from './listViewTestFixtures';\nimport type { Employee } from './listViewTestFixtures';\nimport { getRoot, getContents } from './testHelpers';\n\nexport type Props<K> = {\n  data: { data: Employee<K>; metadata: Metadata<K> }[];\n};\n\ntype TestComponentProps<K extends string | number> = (props: Props<K>) => VNode;\n\nexport const testTabbableMode = (TestComponent: TestComponentProps<any>) => {\n  it('acts as single tab stop in composition', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} />);\n    const grid = await getRoot();\n\n    await userEvent.tab();\n    expect(screen.getByText('Preceding Button').matches(':focus')).to.be.true;\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n    await userEvent.tab();\n    expect(screen.getByText('Following Button').matches(':focus')).to.be.true;\n    await userEvent.tab({ shift: true });\n    expect(grid.matches(':focus')).to.be.true;\n    await userEvent.tab({ shift: true });\n    expect(screen.getByText('Preceding Button').matches(':focus')).to.be.true;\n  });\n\n  it('enters interactive mode with keyboard via F2', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const view = render(<TestComponent data={dataMetadata} />);\n    const grid = await getRoot();\n\n    // Tab past first button into ListView\n    await userEvent.tab();\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    view.rerender(<TestComponent data={dataMetadata}></TestComponent>);\n    const firstRowInput = screen.getByTestId('input-0');\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n    fireEvent.keyDown(grid, { key: 'F2' });\n    expect(firstRowInput.getAttribute('tabindex')).equals('0');\n  });\n\n  it('leaves interactive mode with keyboard via ESC', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} />);\n    const grid = await getRoot();\n\n    const firstRowInput = screen.getByTestId('input-0');\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n    await userEvent.click(firstRowInput);\n    expect(firstRowInput.getAttribute('tabindex')).equals('0');\n    fireEvent.keyDown(firstRowInput, { key: 'Escape' });\n\n    await waitFor(() => {\n      expect(grid.matches(':focus'), 'active element should be grid').to.be.true;\n    });\n  });\n\n  it('enters interactive mode again with keyboard via arrow keys and F2', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} />);\n    const grid = await getRoot();\n    const items = await getContents();\n\n    await userEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    const secondRowInput = screen.getByTestId('input-1');\n    expect(secondRowInput.getAttribute('tabindex')).equals('-1');\n    fireEvent.keyDown(grid, { key: 'F2' });\n    expect(secondRowInput.getAttribute('tabindex')).equals('0');\n  });\n\n  it('enters interactive mode with click on input', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const view = render(<TestComponent data={dataMetadata} />);\n\n    const firstRowInput = screen.getByTestId('input-0');\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n    await userEvent.click(firstRowInput);\n    // NOTE without this rerender the state change doesn't stick\n    view.rerender(<TestComponent data={dataMetadata}></TestComponent>);\n    expect(firstRowInput.getAttribute('tabindex')).equals('0');\n    expect(firstRowInput.matches(':focus')).to.be.true;\n\n    await userEvent.tab();\n    expect(screen.getByTestId('button-0').matches(':focus')).to.be.true;\n  });\n\n  // FIXME: reenable this test once  is fixed\n  xit('leaves interactive mode with click outside', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const view = render(<TestComponent data={dataMetadata} />);\n\n    const firstRowInput = screen.getByTestId('input-0');\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n    await userEvent.click(firstRowInput);\n    // NOTE without this rerender the state change doesn't stick\n    view.rerender(<TestComponent data={dataMetadata} />);\n    expect(firstRowInput.getAttribute('tabindex')).equals('0');\n    expect(firstRowInput.matches(':focus')).to.be.true;\n    const outsideElement = screen.getByText('Preceding Button');\n    await userEvent.click(outsideElement);\n    expect(outsideElement.matches(':focus')).to.be.true;\n    view.rerender(<TestComponent data={dataMetadata} />);\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n  });\n};\n"],"names":["populateData","render","_jsx","getRoot","userEvent","expect","screen","fireEvent","waitFor","getContents"],"mappings":"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"}