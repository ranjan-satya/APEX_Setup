{"version":3,"file":"UNSAFE_DrawerPopup.js","sources":["../../src/UNSAFE_DrawerPopup/DrawerPopup.tsx"],"sourcesContent":["import { JSX, RefObject } from 'preact';\nimport { useState, useRef, useEffect, useCallback } from 'preact/hooks';\nimport { Layer } from '../UNSAFE_Layer';\nimport { Modal } from '../UNSAFE_Modal';\nimport { FocusTrap } from '../UNSAFE_FocusTrap';\nimport {\n  getAutofocusFocusables,\n  focusOn,\n  focusWithin,\n  getActiveElement\n} from '../utils/PRIVATE_tabbableUtils';\nimport { normalizePosition } from '../utils/PRIVATE_floatingUtils';\nimport { RtlSide } from '../UNSAFE_Floating';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\n\n// Hooks\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\nimport { useAnimation } from '../hooks/UNSAFE_useAnimation';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { useSwipe } from '../hooks/UNSAFE_useSwipe';\n\n// Style imports\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { DrawerPopupVariantOptions } from './themes/DrawerPopupStyles.css';\nimport { colorInterpolations, ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { DrawerPopupRedwoodTheme } from './themes/redwood/DrawerPopupTheme';\n\n// Types\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Placement = 'start' | 'end' | 'bottom';\ntype NormalizedPlacement = 'left' | 'right' | 'bottom';\ntype Status = 'unmounted' | 'initial' | 'opening' | 'closing';\ntype VisibilityStatus = 'hidden' | 'visible';\ntype DisplayModeHorizontal = 'overlay' | 'fullOverlay';\ntype OnCloseDetail = {\n  reason: 'outsideClick' | 'escapeKey' | 'swipe';\n};\n\ntype Props = IntrinsicProps &\n  Pick<ColorProps, 'backgroundColor'> & {\n    /**\n     * Specifies whether the Drawer is open.\n     */\n    isOpen: boolean;\n    /**\n     * Specifies at what edge the Drawer opens.\n     * Supported values are:\n     * <p><code>start</code>, <code>end</code>, <code>bottom</code></p>\n     * Default is <code>start</code>.\n     */\n    placement?: Placement;\n    /**\n     * Specifies modality of the Darwer.\n     * Supported values are:\n     * <p><code>modal</code>, <code>modeless</code></p>\n     * Default is <code>modal</code>.\n     */\n    modality?: 'modal' | 'modeless';\n    /**\n     * Specifies callback triggered when a user tries to close a Drawer through UI interaction.\n     * The parent should listen to this event and close the Drawer. If the parent fails to remove\n     * the Popup, then no change will be done in the UI by the component.\n     * Supported detail values are:\n     * <p><code>outsideClick</code>, <code>escapeKey</code></p>, <code>swipe</code>\n     */\n    onClose?: (detail: OnCloseDetail) => void;\n    /**\n     * Specifies callback triggered after the animation ends.\n     */\n    onTransitionEnd?: (value: boolean) => void;\n    /**\n     * Optional ref for an element to focus on when component mounts.\n     */\n    autoFocusRef?: RefObject<HTMLElement>;\n    /**\n     * Specifies guidance for screen readers.\n     */\n    'aria-label'?: string;\n    /**\n     * Specifies ID of an element used for guidance for screen readers.\n     */\n    'aria-labelledby'?: string;\n    /**\n     * Specifies ID of an element (or space separated IDs of multiple elements) that\n     * describes the Drawer.\n     */\n    'aria-describedby'?: string;\n  } & TestIdProps;\n\n// Constants\nconst displayModefullWidthThreshold = 600;\nconst zero = '0px';\nconst duration = 250;\n\nconst getElementHeight = (element: HTMLDivElement): number => {\n  return Math.round(element.offsetHeight);\n};\n\nconst getElementWidth = (element: HTMLDivElement): number => {\n  return Math.round(element.getBoundingClientRect().width);\n};\n\n/**\n * A drawer popup adds a single slide-in side content alongside some primary content to an application window.\n *\n * This drawer always overlays the page and can be placed at the 'start', 'end' or 'bottom' edge.\n */\nexport const DrawerPopup = ({\n  children,\n  isOpen = false,\n  autoFocusRef,\n  placement = 'start',\n  modality = 'modal',\n  onClose,\n  onTransitionEnd,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy,\n  testId,\n  ...props\n}: Props) => {\n  // Initialize states\n  const [status, setStatus] = useState<Status>(isOpen ? 'initial' : 'unmounted');\n  const [visibility, setVisibility] = useState<VisibilityStatus>('hidden');\n  const [isOutsideClickDisabled, setIsOutsideClickDisabled] = useState<boolean>(!isOpen);\n  const [displayModeHorizontal, setDisplayModeHorizontal] =\n    useState<DisplayModeHorizontal>('overlay');\n\n  const rootRef = useRef<HTMLDivElement>(null);\n  const launcherRef = useRef<HTMLElement | null>(null);\n\n  const isBottomPlacement = placement === 'bottom';\n\n  // Animation config\n  const animationStates = {\n    opening: () => {\n      if (isBottomPlacement) {\n        return {\n          from: {\n            translateY: getTranslateY()\n          },\n          to: {\n            translateY: zero\n          },\n          options: {\n            duration: duration\n          }\n        };\n      } else {\n        return {\n          from: {\n            translateX: getTranslateX()\n          },\n          to: {\n            translateX: zero\n          },\n          options: {\n            duration: duration\n          }\n        };\n      }\n    },\n    closing: () => {\n      if (isBottomPlacement) {\n        return {\n          from: {\n            translateY: zero\n          },\n          to: {\n            translateY: getTranslateY()\n          },\n          options: {\n            duration: duration\n          }\n        };\n      } else {\n        return {\n          from: {\n            translateX: zero\n          },\n          to: {\n            translateX: getTranslateX()\n          },\n          options: {\n            duration: duration\n          }\n        };\n      }\n    }\n  };\n\n  // testId support\n  const testIdProps = useTestId(testId);\n\n  // Normalizing position\n  const { direction } = useUser();\n  const getNormalizedPlacement = (): RtlSide => {\n    return normalizePosition(placement, direction);\n  };\n\n  const getTranslateX = (): string => {\n    return `${getNormalizedPlacement() === 'right' ? '' : '-'}${getElementWidth(\n      rootRef.current as HTMLDivElement\n    )}px`;\n  };\n\n  const getTranslateY = (): string => {\n    return `${getElementHeight(rootRef.current as HTMLDivElement)}px`;\n  };\n\n  const handleFocus = () => {\n    // Set focus to the first match:\n    // 1. First element inside the drawer matching [autofocus]\n    const autofocusItems: HTMLElement[] = getAutofocusFocusables(rootRef.current as HTMLElement);\n    if (autofocusItems.length > 0) {\n      focusOn(autofocusItems[0]);\n      return;\n    }\n    // 2. Tabbable element inside the content element\n    // 3. The drawer itself\n    focusWithin(rootRef.current as HTMLElement);\n  };\n\n  // Animation\n  const { nodeRef } = useAnimation<Status, HTMLDivElement>(status, {\n    animationStates,\n    isAnimatedOnMount: true,\n    onAnimationEnd: () => {\n      if (status === 'opening') {\n        handleFocus();\n        onTransitionEnd?.(true);\n      } else if (!isOpen) {\n        nodeRef(null);\n        setVisibility('hidden');\n        setStatus('unmounted');\n        onTransitionEnd?.(false);\n      }\n    }\n  });\n\n  useEffect(() => {\n    // 1. Ignore status update on initial render\n    if (status === 'unmounted' && !isOpen) {\n      return;\n    }\n\n    // 2. Mount visually hidden component\n    // Component gets mounted, but will be visually hidden to avoid flickering\n    // Flickering happens because it gets rendered before animation hook repositions\n    // it in next render cycle\n    if (status === 'unmounted' && isOpen) {\n      setStatus('initial');\n      return;\n    }\n\n    // 3. Setup animation\n    // Component has been mounted.\n    // We will kick out animation as node is already present in DOM.\n    // To avoid flickering, we still keep it visually hidden until the next render cycle.\n    if (status === 'initial' && isOpen) {\n      nodeRef(rootRef.current);\n      setIsOutsideClickDisabled(false);\n      setStatus('opening');\n      return;\n    }\n\n    // 3. Unhide component. It becomes visible.\n    if (status === 'opening' && isOpen) {\n      setVisibility('visible');\n      return;\n    }\n\n    // 4. Closing\n    if (!isOpen) {\n      setIsOutsideClickDisabled(true);\n      setStatus('closing');\n    }\n  }, [isOpen, status, nodeRef]);\n\n  // Launcher handler\n  useEffect(() => {\n    if (modality === 'modeless') {\n      if (status === 'opening') {\n        // Remember launcher\n        launcherRef.current = getActiveElement() as HTMLElement;\n\n        // Register F6 key handler to enter the Popup\n        launcherRef.current?.addEventListener('keydown', launcherKeyDownCallback);\n      }\n      if (status === 'closing') {\n        return () => {\n          // Deregister F6 key handler\n          launcherRef.current?.removeEventListener('keydown', launcherKeyDownCallback);\n        };\n      }\n    }\n    return;\n  }, [modality, status]);\n\n  const launcherKeyDownCallback = (event: KeyboardEvent): void => {\n    // Moves focus from launcher (must have focus) back to the Drawer\n    if (launcherRef.current === getActiveElement() && event.code === 'F6') {\n      // Prevent default F6 handlers.\n      // F6 is a standard Chrome address bar shortcut on Windows.\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Focus on first tabbable in a container or container itself if there is none\n      focusWithin(rootRef.current as HTMLElement);\n    }\n  };\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      const launcherEl = launcherRef.current;\n      switch (event.code) {\n        case 'Escape': {\n          onClose?.({ reason: 'escapeKey' });\n          break;\n        }\n        case 'F6':\n          if (modality === 'modeless') {\n            // Prevent default F6 handlers.\n            // F6 is a standard Chrome address bar shortcut on Windows.\n            event.preventDefault();\n            event.stopPropagation();\n            // Focus launcher\n            if (launcherEl) {\n              focusOn(launcherEl);\n            }\n            break;\n          }\n      }\n    },\n    [onClose]\n  );\n\n  // OutsideClick handler\n  const handleOutsideClick = useCallback(() => {\n    // Trigger onClose event with outside click detail\n    onClose?.({ reason: 'outsideClick' });\n  }, [onClose]);\n\n  useOutsideClick({\n    isDisabled: isOutsideClickDisabled,\n    ref: rootRef,\n    handler: handleOutsideClick\n  });\n\n  // Drawer placement\n  const getDrawerPlacement = (): NormalizedPlacement => {\n    if (isBottomPlacement) {\n      return placement;\n    } else {\n      if (direction === 'rtl') {\n        return placement === 'start' ? 'right' : 'left';\n      } else {\n        return placement === 'start' ? 'left' : 'right';\n      }\n    }\n  };\n\n  const clientHints = getClientHints();\n\n  const getViewportWidth = useCallback((): number => {\n    if (clientHints.platform === 'ios') {\n      // On ios window.innerWidth is not recommended way of measuring the viewport\n      return document.documentElement.clientWidth;\n    }\n    return window.innerWidth;\n  }, [clientHints.platform]);\n\n  // Window resize handler\n  // Handles display mode: Overlay <> Full overlay (full width side drawers)\n  const handleResize = useCallback(() => {\n    const viewportWidth = getViewportWidth();\n    if (displayModeHorizontal === 'overlay' && viewportWidth < displayModefullWidthThreshold) {\n      setDisplayModeHorizontal('fullOverlay');\n    }\n    if (displayModeHorizontal === 'fullOverlay' && viewportWidth > displayModefullWidthThreshold) {\n      setDisplayModeHorizontal('overlay');\n    }\n  }, [getViewportWidth, displayModeHorizontal]);\n\n  useEffect(() => {\n    const root = rootRef.current;\n    if (root && status === 'opening') {\n      const resizeObserver = new ResizeObserver(() => {\n        handleResize();\n      });\n      resizeObserver.observe(document.body);\n      return () => {\n        resizeObserver.unobserve(document.body);\n      };\n    }\n    return undefined;\n  }, [status, handleResize]);\n\n  // OutsideClick handler\n  const swipeHandler = useCallback(\n    (event: any): void => {\n      const swipeDir = event.direction;\n      if (\n        (direction === 'ltr' && placement === 'start' && swipeDir === 'left') ||\n        (placement === 'end' && swipeDir === 'right') ||\n        (direction === 'rtl' && placement === 'start' && swipeDir === 'right') ||\n        (placement === 'end' && swipeDir === 'left') ||\n        (placement === 'bottom' && swipeDir === 'down')\n      ) {\n        onClose?.({ reason: 'swipe' });\n      }\n    },\n    [direction, placement, onClose]\n  );\n\n  const swipeOptions = {\n    threshold: 50,\n    maximumTime: 750,\n    tolerance: 40\n  };\n  const { swipeProps } = useSwipe(swipeHandler, swipeOptions);\n\n  // Styles\n  const { classes } = useComponentTheme<DrawerPopupVariantOptions>(DrawerPopupRedwoodTheme, {\n    placement: getDrawerPlacement(),\n    visibility,\n    displayModeHorizontal:\n      ['start', 'end'].indexOf(placement) > -1 ? displayModeHorizontal : undefined\n  });\n\n  const interpolations = [...Object.values(colorInterpolations)];\n  const styleInterpolations = mergeInterpolations<ColorProps>(interpolations);\n  const { ...styles } = styleInterpolations(props);\n\n  const renderDrawer = () => {\n    return (\n      <div\n        ref={rootRef}\n        className={classes}\n        style={styles}\n        tabIndex={-1}\n        role=\"dialog\"\n        onKeyDown={handleKeyDown}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...swipeProps}\n        {...testIdProps}>\n        <FocusTrap autoFocusRef={autoFocusRef}>{children}</FocusTrap>\n      </div>\n    );\n  };\n\n  const isMounted = status !== 'unmounted';\n  if (isMounted) {\n    // Modal vs. modelss upper wrapper\n    if (modality === 'modal') {\n      return <Modal isOpen={isMounted}>{renderDrawer()}</Modal>;\n    } else {\n      return <Layer>{renderDrawer()}</Layer>;\n    }\n  }\n\n  return null;\n};\n"],"names":["_jsx"],"mappings":"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"}