define(['exports', 'preact/jsx-runtime', 'preact', 'preact/compat', 'preact/hooks', './BaseButton-83ce1d00', './useToggleAction-59741954', './useTooltip-d28e9b0f', './useTooltipControlled-abf886f2', './mergeProps-bcfa6a92', './toggleButtonUtils-e01582ef', './useId-c9578d26', './ToggleButtonLabel-cb67a3ce'], (function(e,t,i,o,s,l,a,n,c,r,d,u,g){"use strict";const p=o.forwardRef((({children:e,tooltip:o,size:c="md",isDisabled:p=!1,accessibleLabel:b,isSelected:h=!1,onToggle:f,testId:T,width:m,"aria-describedby":B},y)=>{const I=s.useRef(null);s.useImperativeHandle(y,(()=>I.current),[I]);const{triggerProps:w}=a.useToggleAction({isDisabled:p,onToggle:f}),{tooltipContent:x,tooltipProps:D}=n.useTooltip({text:o??b,isDisabled:p}),S=d.toggleStyling("auto",h,!0,!1,!1,void 0,void 0,!0),v={"aria-describedby":B};return t.jsxs(i.Fragment,{children:[t.jsx(l.BaseButton,{...r.mergeProps(D,w,v),elementDetails:{type:"button",isSwitch:!0},"aria-checked":h,variant:"ghost",size:c,isDisabled:p,styling:S,width:m,ref:I,"aria-label":b??o,testId:T,children:t.jsx(g.ToggleButtonLabel,{isDisabled:p,label:b??o,isToggle:!0,inputName:u.useId(),inputType:"switch",onAction:()=>f?.({value:h}),isSelected:h,display:"icons",startIcon:e,size:c})}),x]})}));p.displayName="IconSwitchButton",e.IconSwitchButton=p}));
//# sourceMappingURL=IconSwitchButton-0e888503.js.map
