{"version":3,"file":"NavigationList-5218562e.js","sources":["../../src/UNSAFE_NavigationList/useNavigationList.ts","../../src/UNSAFE_NavigationList/NavigationList.tsx"],"sourcesContent":["import { useState, useCallback, MutableRef, useRef, useEffect } from 'preact/hooks';\nimport {\n  keyExtractor,\n  getFirstVisibleKey,\n  getKey,\n  getPrevNextKeyUsingRef,\n  findElementByKey\n} from '../utils/PRIVATE_collectionUtils';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { useCurrentKey } from '../hooks/PRIVATE_useCurrentKey';\nimport { NavigationListContextProps } from '../UNSAFE_NavigationListCommon';\n\nimport { ComponentChildren } from 'preact';\n\n/**\n * type for payload of current key change event handler\n */\ntype CurrentKeyDetail<K> = {\n  value: K;\n};\n/**\n * type for payload of selection change event handler\n */\ntype SelectionDetail<K> = {\n  value: K;\n  reason: 'pointer' | 'keyboard';\n};\n/**\n * type for payload of remove event handler\n */\ntype RemoveDetail<K> = {\n  value: K;\n};\n\n/*TODO: JET-58534. Create a hook to share some logic between navlist and tabbar. Hook will be used inside this one. */\nexport function useNavigationList<K extends string | number>({\n  containerRef,\n  selection,\n  onRemove,\n  onSelectionChange,\n  children\n}: {\n  containerRef: MutableRef<HTMLUListElement>;\n  selection?: K;\n  onRemove?: <K extends string | number>(detail: RemoveDetail<K>) => void;\n  onSelectionChange?: <K extends string | number>(detail: SelectionDetail<K>) => void;\n  children: ComponentChildren;\n}) {\n  const ITEM_SELECTOR = '[role=\"tab\"]';\n  const REMOVAL_ICON_SELECTOR = '[data-oj-navigationlist-item-remove-icon]';\n  const [currentKey, setCurrentKey] = useState<K | undefined>(selection);\n\n  const onCurrentKeyChange = useCallback((detail: CurrentKeyDetail<K | undefined>) => {\n    setCurrentKey(detail.value);\n  }, []) as NavigationListContextProps<K>['onCurrentKeyChange'];\n\n  const { currentKeyProps } = useCurrentKey(\n    (element) =>\n      onRemove\n        ? (extractOnlyItemKey(element, ITEM_SELECTOR, REMOVAL_ICON_SELECTOR) as K)\n        : keyExtractor(element, ITEM_SELECTOR),\n    false,\n    getPrevNextKeyUsingRef(containerRef, currentKey, true, ITEM_SELECTOR),\n    getPrevNextKeyUsingRef(containerRef, currentKey, false, ITEM_SELECTOR),\n    undefined,\n    undefined,\n    currentKey,\n    onCurrentKeyChange\n  );\n\n  const [showFocusRing, focusRingProps] = useCollectionFocusRing(containerRef, [\n    'Home',\n    'End',\n    'ArrowUp',\n    'ArrowDown'\n  ]);\n\n  const onFocus = useCallback(() => {\n    if (containerRef.current && currentKey === undefined) {\n      const key = getFirstVisibleKey(containerRef.current, ITEM_SELECTOR);\n      if (key) {\n        setCurrentKey(key as K);\n      }\n    }\n  }, [currentKey, containerRef]);\n\n  const onFocusProps = { onFocus };\n  const prevNavItems = useRef<K[]>();\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const navListItemKeys = Array.from(\n        containerRef.current.querySelectorAll(ITEM_SELECTOR),\n        (elem) => getKey(elem as HTMLElement) as K\n      );\n      if (currentKey != null && navListItemKeys.indexOf(currentKey) !== -1) {\n        const navListItem = findElementByKey(\n          containerRef.current,\n          currentKey,\n          ITEM_SELECTOR\n        ) as any;\n        if (navListItem.scrollIntoViewIfNeeded) {\n          // for some browsers, we'll need the non-standard scrollIntoViewIfNeeded\n          navListItem.scrollIntoViewIfNeeded();\n        } else {\n          navListItem.scrollIntoView({ block: 'nearest' });\n        }\n      } else {\n        if (currentKey && navListItemKeys.indexOf(currentKey) === -1) {\n          prevNavItems.current\n            ? setCurrentKey(findNextCurrentKey(currentKey, navListItemKeys, prevNavItems.current))\n            : setCurrentKey(navListItemKeys[0] as K);\n        }\n        prevNavItems.current = navListItemKeys;\n      }\n    }\n  }, [children, currentKey, containerRef]);\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if ((event.key === 'Home' || event.key === 'End') && containerRef.current && currentKey) {\n        const navListItemKey = Array.from(\n          containerRef.current.querySelectorAll(ITEM_SELECTOR),\n          (elem) => getKey(elem as HTMLElement) as K\n        );\n        onCurrentKeyChange?.({\n          value: navListItemKey[event.key === 'Home' ? 0 : navListItemKey.length - 1] as K\n        });\n      }\n      if (currentKey && event.key === 'Enter') {\n        onSelectionChange?.({\n          value: currentKey as K,\n          reason: 'keyboard'\n        });\n      }\n      if (currentKey && event.key === 'Delete') {\n        onRemove?.({ value: currentKey as K });\n      }\n    },\n    [currentKey, onSelectionChange, onRemove, onCurrentKeyChange, containerRef]\n  );\n\n  return {\n    showFocusRing,\n    currentKey,\n    onCurrentKeyChange,\n    onKeyDown,\n    containerHandlers: mergeProps(focusRingProps, currentKeyProps, onFocusProps)\n  };\n}\n\nconst extractOnlyItemKey = (element: HTMLElement, itemSelector: string, itemEliminator: string) => {\n  const navigationListItem = element.closest(itemSelector);\n  const removeButton = element.closest(itemEliminator);\n  return navigationListItem?.contains(removeButton) ? null : keyExtractor(element, itemSelector);\n};\n\nconst findNextCurrentKey = <K>(currentKey: K, currNavs: K[], prevNavs: K[]) => {\n  const index = prevNavs.indexOf(currentKey);\n  if (index > 0) {\n    const nextIndex = index === prevNavs.length - 1 ? index - 1 : index + 1;\n    const nextKey = prevNavs[nextIndex];\n    if (currNavs.indexOf(nextKey) !== -1) {\n      return nextKey;\n    }\n  }\n  // update current key to be the first one if we can't find a suitable next key\n  return currNavs[0];\n};\n","import { Ref } from 'preact';\nimport { MutableRef, useRef } from 'preact/hooks';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { navigationListStyles } from './themes/NavigationListStyles.css';\nimport { useNavigationList } from './useNavigationList';\nimport { forwardRef, useImperativeHandle } from 'preact/compat';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { NavigationListProps, NavigationListContext } from '../UNSAFE_NavigationListCommon';\nexport { RemovableNavigationListItem } from '../UNSAFE_NavigationListCommon';\n\nexport type FocusableHandle = {\n  focus: () => void;\n  blur: () => void;\n};\n\nexport const NavigationList = forwardRef(\n  <K extends string | number>(\n    {\n      children,\n      selection,\n      onSelectionChange,\n      onRemove,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelLedBy,\n      testId\n    }: NavigationListProps<K> & TestIdProps,\n    ref?: Ref<FocusableHandle>\n  ) => {\n    const containerRef = useRef<HTMLUListElement>(null);\n\n    const { showFocusRing, currentKey, onCurrentKeyChange, containerHandlers, onKeyDown } =\n      useNavigationList({\n        containerRef: containerRef as MutableRef<HTMLUListElement>,\n        selection,\n        onRemove,\n        onSelectionChange,\n        children\n      });\n\n    const eventProps = { onKeyDown };\n    const navigationListClass = classNames([navigationListStyles.uListStyle]);\n    const navigationListItemPrefix = useId() + '_';\n    const testIdProps = useTestId(testId);\n\n    //Allows to call focus on rootRef without having to expose it\n    useImperativeHandle(ref!, () => ({\n      focus: () => {\n        if (containerRef.current) {\n          containerRef.current.focus();\n        }\n      },\n      blur: () => {\n        if (containerRef.current) {\n          containerRef.current.focus();\n        }\n      }\n    }));\n\n    return (\n      <ul\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelLedBy}\n        role=\"tablist\"\n        ref={containerRef}\n        aria-orientation={'vertical'}\n        tabIndex={0}\n        aria-activedescendant={currentKey ? navigationListItemPrefix + currentKey : ''}\n        {...mergeProps(eventProps, containerHandlers)}\n        {...testIdProps}\n        class={navigationListClass}>\n        <NavigationListContext.Provider\n          value={{\n            selection,\n            onSelectionChange,\n            onCurrentKeyChange,\n            currentKey,\n            showFocusRing,\n            navigationListItemPrefix,\n            onRemove\n          }}>\n          {children}\n        </NavigationListContext.Provider>\n      </ul>\n    );\n  }\n);\n"],"names":["useState","useCallback","useCurrentKey","keyExtractor","getPrevNextKeyUsingRef","useCollectionFocusRing","getFirstVisibleKey","useRef","useEffect","getKey","findElementByKey","mergeProps","forwardRef","classNames","navigationListStyles","useId","useTestId","useImperativeHandle","_jsx","NavigationListContext"],"mappings":"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"}