define(['exports', 'preact/hooks'], (function(e,t){"use strict";const s=(e,t)=>{if(null!=e&&null!=t){let s=0,n=e.length-1,l=null,r=null;for(;s<=n&&s<e.length&&n>-1;){const c=Math.floor((s+n)/2),o=e[c];if(o===t)return{closestEntry:o,closestIndex:c};o<t?s=c+1:n=c-1,(!l||Math.abs(t-o)<Math.abs(t-l))&&(l=o,r=c)}return{closestEntry:l,closestIndex:r}}return{closestEntry:null,closestIndex:null}};e.useDetectHorizontalOverflow=function(e){const{rootRef:n,getWidth:l,keysArray:r}=e,[c,o]=t.useState(r),[i,u]=t.useState();return t.useEffect((()=>{let e;if(n.current&&r&&r.length>0){const t=[];let c=0;r.forEach((e=>{c+=l(e);const s={itemKey:e,cumulativeWidth:c};t.push(s)})),e=new ResizeObserver((()=>{const e=n.current,l=t?.map((e=>e.cumulativeWidth));if(e&&l&&(e.clientWidth<l[l.length-1]||e.clientWidth<e.scrollWidth)){const{closestEntry:t,closestIndex:n}=s(l,e?.clientWidth);t&&n&&(o(r.slice(0,n)),u(r?.slice(n)))}else o(r),u([])})),e.observe(n?.current)}return()=>{e&&e.disconnect()}}),[r,l,n]),{visibleItemKeys:c,overflowItemKeys:i}}}));
//# sourceMappingURL=useDetectHorizontalOverflow-9ae81c31.js.map
