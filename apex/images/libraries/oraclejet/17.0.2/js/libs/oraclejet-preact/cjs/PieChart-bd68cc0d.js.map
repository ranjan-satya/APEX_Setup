{"version":3,"file":"PieChart-bd68cc0d.js","sources":["../../src/UNSAFE_PieChart/utils.ts","../../src/UNSAFE_PieChart/PieSlice.tsx","../../src/UNSAFE_PieChart/pieNavUtils.ts","../../src/UNSAFE_PieChart/PieChartWithDimensions.tsx","../../src/UNSAFE_PieChart/PieChart.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { ItemInfo } from '../hooks/PRIVATE_usePieChartNav';\nimport { arcTo, closePath, lineTo, moveTo } from '../utils/PRIVATE_visSVGUtils';\nimport type { PieChartItemData, PieSliceInfo } from './pieChart.types';\n\ntype Bounds = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nconst RADIUS_RATIO = 0.45;\nconst RADIUS_RATIO_WITH_LABELS = 0.38;\nconst SLICE_GAP_RATIO = 3;\nconst MIN_ARC_LENGTH = 1.5;\nconst START_ANGLE = 90;\n\n/**\n * Converts the angle from degrees to radians.\n * @param degree The angle in degrees\n * @returns\n */\nexport function degreesToRads(degree: number) {\n  return degree * (Math.PI / 180);\n}\n\n/**\n * Calculates the angle between two vectors.\n * @param vector1X The x component of first vector.\n * @param vector1Y The y component of first vector.\n * @param vector2X The x component of second vector.\n * @param vector2Y The y component of second vector.\n * @returns\n */\nexport function calculateAngleBetweenTwoVectors(\n  vector1X: number,\n  vector1Y: number,\n  vector2X: number,\n  vector2Y: number\n) {\n  const angle = Math.atan2(vector2Y, vector2X) - Math.atan2(vector1Y, vector1X);\n  return angle < 0 ? angle + 2 * Math.PI : angle;\n}\n\n/**\n * Get the center coord of the pie chart.\n * @param availSpace The available space.\n * @returns\n */\nexport function getPieCenter(availSpace: Bounds) {\n  return {\n    cx: availSpace.x + Math.floor(availSpace.width / 2),\n    cy: availSpace.y + Math.floor(availSpace.height / 2)\n  };\n}\n\n/**\n * Returns the radius of the pie chart.\n * @param availSpace The available space.\n * @param labelPosition The position of labels.\n * @returns\n */\nexport function getRadius(availSpace: Bounds, isLabelOutside: boolean) {\n  const radiusScale = isLabelOutside ? RADIUS_RATIO_WITH_LABELS : RADIUS_RATIO;\n  return Math.floor(Math.min(availSpace.width, availSpace.height) * radiusScale);\n}\n\n/**\n * Returns the total value of the pie chart.\n * @param items\n */\nexport function getPieChartInfo(items: PieChartItemData[]) {\n  return items.reduce(\n    ({ totalValue, isLabelOutside }, item) => {\n      return {\n        totalValue: totalValue + item.value,\n        isLabelOutside\n      };\n    },\n    { totalValue: 0, isLabelOutside: false }\n  );\n}\n\n/**\n * Returns the startAngle and angleOffset for the rendered items.\n * @param items\n * @param totalValue\n */\nexport function getSliceInfo(items: PieChartItemData[], totalValue: number) {\n  let anchorOffset = START_ANGLE;\n  let percentage;\n  const sliceInfo = [];\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const value = item.value;\n    if (value === totalValue) {\n      percentage = 100;\n    } else if (totalValue === 0) {\n      percentage = 0;\n    } else {\n      // if value is not 100%, cap it at 99.99%\n      percentage = Math.min((value / totalValue) * 100, 99.99);\n    }\n    const arc = percentage * 3.6;\n    let angle = anchorOffset - arc;\n    if (angle < 0) angle += 360;\n    sliceInfo.push({\n      index: i,\n      startAngle: angle,\n      angleExtent: arc,\n      ...item\n    });\n\n    anchorOffset = angle;\n  }\n  return sliceInfo;\n}\n\n/**\n * Returns the pie slice gaps.\n * @param  pieSliceGap The ratio of maximum supported pie slice gap.\n * @returns\n */\nexport function getPieSliceGap(pieSliceGap: number) {\n  return SLICE_GAP_RATIO * pieSliceGap;\n}\n\n/**\n * Returns the array of layouts to render without skipping.\n * @param layouts\n * @param hasLargeItemCount\n * @param radius\n * @returns\n */\nexport function getRenderedSlices(\n  itemInfo: PieSliceInfo[],\n  hasLargeItemCount: boolean,\n  radius: number\n): PieSliceInfo[] {\n  if (!hasLargeItemCount) {\n    return itemInfo;\n  }\n\n  const perimeter = 2 * Math.PI * radius;\n  let prevEndCoord = 0;\n\n  return itemInfo.filter(({ startAngle, angleExtent }) => {\n    const arcLength = (angleExtent / 360) * perimeter;\n    const endCoord = ((angleExtent + startAngle) / 360) * perimeter;\n    if (arcLength < MIN_ARC_LENGTH && Math.abs(prevEndCoord - endCoord) < MIN_ARC_LENGTH) {\n      return false;\n    } else {\n      prevEndCoord = endCoord;\n      return true;\n    }\n  });\n}\n\n/**\n * Returns the path of the pie slice wedge.\n * @param inset The inset.\n * @param cx The x coordinate of the center of the pie chart.\n * @param cy The y coordinate of the center of the pie chart.\n * @param radiusX The x radius of the slice.\n * @param radiusY The y radius of the slice.\n * @param innerRadius The inner radius.\n * @param angleExtent The angle extent.\n * @param wedgeGap The gap beteen the pie slices.\n * @param startAngle The start angle of the pie slice.\n * @returns\n */\nexport function makeWedgePath(\n  inset: number,\n  cx: number,\n  cy: number,\n  radiusX: number,\n  radiusY: number,\n  innerRadius: number,\n  angleExtent: number,\n  wedgeGap: number,\n  startAngle: number\n) {\n  const rx = Math.max(radiusX - inset, 0);\n  const ry = Math.max(radiusY - inset, 0);\n  const gap = angleExtent == 360 || rx < inset ? 0 : wedgeGap + 2 * inset;\n\n  const ir = innerRadius ? innerRadius + inset : 0;\n  // if angle extent is not 360, cap it  at 359.99\n  const angleExtentRads = angleExtent == 360 ? degreesToRads(359.99) : degreesToRads(angleExtent);\n\n  const startAngleRads = degreesToRads(startAngle);\n  const dataItemGaps = gap / 2;\n\n  const gapAngle = dataItemGaps < rx ? Math.asin(dataItemGaps / rx) : 0;\n  const centerLineAngle = -angleExtentRads / 2 - startAngleRads;\n\n  // cap at 5* dataItemsGap. logic from legacy dvt toolkit\n  const distanceToStartPointX = Math.min(\n    dataItemGaps * 5,\n    angleExtentRads > 0 ? Math.abs(dataItemGaps / Math.sin(angleExtentRads / 2)) : 0\n  );\n  const distanceToStartPointY = rx == 0 ? distanceToStartPointX : (distanceToStartPointX * ry) / rx;\n\n  const startPointX = cx + Math.cos(centerLineAngle) * distanceToStartPointX;\n  const startPointY = cy + Math.sin(centerLineAngle) * distanceToStartPointY;\n\n  const arcPointX = cx + Math.cos(-gapAngle - startAngleRads) * rx;\n  const arcPointY = cy + Math.sin(-gapAngle - startAngleRads) * ry;\n\n  const arcPoint2X = cx + Math.cos(-startAngleRads - angleExtentRads + gapAngle) * rx;\n  const arcPoint2Y = cy + Math.sin(-startAngleRads - angleExtentRads + gapAngle) * ry;\n\n  let outerAngle = calculateAngleBetweenTwoVectors(\n    arcPoint2X - cx,\n    arcPoint2Y - cy,\n    arcPointX - cx,\n    arcPointY - cy\n  );\n  outerAngle = Math.min(outerAngle, angleExtentRads);\n  let pathCommands: string;\n  if (ir > 0) {\n    const innerGapAngle = dataItemGaps < ir ? Math.asin(dataItemGaps / ir) : 0;\n    const innerPointX = cx + Math.cos(-innerGapAngle - startAngleRads) * ir;\n    const innerPointY = cy + Math.sin(-innerGapAngle - startAngleRads) * ir;\n\n    const innerPoint2X = cx + Math.cos(-startAngleRads - angleExtentRads + innerGapAngle) * ir;\n    const innerPoint2Y = cy + Math.sin(-startAngleRads - angleExtentRads + innerGapAngle) * ir;\n\n    let innerAngle = calculateAngleBetweenTwoVectors(\n      innerPoint2X - cx,\n      innerPoint2Y - cy,\n      innerPointX - cx,\n      innerPointY - cy\n    );\n    innerAngle = Math.min(innerAngle, outerAngle, angleExtentRads);\n\n    if (angleExtent == 360) {\n      pathCommands = moveTo(arcPoint2X, arcPoint2Y);\n      pathCommands += arcTo(rx, ry, angleExtentRads, 1, arcPointX, arcPointY);\n      pathCommands += lineTo(arcPoint2X, arcPoint2Y);\n      pathCommands += moveTo(innerPointX, innerPointY);\n      pathCommands += arcTo(ir, ir, angleExtentRads, 0, innerPoint2X, innerPoint2Y);\n    } else {\n      pathCommands = moveTo(innerPoint2X, innerPoint2Y);\n      pathCommands += lineTo(arcPoint2X, arcPoint2Y);\n      pathCommands += arcTo(rx, ry, outerAngle, 1, arcPointX, arcPointY);\n      pathCommands += lineTo(innerPointX, innerPointY);\n      pathCommands += arcTo(ir, ir, innerAngle, 0, innerPoint2X, innerPoint2Y);\n    }\n  } else {\n    if (angleExtent == 360) {\n      pathCommands = moveTo(arcPoint2X, arcPoint2Y);\n      pathCommands += arcTo(rx, ry, angleExtentRads, 1, arcPointX, arcPointY);\n    } else {\n      pathCommands = moveTo(startPointX, startPointY);\n      pathCommands += lineTo(arcPoint2X, arcPoint2Y);\n      pathCommands += arcTo(rx, ry, outerAngle, 1, arcPointX, arcPointY);\n    }\n  }\n\n  pathCommands += closePath();\n  return pathCommands;\n}\n\n/**\n * Returns the pie chart center context.\n * @param cx The x coordinate of the center of the pie chart.\n * @param cy The y coordinate of the center of the pie chart.\n * @param innerRadius The inner radius of the pie chart.\n * @returns\n */\nexport function getCenterContext(cx: number, cy: number, innerRadius: number) {\n  return {\n    innerBounds: {\n      width: Math.sqrt(2) * innerRadius,\n      height: Math.sqrt(2) * innerRadius,\n      x: cx - innerRadius / Math.sqrt(2),\n      y: cy - innerRadius / Math.sqrt(2)\n    },\n    outerBounds: {\n      width: 2 * innerRadius,\n      height: 2 * innerRadius,\n      x: cx - innerRadius,\n      y: cy - innerRadius\n    }\n  };\n}\n\n/**\n * Returns the position of the datatip for a given slice.\n * @param startAngle The start angle of the pie slice.\n * @param angleExtent The angle extent of the pie slice.\n * @param cx The x coordinate of the center of the pie slice.\n * @param cy The y coordinate of the center of the pie slice.\n * @param innerRadius The inner radius.\n * @param radius The radius of the pie slice.\n * @returns\n */\nexport function getPieItemCenterCoord(\n  startAngle: number,\n  angleExtent: number,\n  cx: number,\n  cy: number,\n  innerRadius: number,\n  radius: number\n) {\n  const angle = startAngle + angleExtent / 2;\n  const theta = (angle / 180) * Math.PI;\n  const r = (innerRadius + radius) / 2;\n\n  return {\n    x: cx + r * Math.cos(theta),\n    y: cy - r * Math.sin(theta),\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Returns the element bound for active item.\n * @param renderedSlices The array of info for rendered slices.\n * @param cx The x coordinate of pie chart center.\n * @param cy The y coordinate of pie chart center.\n * @param ir The inner radius of the pie chart.\n * @param radius The radius of the pie chart.\n * @param activeItem The active item.\n * @returns\n */\nexport function getElementBounds(\n  renderedSlices: PieSliceInfo[],\n  cx: number,\n  cy: number,\n  ir: number,\n  radius: number,\n  activeItem?: ItemInfo\n) {\n  return activeItem\n    ? getPieItemCenterCoord(\n        renderedSlices[activeItem.itemIndex].startAngle,\n        renderedSlices[activeItem.itemIndex].angleExtent,\n        cx,\n        cy,\n        ir,\n        radius\n      )\n    : undefined;\n}\n\n/**\n * Returns default border color for datatip.\n * @param colors The color ramp.\n * @param activeItem The active item info.\n * @param activeData The active pie chart data item.\n * @returns\n */\nexport function getDefaultBorderColor(\n  colors: string[],\n  activeItem?: ItemInfo,\n  activeData?: PieChartItemData\n) {\n  return activeData?.color || activeItem?.itemIndex != undefined\n    ? colors[activeItem!.itemIndex]\n    : undefined;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { makeWedgePath } from './utils';\nimport { styles } from './themes/PieChartStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\n/**\n * The props for pie slice.\n */\ntype PieSliceProps = {\n  /**\n   * The x coordinate of the center of the slice.\n   */\n  cx: number;\n\n  /**\n   * The y coordinate of the center of the slice.\n   */\n  cy: number;\n\n  /**\n   * The radius of the pie slice.\n   */\n  r: number;\n\n  /**\n   * The start angle of the pie slice.\n   */\n  startAngle: number;\n\n  /**\n   * The angle extent of the pie slice.\n   */\n  angleExtent: number;\n\n  /**\n   * The gaps to keep between the pie slice items.\n   */\n  gap: number;\n\n  /**\n   * The inner radius of the pie slice.\n   */\n  innerRadius: number;\n\n  /**\n   * The color of the pie slice.\n   */\n  color: ColorProps['color'];\n\n  /**\n   * Whether the slice is focused.\n   */\n  isFocused?: boolean;\n\n  /**\n   * Whether the slice is hovered.\n   */\n  isHovered?: boolean;\n\n  /**\n   * The id of the pie slice.\n   */\n  id?: string;\n\n  /**\n   * The index of the item among rendered series.\n   */\n  itemIndex: number;\n\n  /**\n   * The aria label of the pie slice.\n   */\n  accessibleLabel?: string;\n};\n\n/**\n * The Pie Slice component.\n */\nexport function PieSlice({\n  cx,\n  cy,\n  r,\n  startAngle,\n  angleExtent,\n  gap,\n  innerRadius,\n  color,\n  id,\n  itemIndex,\n  isFocused = false,\n  isHovered = false,\n  ...props\n}: PieSliceProps) {\n  const path = makeWedgePath(0, cx, cy, r, r, innerRadius, angleExtent, gap, startAngle);\n  let innerPath;\n  if (isFocused) {\n    innerPath = makeWedgePath(2, cx, cy, r, r, innerRadius, angleExtent, gap, startAngle);\n    return (\n      <g\n        id={id}\n        role={props.accessibleLabel ? 'img' : undefined}\n        data-oj-item-index={itemIndex}\n        data-oj-object=\"pieSlice\"\n        aria-label={props.accessibleLabel}>\n        <path d={path} fill={color} stroke={color} className={styles.innerShapes} />\n        <path\n          d={innerPath}\n          fill={color}\n          className={classNames([styles.contrastBorder, styles.innerShapes])}\n        />\n      </g>\n    );\n  }\n  return (\n    <path\n      role={props.accessibleLabel ? 'img' : undefined}\n      aria-label={props.accessibleLabel}\n      d={path}\n      data-oj-object=\"pieSlice\"\n      fill={color}\n      id={id}\n      data-oj-item-index={itemIndex}\n    />\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { PieChartItemData } from './pieChart.types';\n\n/**\n * Returns the nav util for pie chart.\n * @param data\n * @param isRtl\n * @returns\n */\nexport function getPieChartNavUtils(data: PieChartItemData[], isRtl: boolean) {\n  const getNextChartItem = (\n    { itemIndex }: { itemIndex: number },\n    arrow: 'ArrowLeft' | 'ArrowRight' | 'ArrowDown' | 'ArrowUp'\n  ): { itemIndex: number } => {\n    let newItemIndex = itemIndex;\n\n    if (\n      (isRtl && (arrow === 'ArrowRight' || arrow === 'ArrowUp')) ||\n      (!isRtl && (arrow === 'ArrowLeft' || arrow === 'ArrowDown'))\n    ) {\n      newItemIndex = itemIndex - 1;\n    } else {\n      newItemIndex = itemIndex + 1;\n    }\n    return {\n      itemIndex: ((newItemIndex % data.length) + data.length) % data.length\n    };\n  };\n\n  return getNextChartItem;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { styles } from './themes/PieChartStyles.css';\nimport {\n  getDefaultBorderColor,\n  getElementBounds,\n  getPieCenter,\n  getRadius,\n  getRenderedSlices,\n  getPieChartInfo,\n  getPieSliceGap,\n  getSliceInfo\n} from './utils';\nimport { getAvailSpace } from '../utils/PRIVATE_chartUtils/layoutUtils';\nimport { PieSlice } from './PieSlice';\nimport { getCenterContext } from './utils';\nimport { getPieChartNavUtils } from './pieNavUtils';\nimport { ItemInfo, usePieChartNav } from '../hooks/PRIVATE_usePieChartNav';\nimport { calculateOffset, useDatatip } from '../hooks/PRIVATE_useDatatip';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { VisTabularDatatip } from '../PRIVATE_VisTabularDatatip';\nimport type { PieChartProps, PieChartItemData } from './pieChart.types';\nimport { getColorRamp } from '../utils/UNSAFE_visUtils';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\nimport { useVisTouchResponse } from '#hooks/PRIVATE_useVisTouchResponse';\nimport { useRef } from 'preact/hooks';\nimport { merge } from '#utils/UNSAFE_stringUtils';\n\ntype PieChartWithDimensionsProps = Omit<PieChartProps, 'width' | 'height'> & {\n  width: number;\n  height: number;\n  data: PieChartItemData[];\n};\n\nconst NUM_PIE_SLICE_THRESHOLD = 100;\nexport function PieChartWithDimensions({\n  width,\n  height,\n  testId,\n  innerRadius = 0,\n  ...props\n}: PieChartWithDimensionsProps) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const colors = getColorRamp();\n  const { totalValue, isLabelOutside } = getPieChartInfo(props.data);\n  const sliceInfos = getSliceInfo(props.data, totalValue);\n\n  // default data item gaps is 0.5. TODO: replace 0.5 with pie dataItemGaps/pieSliceGaps\n  const pieSliceGap = getPieSliceGap(0.5);\n  const hasLargeSeriesCount = props.data.length > NUM_PIE_SLICE_THRESHOLD;\n  const { direction } = useUser();\n  const testIdProps = useTestId(testId);\n  const availSpace = getAvailSpace(width, height);\n  const { cx, cy } = getPieCenter(availSpace);\n  const radius = getRadius(availSpace, isLabelOutside);\n  const ir = innerRadius * radius;\n  const renderedSlices = getRenderedSlices(sliceInfos, hasLargeSeriesCount, radius);\n  const getNextChartItem = getPieChartNavUtils(renderedSlices, direction === 'rtl');\n\n  const { touchResponse, touchResponseStyle } = useVisTouchResponse({\n    type: 'auto',\n    supportsTouchDragGestures: false,\n    rootRef\n  });\n  const { activeId, navProps, focusedItemInfo, hoveredItemInfo } = usePieChartNav({\n    touchResponse,\n    getNextChartItem\n  });\n  const activeItem = focusedItemInfo.isFocusVisible ? focusedItemInfo : hoveredItemInfo;\n  const activeData = activeItem\n    ? props.data[renderedSlices[activeItem.itemIndex].index]\n    : undefined;\n\n  const defaultDatatip = (activeData?: PieChartItemData, activeItem?: ItemInfo) => {\n    if (!activeData) {\n      return {\n        content: undefined,\n        borderColor: undefined\n      };\n    }\n    if (activeData.accessibleLabel) {\n      return {\n        content: activeData.accessibleLabel,\n        borderColor: getDefaultBorderColor(colors, activeItem, activeData)\n      };\n    }\n    return {\n      content: (\n        <VisTabularDatatip\n          tableData={[\n            {\n              key: 'Value',\n              value: activeData.value\n            }\n          ]}\n        />\n      ),\n      borderColor: getDefaultBorderColor(colors, activeItem, activeData)\n    };\n  };\n\n  const { content: datatipString, borderColor } =\n    activeData && props.datatip\n      ? props.datatip({ data: activeData })\n      : defaultDatatip(activeData, activeItem);\n\n  const anchor = focusedItemInfo.isFocusVisible ? 'element' : 'pointer';\n  const elementBounds = activeItem?.isFocusVisible\n    ? getElementBounds(renderedSlices, cx, cy, ir, radius, activeItem)\n    : undefined;\n  const { datatipContent, datatipProps } = useDatatip({\n    content: datatipString,\n    offset: calculateOffset(direction === 'rtl', width, elementBounds),\n    anchor,\n    placement: 'top-start',\n    borderColor,\n    touchResponse\n  });\n\n  datatipProps['aria-describedby'] = merge([\n    props['aria-describedby'],\n    datatipProps['aria-describedby']\n  ]);\n\n  const mergedProps = mergeProps(navProps, datatipProps);\n  return (\n    <div\n      ref={rootRef}\n      tabIndex={0}\n      aria-label={props['aria-label']}\n      aria-labelledby={props['aria-labelledby']}\n      aria-activedescendant={activeId}\n      role=\"application\"\n      {...mergedProps}\n      {...testIdProps}\n      className={styles.chart}\n      style={{\n        width,\n        height,\n        ...touchResponseStyle\n      }}>\n      {renderedSlices.length > 0 && (\n        <svg className={styles.svg}>\n          {renderedSlices.map((item, index: number) => {\n            return (\n              <PieSlice\n                cx={cx}\n                cy={cy}\n                itemIndex={index}\n                id={focusedItemInfo.itemIndex === index ? activeId : undefined}\n                isFocused={focusedItemInfo?.itemIndex === index && focusedItemInfo?.isFocusVisible}\n                isHovered={hoveredItemInfo?.itemIndex === index}\n                r={radius}\n                startAngle={item.startAngle}\n                gap={pieSliceGap}\n                innerRadius={ir}\n                angleExtent={item.angleExtent}\n                color={item.color || colors[index % colors.length]}\n                key={item.id}\n                accessibleLabel={item.accessibleLabel}\n              />\n            );\n          })}\n        </svg>\n      )}\n      {props.children?.(getCenterContext(cx, cy, ir))}\n      {datatipContent}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { dimensionStyle } from './themes/PieChartStyles.css';\nimport { TrackResizeContainer } from '../PRIVATE_TrackResizeContainer';\nimport { PieChartWithDimensions } from './PieChartWithDimensions';\nimport type { PieChartProps } from './pieChart.types';\n\n/**\n * Pie charts are useful for visualizing parts of a whole, but do not display zero or negative values so they are not recommended for data sets that may have negative or null data\n */\nexport function PieChart({ width, height, ...props }: PieChartProps) {\n  return (\n    <TrackResizeContainer width={width} height={height} class={dimensionStyle}>\n      {(width, height) => <PieChartWithDimensions width={width} height={height} {...props} />}\n    </TrackResizeContainer>\n  );\n}\n"],"names":["moveTo","arcTo","lineTo","closePath","_jsxs","_jsx","styles","classNames","useRef","getColorRamp","useUser","useTestId","getAvailSpace","useVisTouchResponse","usePieChartNav","VisTabularDatatip","useDatatip","calculateOffset","merge","mergeProps","TrackResizeContainer","dimensionStyle"],"mappings":"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"}