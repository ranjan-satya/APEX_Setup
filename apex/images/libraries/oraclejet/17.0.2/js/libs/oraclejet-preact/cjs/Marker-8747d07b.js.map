{"version":3,"file":"Marker-8747d07b.js","sources":["../../src/PRIVATE_SvgShapes/Ellipse.tsx","../../src/PRIVATE_SvgShapes/Path.tsx","../../src/PRIVATE_SvgShapes/Polygon.tsx","../../src/PRIVATE_SvgShapes/Rect.tsx","../../src/PRIVATE_SvgShapes/Marker.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { EllipseProps } from '../utils/UNSAFE_visTypes/common';\n\nexport const Ellipse = ({\n  cx,\n  cy,\n  rx,\n  ry,\n  scaleX,\n  scaleY,\n  tx,\n  ty,\n  fill,\n  stroke,\n  strokeWidth = 1,\n  dataInfo,\n  isInteractive\n}: EllipseProps) => {\n  return (\n    <ellipse\n      {...dataInfo}\n      cx={cx + tx}\n      cy={cy + ty}\n      rx={rx * scaleX}\n      ry={ry * scaleY}\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      cursor={isInteractive ? 'pointer' : undefined}\n      vectorEffect=\"non-scaling-stroke\"\n    />\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { PathProps } from '../utils/UNSAFE_visTypes/common';\n\nconst HUMAN_PATH_CMDS =\n  'M 49.973566845209916 0 C 35.487299168442284 0 23.71094058258365 12.495019801980108 23.71094058258365 27.90841584158416 C \\\n  23.71094058258365 43.32181188118821 35.487299168442284 55.81683168316832 49.973566845209916 55.81683168316832 C 64.4599001785434 \\\n  55.81683168316832 76.23619310783617 43.32181188118821 76.23619310783617 27.90841584158416 C 76.23619310783617 12.495019801980108 \\\n  64.4599001785434 0 49.973566845209916 0 z M 19.607405229048297 50.541460396039604 C 10.737203208846282 57.250371287128864 \\\n  -3.3723927507496847 73.51485148514851 0.7311426027856692 89.17079207920791 C 23.783162804806032 103.5633663366335 68.33114260278562 \\\n  105.4951732673267 100.03669815834124 88.31992574257426 C 101.26447593611908 71.04665841584145 91.18619310783609 58.7152227722771 \\\n  79.51902139066446 50.541460396039604 C 64.74629411793718 75.89591584158418 36.02154664318971 70.79344059405938 19.607405229048297 50.541460396039604 z';\n\n// only human is supported for now.\nexport const Path = ({\n  scaleX,\n  scaleY,\n  tx,\n  ty,\n  fill,\n  stroke,\n  strokeWidth = 1,\n  width,\n  height,\n  isInteractive,\n  dataInfo\n}: PathProps) => {\n  const sX = (scaleX * width) / 100;\n  const sY = (scaleY * height) / 100;\n  return (\n    <path\n      {...dataInfo}\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      vectorEffect=\"non-scaling-stroke\"\n      cursor={isInteractive ? 'pointer' : undefined}\n      transform={`translate(${tx - width / 2} ${ty - height / 2}) scale(${sX} ${sY})`}\n      d={HUMAN_PATH_CMDS}\n    />\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { PolygonProps } from '../utils/UNSAFE_visTypes/common';\n\nconst STAR_POLYGON_CMDS = [\n  -50, -11.22, -16.69, -17.94, 0, -47.55, 16.69, -17.94, 50, -11.22, 26.69, 13.8, 30.9, 47.56, 0,\n  33.42, -30.9, 47.56, -26.69, 13.8\n];\n\nexport const Polygon = ({\n  type,\n  scaleX,\n  scaleY,\n  tx,\n  ty,\n  height,\n  width,\n  fill,\n  stroke,\n  strokeWidth = 1,\n  dataInfo,\n  isInteractive\n}: PolygonProps) => {\n  let cmds: number[];\n  const cx = 0;\n  const cy = 0;\n  const s = Math.min(width, height);\n  let sX = scaleX;\n  let sY = scaleY;\n  const half = s / 2;\n  const sixth = s / 6;\n\n  switch (type) {\n    case 'star': {\n      sX = sX * (width / 100);\n      sY = sY * (height / 100);\n      cmds = STAR_POLYGON_CMDS;\n      break;\n    }\n    case 'triangleUp': {\n      cmds = [cx - half, cy + half, cx, cy - half, cx + half, cy + half];\n      break;\n    }\n    case 'triangleDown': {\n      cmds = [cx - half, cy - half, cx, cy + half, cx + half, cy - half];\n      break;\n    }\n    case 'diamond': {\n      cmds = [cx - half, cy, cx, cy - half, cx + half, cy, cx, cy + half];\n      break;\n    }\n    case 'plus': {\n      cmds = [\n        cx - half,\n        cy - sixth,\n        cx - sixth,\n        cy - sixth,\n        cx - sixth,\n        cy - half,\n        cx + sixth,\n        cy - half,\n        cx + sixth,\n        cy - sixth,\n        cx + half,\n        cy - sixth,\n        cx + half,\n        cy + sixth,\n        cx + sixth,\n        cy + sixth,\n        cx + sixth,\n        cy + half,\n        cx - sixth,\n        cy + half,\n        cx - sixth,\n        cy + sixth,\n        cx - half,\n        cy + sixth\n      ];\n      break;\n    }\n    default:\n      cmds = [];\n  }\n  return (\n    <polygon\n      {...dataInfo}\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      cursor={isInteractive ? 'pointer' : undefined}\n      vectorEffect=\"non-scaling-stroke\"\n      transform={`translate(${tx} ${ty}) scale(${sX} ${sY})`}\n      points={cmds.join(' ')}\n    />\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { RectProps } from '../utils/UNSAFE_visTypes/common';\n\nexport const Rect = ({\n  x,\n  y,\n  width,\n  height,\n  scaleX,\n  scaleY,\n  tx,\n  ty,\n  fill,\n  stroke,\n  strokeWidth = 1,\n  dataInfo,\n  isInteractive\n}: RectProps) => {\n  return (\n    <rect\n      x={x + tx}\n      y={y + ty}\n      width={width * scaleX}\n      height={height * scaleY}\n      fill={fill}\n      stroke={stroke}\n      cursor={isInteractive ? 'pointer' : undefined}\n      strokeWidth={strokeWidth}\n      {...dataInfo}\n      vectorEffect=\"non-scaling-stroke\"\n    />\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { Ellipse } from './Ellipse';\nimport { Path } from './Path';\nimport { Polygon } from './Polygon';\nimport { Rect } from './Rect';\nimport { MarkerShapes } from '../utils/UNSAFE_visTypes/common';\n\ntype MarkerProps = {\n  scale: number;\n  type: MarkerShapes;\n  height?: number;\n  width?: number;\n  fill: ColorProps['color'];\n  stroke: ColorProps['color'];\n  outerStroke?: ColorProps['color'];\n  preserveRectAspectRatio?: boolean;\n  tx?: number;\n  ty?: number;\n  isInteractive?: boolean;\n  dataInfo?: Record<string, any>;\n  outerStrokeWidth?: number;\n  innerStrokeWidth?: number;\n};\n\nconst GOLDEN_RATIO = 1.62;\nconst HUMAN_SCALE_X = 0.8; // preserve legacy human marker scale w/h = 0.8\nconst SELECTED_HUMAN_SCALE = 0.9;\n\nexport const MARKER_PADDING = 3;\n\nexport const Marker = ({\n  scale,\n  type,\n  height = 100,\n  width = 100,\n  fill,\n  stroke,\n  outerStroke,\n  tx,\n  ty,\n  preserveRectAspectRatio,\n  isInteractive = false,\n  dataInfo,\n  outerStrokeWidth = MARKER_PADDING,\n  innerStrokeWidth = 1\n}: MarkerProps) => {\n  const scaleX = type === 'human' ? scale * HUMAN_SCALE_X * SELECTED_HUMAN_SCALE : scale;\n  const scaleY =\n    type === 'rectangle' && preserveRectAspectRatio\n      ? scale / GOLDEN_RATIO\n      : type === 'human'\n      ? scale * SELECTED_HUMAN_SCALE\n      : scale;\n  const tX = tx != null ? tx : ((1 - scaleX) * width) / 2;\n  const tY = ty != null ? ty : ((1 - scaleY) * height) / 2;\n  const ry = (height / 2) * (type === 'ellipse' && preserveRectAspectRatio ? 1 / GOLDEN_RATIO : 1);\n\n  switch (type) {\n    case 'human': {\n      if (outerStroke) {\n        return (\n          <g>\n            <Path\n              type=\"human\"\n              tx={tX}\n              ty={tY}\n              fill={fill}\n              stroke={outerStroke}\n              strokeWidth={outerStrokeWidth}\n              width={width}\n              height={height}\n              scaleX={scaleX}\n              scaleY={scaleY}\n            />\n            <Path\n              type=\"human\"\n              tx={tX}\n              ty={tY}\n              fill={fill}\n              stroke={stroke}\n              strokeWidth={innerStrokeWidth}\n              width={width}\n              height={height}\n              scaleX={scaleX}\n              scaleY={scaleY}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n          </g>\n        );\n      }\n      return (\n        <Path\n          type=\"human\"\n          tx={tX}\n          ty={tY}\n          fill={fill}\n          stroke={stroke}\n          width={width}\n          height={height}\n          scaleX={scaleX}\n          scaleY={scaleY}\n          isInteractive={isInteractive}\n          dataInfo={dataInfo}\n        />\n      );\n    }\n    case 'rectangle':\n    case 'square': {\n      const x = (-width / 2) * scaleX;\n      const y = (-height / 2) * scaleY;\n\n      if (outerStroke) {\n        return (\n          <g>\n            <Rect\n              x={x}\n              y={y}\n              width={width - outerStrokeWidth}\n              height={height - outerStrokeWidth}\n              scaleX={scaleX}\n              scaleY={scaleY}\n              fill={fill}\n              stroke={outerStroke}\n              strokeWidth={outerStrokeWidth}\n              tx={tX + outerStrokeWidth / 2}\n              ty={tY + outerStrokeWidth / 2}\n            />\n            <Rect\n              x={x}\n              y={y}\n              width={width - outerStrokeWidth}\n              height={height - outerStrokeWidth}\n              scaleX={scaleX}\n              scaleY={scaleY}\n              fill={fill}\n              stroke={stroke}\n              strokeWidth={innerStrokeWidth}\n              tx={tX + outerStrokeWidth / 2}\n              ty={tY + outerStrokeWidth / 2}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n          </g>\n        );\n      }\n      return (\n        <Rect\n          x={x}\n          y={y}\n          width={width - 2 * outerStrokeWidth}\n          height={height - 2 * outerStrokeWidth}\n          scaleX={scaleX}\n          scaleY={scaleY}\n          fill={fill}\n          stroke={stroke}\n          tx={tX + outerStrokeWidth}\n          ty={tY + outerStrokeWidth}\n          isInteractive={isInteractive}\n          dataInfo={dataInfo}\n        />\n      );\n    }\n    case 'circle':\n    case 'ellipse': {\n      if (outerStroke) {\n        return (\n          <g>\n            <Ellipse\n              cx={0}\n              cy={0}\n              scaleX={scaleX}\n              scaleY={scaleY}\n              fill={fill}\n              stroke={outerStroke}\n              strokeWidth={outerStrokeWidth}\n              rx={width / 2 - outerStrokeWidth}\n              ry={ry - outerStrokeWidth}\n              tx={tX}\n              ty={tY}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n            <Ellipse\n              cx={0}\n              cy={0}\n              scaleX={scaleX}\n              scaleY={scaleY}\n              fill={fill}\n              stroke={stroke}\n              strokeWidth={innerStrokeWidth}\n              rx={width / 2 - outerStrokeWidth}\n              ry={ry - outerStrokeWidth}\n              tx={tX}\n              ty={tY}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n          </g>\n        );\n      }\n      return (\n        <Ellipse\n          cx={0}\n          cy={0}\n          scaleX={scaleX}\n          scaleY={scaleY}\n          fill={fill}\n          stroke={stroke}\n          rx={width / 2 - outerStrokeWidth}\n          ry={ry - outerStrokeWidth}\n          tx={tX}\n          ty={tY}\n          isInteractive={isInteractive}\n          dataInfo={dataInfo}\n        />\n      );\n    }\n    default: {\n      if (outerStroke) {\n        return (\n          <g>\n            <Polygon\n              fill={fill}\n              stroke={outerStroke}\n              strokeWidth={outerStrokeWidth}\n              type={type}\n              scaleX={scaleX}\n              scaleY={scale}\n              tx={tX}\n              ty={tY}\n              height={height - outerStrokeWidth}\n              width={width - outerStrokeWidth}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n            <Polygon\n              fill={fill}\n              stroke={stroke}\n              strokeWidth={innerStrokeWidth}\n              type={type}\n              scaleX={scaleX}\n              scaleY={scale}\n              tx={tX}\n              ty={tY}\n              height={height - outerStrokeWidth}\n              width={width - outerStrokeWidth}\n              isInteractive={isInteractive}\n              dataInfo={dataInfo}\n            />\n          </g>\n        );\n      }\n      return (\n        <Polygon\n          fill={fill}\n          stroke={stroke}\n          type={type}\n          scaleX={scaleX}\n          scaleY={scale}\n          tx={tX}\n          ty={tY}\n          height={height - 2 * outerStrokeWidth}\n          width={width - 2 * outerStrokeWidth}\n          isInteractive={isInteractive}\n          dataInfo={dataInfo}\n        />\n      );\n    }\n  }\n};\n"],"names":["_jsx","_jsxs"],"mappings":"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"}