{"version":3,"file":"LabelValueLayout-89e9f1be.js","sources":["../../src/UNSAFE_LabelValueLayout/LabelValueLayout.tsx"],"sourcesContent":["import { classNames } from '../utils/UNSAFE_classNames';\nimport { ComponentChildren, JSX } from 'preact';\nimport { Flex } from '../UNSAFE_Flex';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { sizeToCSS, Size } from '../utils/UNSAFE_size';\nimport { labelSlotStyles, labelInnerStyles, valueSlotStyles } from './LabelValueLayoutStyles.css';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TextFieldRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/TextFieldTheme';\nimport { RadioRedwoodTheme } from '../UNSAFE_RadioItem/themes/redwood/RadioTheme';\nimport { LabelRedwoodTheme } from '../UNSAFE_Label/themes/redwood/LabelTheme';\nimport { FormLayoutRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/FormLayoutTheme';\nimport { CheckboxRedwoodTheme } from '../UNSAFE_Checkbox/themes/redwood/CheckboxTheme';\n\ntype TextFieldProps = {\n  /**\n   * Defines how the label is going to be positioned. For a TextField only the start and top values are allowed.\n   */\n  labelEdge?: 'start' | 'top';\n  parentComponentVariant?: 'textField' | 'textArea';\n};\ntype CheckboxRadioSetProps = {\n  /**\n   * Defines how the label is going to be positioned. For CheckboxSet or RadioSet the start, top and inside values are supported.\n   */\n  labelEdge?: 'start' | 'top' | 'inside';\n  parentComponentVariant: 'radioSet' | 'checkboxSet';\n};\n\ntype Props = (TextFieldProps | CheckboxRadioSetProps) & {\n  /**\n   * Label content of the layout\n   */\n  label?: ComponentChildren;\n\n  /**\n   * Defines the label width for labelEdge 'start' ('top' is always 100%)\n   */\n  labelStartWidth?: Size;\n  /**\n   * Value content of the layout\n   */\n  children: ComponentChildren;\n\n  hasTopUserAssistance?: boolean;\n};\n\nexport const LabelValueLayout = ({\n  label,\n  labelEdge,\n  children,\n  labelStartWidth = '33%',\n  parentComponentVariant = 'textField',\n  hasTopUserAssistance = false\n}: Props) => {\n  const { baseTheme: textFieldTheme } = useComponentTheme(TextFieldRedwoodTheme);\n  const { baseTheme: radioTheme } = useComponentTheme(RadioRedwoodTheme);\n  const { baseTheme: checkboxTheme } = useComponentTheme(CheckboxRedwoodTheme);\n  const { baseTheme: labelTheme } = useComponentTheme(LabelRedwoodTheme);\n  const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n\n  const isTextField = parentComponentVariant.startsWith('text');\n  const isRadio = parentComponentVariant === 'radioSet';\n  const isCheckbox = parentComponentVariant === 'checkboxSet';\n  const isStart = labelEdge === 'start';\n  const isTop = labelEdge === 'top' || labelEdge === 'inside'; // 'inside' needs to pick up all 'top' styles.\n  const isInside = labelEdge === 'inside';\n  const width = sizeToCSS(labelStartWidth);\n  const valueWidth = `calc(100% - ${width})`;\n\n  const labelStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: width, width: width, maxWidth: width }\n    : {};\n\n  const valueStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: valueWidth, width: valueWidth, maxWidth: valueWidth }\n    : {};\n\n  const { isFormLayout, isReadonly: isFormReadonly, labelWrapping } = useFormContext();\n  const { isReadonly } = useFormFieldContext();\n  const isPureReadonly = (isFormLayout && isFormReadonly) || (!isFormLayout && isReadonly);\n\n  const labelStyleClasses = classNames([\n    formLayoutTheme,\n    labelSlotStyles.base,\n    isStart && labelSlotStyles.start,\n    isTop && labelSlotStyles.top,\n    isTop && hasTopUserAssistance && labelSlotStyles.topAndTopUA,\n    isTop && isPureReadonly && labelSlotStyles.topPureReadonly\n  ]);\n\n  const labelInnerClasses = classNames([\n    isTextField && textFieldTheme,\n    isRadio && radioTheme,\n    isCheckbox && checkboxTheme,\n    (isRadio || isCheckbox) && labelTheme,\n    formLayoutTheme,\n    labelInnerStyles.base,\n    isStart && labelInnerStyles.start,\n    isTextField && isStart && !isPureReadonly && labelInnerStyles.startNotPureReadonly,\n    isRadio && isInside && labelInnerStyles.insideRadioSet,\n    isCheckbox && isInside && labelInnerStyles.insideCheckboxSet,\n    isRadio && isStart && !hasTopUserAssistance && labelInnerStyles.startWithNoTopRadioSetUA,\n    isCheckbox && isStart && !hasTopUserAssistance && labelInnerStyles.startWithNoTopCheckboxSetUA,\n    labelWrapping === 'truncate' && labelInnerStyles.noWrap\n  ]);\n\n  return (\n    // For readonly start aligned labels, we want the div that is the parent of the label to\n    // stretch to the height of the value content, including the end content (InputSensitiveText)\n    <Flex wrap=\"wrap\" align={isReadonly && isStart ? 'stretch' : 'start'}>\n      <div class={labelStyleClasses} style={labelStyles}>\n        <div class={labelInnerClasses}>{label}</div>\n      </div>\n      <div class={valueSlotStyles} style={valueStyles}>\n        {children}\n      </div>\n    </Flex>\n  );\n};\n"],"names":["label","labelEdge","children","labelStartWidth","parentComponentVariant","hasTopUserAssistance","baseTheme","textFieldTheme","useComponentTheme","TextFieldRedwoodTheme","radioTheme","RadioRedwoodTheme","checkboxTheme","CheckboxRedwoodTheme","labelTheme","LabelRedwoodTheme","formLayoutTheme","FormLayoutRedwoodTheme","isTextField","startsWith","isRadio","isCheckbox","isStart","isTop","isInside","width","sizeToCSS","valueWidth","labelStyles","flexBasis","maxWidth","valueStyles","isFormLayout","isReadonly","isFormReadonly","labelWrapping","useFormContext","useFormFieldContext","isPureReadonly","labelStyleClasses","classNames","labelSlotStyles","labelInnerClasses","labelInnerStyles","_jsxs","jsxs","Flex","wrap","align","_jsx","jsx","class","style"],"mappings":"k7CA+CgC,EAC9BA,QACAC,YACAC,WACAC,kBAAkB,MAClBC,yBAAyB,YACzBC,wBAAuB,MAEvB,MAAQC,UAAWC,GAAmBC,EAAiBA,kBAACC,EAAqBA,wBACrEH,UAAWI,GAAeF,EAAiBA,kBAACG,EAAiBA,oBAC7DL,UAAWM,GAAkBJ,EAAiBA,kBAACK,EAAoBA,uBACnEP,UAAWQ,GAAeN,EAAiBA,kBAACO,EAAiBA,oBAC7DT,UAAWU,GAAoBR,EAAiBA,kBAACS,EAAsBA,wBAEzEC,EAAcd,EAAuBe,WAAW,QAChDC,EAAqC,aAA3BhB,EACViB,EAAwC,gBAA3BjB,EACbkB,EAAwB,UAAdrB,EACVsB,EAAsB,QAAdtB,GAAqC,WAAdA,EAC/BuB,EAAyB,WAAdvB,EACXwB,EAAQC,YAAUvB,GAClBwB,EAAa,eAAeF,KAE5BG,EAAiCN,EACnC,CAAEO,UAAWJ,EAAOA,MAAOA,EAAOK,SAAUL,GAC5C,GAEEM,EAAiCT,EACnC,CAAEO,UAAWF,EAAYF,MAAOE,EAAYG,SAAUH,GACtD,IAEEK,aAAEA,EAAcC,WAAYC,EAAcC,cAAEA,GAAkBC,EAAAA,kBAC9DH,WAAEA,GAAeI,EAAAA,sBACjBC,EAAkBN,GAAgBE,IAAqBF,GAAgBC,EAEvEM,EAAoBC,EAAAA,WAAW,CACnCxB,EACAyB,EACAnB,GAAWmB,EACXlB,GAASkB,EACTlB,GAASlB,GAAwBoC,EACjClB,GAASe,GAAkBG,IAGvBC,EAAoBF,EAAAA,WAAW,CACnCtB,GAAeX,EACfa,GAAWV,EACXW,GAAcT,GACbQ,GAAWC,IAAeP,EAC3BE,EACA2B,EACArB,GAAWqB,EACXzB,GAAeI,IAAYgB,GAAkBK,EAC7CvB,GAAWI,GAAYmB,EACvBtB,GAAcG,GAAYmB,EAC1BvB,GAAWE,IAAYjB,GAAwBsC,EAC/CtB,GAAcC,IAAYjB,GAAwBsC,EAChC,aAAlBR,GAAgCQ,IAGlC,OAGEC,EAACC,KAAAC,EAAIA,MAACC,KAAK,OAAOC,MAAOf,GAAcX,EAAU,UAAY,QAC3DpB,SAAA,CAAA+C,EAAAC,IAAA,MAAA,CAAKC,MAAOZ,EAAmBa,MAAOxB,EACpC1B,SAAA+C,EAAAC,IAAA,MAAA,CAAKC,MAAOT,EAAoBxC,SAAAF,MAElCiD,MAAA,MAAA,CAAKE,wDAAwBC,MAAOrB,WACjC7B,MAGL"}