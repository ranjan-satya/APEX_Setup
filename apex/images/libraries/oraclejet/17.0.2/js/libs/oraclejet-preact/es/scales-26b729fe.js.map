{"version":3,"file":"scales-26b729fe.js","sources":["../../src/utils/UNSAFE_visTimeComponentScales/scales.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { getWeekStart } from '../../utils/PRIVATE_dayUtils';\nimport { getFormatParse } from '../../UNSAFE_IntlDateTime';\n\ntype ScaleOptions = {\n  target?: 'majorAxis' | 'minorAxis';\n  formatter?: (date: string) => string;\n  labelPosition?: 'start' | 'center';\n};\n\ntype TimeComponentScale = {\n  labelPosition?: 'start' | 'center';\n  formatter: (date: string) => string;\n  getNextDate: (date: string) => string;\n  getPreviousDate: (date: string) => string;\n};\n\nconst getFirstDayOfWeek = () => getWeekStart(navigator.language);\n\nconst getSecondsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric',\n        minute: '2-digit',\n        second: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMilliseconds(0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 1000).toISOString();\n    }\n  };\n};\n\nconst getMinutesScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric',\n        minute: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setSeconds(0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 60000).toISOString();\n    }\n  };\n};\n\nconst getHoursScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMinutes(0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 3600000).toISOString();\n    }\n  };\n};\n\nconst getDaysScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { target, formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'numeric',\n        day: '2-digit'\n      }).format,\n    labelPosition: labelPosition || (target === 'majorAxis' ? 'center' : 'start'),\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getWeeksScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'numeric',\n        day: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      const rollAmt = (prevDate.getDay() - getFirstDayOfWeek() + 7) % 7;\n      prevDate.setHours(0, 0, 0, 0);\n      if (rollAmt > 0) {\n        // Work with date instead of time in ms to avoid daylight savings issues\n        prevDate.setDate(prevDate.getDate() - rollAmt);\n      }\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 7);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getMonthsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'long'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setMonth(nextDate.getMonth() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getQuartersScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'long'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      const quarter = Math.floor(prevDate.getMonth() / 3);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      prevDate.setMonth(quarter * 3);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setMonth(nextDate.getMonth() + 3);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getYearsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        year: 'numeric'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMonth(0);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setFullYear(nextDate.getFullYear() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nexport {\n  getSecondsScale,\n  getMinutesScale,\n  getHoursScale,\n  getDaysScale,\n  getWeeksScale,\n  getMonthsScale,\n  getQuartersScale,\n  getYearsScale\n};\n"],"names":[],"mappings":"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"}