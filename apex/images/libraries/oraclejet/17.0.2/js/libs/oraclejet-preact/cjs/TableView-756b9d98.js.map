{"version":3,"file":"TableView-756b9d98.js","sources":["../../src/UNSAFE_TableView/TableView.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { Table } from '../PRIVATE_Table';\nimport { tableViewStyles } from './themes/TableViewStyles.css';\nimport { TableProps, TableViewHandle } from './Table.types';\nimport { TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { DimensionProps, dimensionInterpolations } from '../utils/UNSAFE_interpolations/dimensions';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\n\n/**\n * Props specific to non-virtualized TableView\n */\ntype NonVirtualizedTableProps<K, D> = {\n  /**\n   * The data that is used to render each item in TableView.  If the value is null, then TableView will show nothing\n   * if hasMore is false, or loading indicator if hasMore is true.\n   */\n  data: D[] | null;\n  /**\n   * A callback function to extract the key which is used to identify the item.\n   */\n  getRowKey: (data: D) => K;\n  /**\n   * Whether there is more data available to load.  By default this returns false.\n   */\n  hasMore?: boolean;\n  /**\n   * An optional callback function which is invoked when the user scrolls to the end of the table.\n   */\n  onLoadMore?: () => void;\n};\n\n/**\n * Props for the TableView Component\n */\nexport type Props<K, D, C extends string> = TableProps<K, D, C> &\n  NonVirtualizedTableProps<K, D> &\n  DimensionProps &\n  TestIdProps;\n\nconst mergedInterpolations = mergeInterpolations<DimensionProps>([\n  ...Object.values(dimensionInterpolations)\n]);\n\n/**\n * Component that renders data in rows of columns.\n * This component is non-virtualized and renders all rows provided in the data prop.\n */\nexport const TableView = forwardRef(\n  <K extends string | number, D, C extends string>(\n    {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      getAccessibleRowHeaders,\n      children,\n      columns,\n      columnOrder,\n      columnWidths,\n      layout = 'contents',\n      data,\n      getRowKey,\n      hasMore = false,\n      onLoadMore,\n      currentCellOverride,\n      onPersistCurrentCell,\n      currentRowVariant = 'none',\n      gridlines = { horizontal: 'visible', vertical: 'hidden' },\n      selectionMode = { row: 'none', column: 'none' },\n      selected,\n      onSelectionChange,\n      onRowAction,\n      sortCriterion = [],\n      onSortCriterionChange,\n      horizontalScrollPositionOverride,\n      verticalScrollPositionOverride,\n      columnResizingIndicator,\n      onColumnResizing,\n      onColumnResize,\n      noDataRenderer,\n      testId,\n      ...dimensions\n    }: Props<K, D, C>,\n    ref?: ForwardedRef<TableViewHandle<K, C>>\n  ) => {\n    const { ...mergedStyles } = mergedInterpolations(dimensions);\n    const tableViewClasses = classNames([tableViewStyles.base]);\n\n    return (\n      <div class={tableViewClasses} style={mergedStyles}>\n        <Table<K, D, C>\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          getAccessibleRowHeaders={getAccessibleRowHeaders}\n          children={children}\n          columns={columns}\n          columnOrder={columnOrder}\n          columnWidths={columnWidths}\n          layout={layout}\n          data={data}\n          getRowKey={getRowKey}\n          hasMore={hasMore}\n          onLoadMore={onLoadMore}\n          currentCellOverride={currentCellOverride}\n          onPersistCurrentCell={onPersistCurrentCell}\n          currentRowVariant={currentRowVariant}\n          gridlines={gridlines}\n          selectionMode={selectionMode}\n          selected={selected}\n          onSelectionChange={onSelectionChange}\n          onRowAction={onRowAction}\n          horizontalScrollPositionOverride={horizontalScrollPositionOverride}\n          verticalScrollPositionOverride={verticalScrollPositionOverride}\n          sortCriterion={sortCriterion}\n          onSortCriterionChange={onSortCriterionChange}\n          columnResizingIndicator={columnResizingIndicator}\n          onColumnResizing={onColumnResizing}\n          onColumnResize={onColumnResize}\n          noDataRenderer={noDataRenderer}\n          testId={testId}\n          ref={ref}\n        />\n      </div>\n    );\n  }\n) as <K extends string | number, D, C extends string>(\n  p: Props<K, D, C> & { ref?: ForwardedRef<TableViewHandle<K, C>> }\n) => JSXInternal.Element;\n"],"names":["mergeInterpolations","dimensionInterpolations","forwardRef","classNames","tableViewStyles","_jsx","Table"],"mappings":";;;;;;;;;;;AAgDA,MAAM,oBAAoB,GAAGA,uCAAmB,CAAiB;AAC/D,IAAA,GAAG,MAAM,CAAC,MAAM,CAACC,kCAAuB,CAAC;AAC1C,CAAA,CAAC,CAAC;AAEH;;;AAGG;MACU,SAAS,GAAGC,iBAAU,CACjC,CACE,EACE,YAAY,EAAE,SAAS,EACvB,iBAAiB,EAAE,cAAc,EACjC,uBAAuB,EACvB,QAAQ,EACR,OAAO,EACP,WAAW,EACX,YAAY,EACZ,MAAM,GAAG,UAAU,EACnB,IAAI,EACJ,SAAS,EACT,OAAO,GAAG,KAAK,EACf,UAAU,EACV,mBAAmB,EACnB,oBAAoB,EACpB,iBAAiB,GAAG,MAAM,EAC1B,SAAS,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,EACzD,aAAa,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAC/C,QAAQ,EACR,iBAAiB,EACjB,WAAW,EACX,aAAa,GAAG,EAAE,EAClB,qBAAqB,EACrB,gCAAgC,EAChC,8BAA8B,EAC9B,uBAAuB,EACvB,gBAAgB,EAChB,cAAc,EACd,cAAc,EACd,MAAM,EACN,GAAG,UAAU,EACE,EACjB,GAAyC,KACvC;IACF,MAAM,EAAE,GAAG,YAAY,EAAE,GAAG,oBAAoB,CAAC,UAAU,CAAC,CAAC;IAC7D,MAAM,gBAAgB,GAAGC,qBAAU,CAAC,CAACC,2DAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAE5D,IAAA,QACEC,cAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,YAAY,EAAA,QAAA,EAC/CA,cAAC,CAAAC,WAAK,EACQ,EAAA,YAAA,EAAA,SAAS,EACJ,iBAAA,EAAA,cAAc,EAC/B,uBAAuB,EAAE,uBAAuB,EAChD,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,EAC1B,MAAM,EAAE,MAAM,EACd,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,EACtB,mBAAmB,EAAE,mBAAmB,EACxC,oBAAoB,EAAE,oBAAoB,EAC1C,iBAAiB,EAAE,iBAAiB,EACpC,SAAS,EAAE,SAAS,EACpB,aAAa,EAAE,aAAa,EAC5B,QAAQ,EAAE,QAAQ,EAClB,iBAAiB,EAAE,iBAAiB,EACpC,WAAW,EAAE,WAAW,EACxB,gCAAgC,EAAE,gCAAgC,EAClE,8BAA8B,EAAE,8BAA8B,EAC9D,aAAa,EAAE,aAAa,EAC5B,qBAAqB,EAAE,qBAAqB,EAC5C,uBAAuB,EAAE,uBAAuB,EAChD,gBAAgB,EAAE,gBAAgB,EAClC,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,EAC9B,MAAM,EAAE,MAAM,EACd,GAAG,EAAE,GAAG,EACR,CAAA,EAAA,CACE,EACN;AACJ,CAAC;;;;"}