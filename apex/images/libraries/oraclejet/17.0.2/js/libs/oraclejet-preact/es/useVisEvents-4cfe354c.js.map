{"version":3,"file":"useVisEvents-4cfe354c.js","sources":["../../src/hooks/PRIVATE_useVisEvents/useVisEvents.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef, useState } from 'preact/hooks';\nimport { useUser } from '#hooks/UNSAFE_useUser';\nimport type { gestureTypes } from '#hooks/PRIVATE_useVisContextMenu';\nimport { getRandomId } from '#utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport { cancelEvent } from '../../utils/UNSAFE_visUtils/eventsUtils';\nimport { useVisHover } from '#hooks/PRIVATE_useVisHover';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\ntype ItemInfo = { isCurrent?: boolean; isFocusVisible?: boolean };\n\ntype EventDetail<D> = { data?: D };\n\nexport function useVisEvent<\n  I extends ItemInfo,\n  J extends EventDetail<D>,\n  L extends EventDetail<D>,\n  D\n>(\n  touchResponse: 'touchStart' | 'touchHold',\n  isInteractive: boolean,\n  isItemActionable: (itemInfo: I) => boolean,\n  getKeyUpHandler: (\n    triggerOnAction: () => void,\n    updatefocusedItemInfo: (itemInfo: I) => void,\n    focusedItemInfo: I,\n    isHideShow?: boolean\n  ) => (event: KeyboardEvent) => void,\n  getDetailFromInfo: (info?: I) => J | L,\n  getPrevItemInfo: (info: I) => I,\n  getNextItemInfo: (info: I) => I,\n  onItemAction: ((detail: J) => void) | undefined,\n  onItemHover: ((detail: L) => void) | undefined,\n  onItemFocus: ((detail: L) => void) | undefined,\n  isEqualItem: (item1?: I, item2?: I) => boolean,\n  getItemInfo: (element: HTMLElement) => I | undefined,\n  initItemInfo: I,\n  isHideShow?: boolean\n) {\n  const activeIdRef = useRef<string>();\n\n  const [focusedItemInfo, setfocusedItemInfo] = useState<I>(initItemInfo);\n  const [hoveredItemInfo, sethoveredItemInfo] = useState<I>();\n\n  const onHover = (event: PointerEvent) => {\n    const itemInfo = getItemInfo(event.target as HTMLElement);\n    if (!isEqualItem(itemInfo, hoveredItemInfo)) {\n      sethoveredItemInfo(itemInfo && { ...itemInfo, isCurrent: true });\n      activeIdRef.current = getRandomId();\n      if (isInteractive) {\n        focusedItemInfo ? setfocusedItemInfo({ ...focusedItemInfo, isCurrent: false }) : '';\n        onItemHover?.(getDetailFromInfo(itemInfo) as L);\n      }\n    }\n  };\n\n  const onHoverLeave = () => {\n    sethoveredItemInfo(undefined);\n    activeIdRef.current = undefined;\n    if (isInteractive) {\n      onItemHover?.(getDetailFromInfo() as L);\n    }\n  };\n\n  const hoverHandlers = useVisHover(onHover, undefined, onHoverLeave, touchResponse);\n\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  if (!isInteractive) {\n    return {\n      isInteractive: false,\n      focusedItemInfo,\n      hoveredItemInfo,\n      // include relevant hover handlers for datatip\n      eventsProps: hoverHandlers\n    };\n  }\n\n  const updatefocusedItemInfo = (itemInfo: I) => {\n    onItemFocus?.(getDetailFromInfo(itemInfo) as L);\n    activeIdRef.current = getRandomId();\n    setfocusedItemInfo(itemInfo);\n  };\n\n  const handleKeyboardInput = (item: I) => {\n    if (!isEqualItem(item, focusedItemInfo)) {\n      item.isCurrent = true;\n      item.isFocusVisible = true;\n      if (hoveredItemInfo) {\n        sethoveredItemInfo({ ...hoveredItemInfo, isCurrent: false });\n      }\n      updatefocusedItemInfo(item);\n    }\n  };\n\n  const triggerOnAction = () => {\n    const detail = getDetailFromInfo(focusedItemInfo) as J;\n    if (detail && detail.data && isItemActionable(focusedItemInfo)) {\n      onItemAction?.(detail);\n      activeIdRef.current = getRandomId();\n    }\n  };\n\n  const onPointerUp = (event: PointerEvent) => {\n    const itemInfo = getItemInfo(event.target as HTMLElement);\n    if (itemInfo != null && isItemActionable(itemInfo)) {\n      setfocusedItemInfo(itemInfo);\n      const detail = getDetailFromInfo(itemInfo);\n      if (detail && isItemActionable(itemInfo)) {\n        onItemAction?.(detail as J);\n        activeIdRef.current = getRandomId();\n      }\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const key = event.key;\n    switch (key) {\n      case 'Tab':\n        return;\n      case 'ArrowDown': {\n        const nextItemInfo = getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowUp': {\n        const nextItemInfo = getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowRight': {\n        const nextItemInfo = isRtl\n          ? getPrevItemInfo(focusedItemInfo)\n          : getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowLeft': {\n        const nextItemInfo = isRtl\n          ? getNextItemInfo(focusedItemInfo)\n          : getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n\n  const onKeyUp = getKeyUpHandler(\n    triggerOnAction,\n    updatefocusedItemInfo,\n    focusedItemInfo,\n    isHideShow\n  );\n\n  const onContextMenuDismissed = (gesture: gestureTypes) => {\n    if (gesture === 'keyboard') {\n      updatefocusedItemInfo({\n        ...focusedItemInfo,\n        isCurrent: true,\n        isFocusVisible: true\n      });\n    }\n  };\n\n  const onBlur = () => {\n    const itemInfo = { ...focusedItemInfo, isCurrent: false, isFocusVisible: false } as I;\n    if (hoveredItemInfo != null || focusedItemInfo.isCurrent) {\n      onItemFocus?.(getDetailFromInfo(undefined) as L);\n    }\n    setfocusedItemInfo(itemInfo);\n  };\n\n  return {\n    isInteractive: true,\n    focusedItemInfo,\n    hoveredItemInfo,\n    activeId: activeIdRef.current,\n    triggerOnAction,\n    updatefocusedItemInfo,\n    onContextMenuDismissed,\n    eventsProps: mergeProps(hoverHandlers, {\n      onPointerUp,\n      onKeyUp,\n      onKeyDown,\n      onBlur\n    })\n  };\n}\n"],"names":[],"mappings":"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"}