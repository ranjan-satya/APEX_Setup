{"version":3,"file":"PictoChart-bbd66c57.js","sources":["../../src/UNSAFE_PictoChart/PictoChartContext.tsx","../../src/UNSAFE_PictoChart/pictoChartLayoutUtils.ts","../../src/UNSAFE_PictoChart/pictoChartUtils.tsx","../../src/UNSAFE_PictoChart/pictoChartNavUtils.ts","../../src/UNSAFE_PictoChart/useEvents.ts","../../src/UNSAFE_PictoChart/usePictoChartDatatip.ts","../../src/UNSAFE_PictoChart/PictoChartElement.tsx","../../src/UNSAFE_PictoChart/PictoChartWithDimensions.tsx","../../src/UNSAFE_PictoChart/PictoChart.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { useContext } from 'preact/hooks';\n\ntype PictoChartContextValue = {\n  supportsSelection?: boolean;\n};\n\nconst PictoChartContext = createContext<PictoChartContextValue>({} as PictoChartContextValue);\nconst usePictoChartContext = () => useContext(PictoChartContext);\n\nexport { PictoChartContext, usePictoChartContext };\n","import type { PictoChartItemData } from './pictoChart.type';\nimport { DEFAULT_SIZE } from './themes/PictoChartStyles.css';\n\nconst GAP_RATIO = 0.25;\n\nfunction _ceil(a: number, b: number) {\n  return Math.ceil(a / b) * b;\n}\n\nexport function getFlowingInfo<K, D extends PictoChartItemData<K>>(\n  items: D[],\n  isVert: boolean,\n  width: number,\n  height: number,\n  isFlowingWidth: boolean,\n  isFlowingHeight: boolean,\n  colCount?: number,\n  rowCount?: number,\n  colWidth?: number,\n  rowHeight?: number\n) {\n  let numCells = 0;\n  let maxColSpan = 1;\n  let maxRowSpan = 1;\n  let minSpan = Infinity;\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const columnSpan = item.columnSpan || 1;\n    const rowSpan = item.rowSpan || 1;\n    if (columnSpan <= 0 || rowSpan <= 0) continue;\n\n    // Compute the maximum columnSpan and rowSpan\n    if (columnSpan > maxColSpan) maxColSpan = columnSpan;\n    if (rowSpan > maxRowSpan) maxRowSpan = rowSpan;\n\n    // Compute minimum span for gap computation\n    if (columnSpan < minSpan) minSpan = columnSpan;\n    if (rowSpan < minSpan) minSpan = rowSpan;\n\n    numCells += columnSpan * rowSpan * (item.count || 1);\n  }\n\n  if (numCells === 0) return {};\n\n  // Default colWidth and rowHeight for flowing layout\n  if (isFlowingWidth || isFlowingHeight) {\n    if (!colWidth) colWidth = rowHeight ? rowHeight : DEFAULT_SIZE;\n    if (!rowHeight) rowHeight = colWidth;\n  }\n\n  // Default colCount and rowCount for both layouts\n  // We set the default colCount (or rowCount) to be an integer multiple of the maxColSpan (or maxRowSpan) to\n  // ensure that all the items can find a spot to occupy in the mixed sizes case.\n\n  if (!colCount && !rowCount) {\n    // Try to achieve square cells, (width / colCount) = (height / rowCount)\n    if (!isFlowingWidth && !isFlowingHeight) {\n      if (isVert) rowCount = _ceil(Math.sqrt((numCells * height) / width), maxRowSpan);\n      else colCount = _ceil(Math.sqrt((numCells * width) / height), maxColSpan);\n    } else if (!isFlowingWidth) colCount = Math.max(Math.floor(width / (colWidth || 1)), 1);\n    else if (!isFlowingHeight) rowCount = Math.max(Math.floor(height / (rowHeight || 1)), 1);\n    else {\n      if (isVert) rowCount = _ceil(Math.sqrt(numCells), maxRowSpan);\n      else colCount = _ceil(Math.sqrt(numCells), maxColSpan);\n    }\n  }\n\n  // Now only either colCount or rowCount is undefined\n  if (!colCount) colCount = _ceil(numCells / (rowCount || 1), maxColSpan);\n  else if (!rowCount) rowCount = _ceil(numCells / colCount, maxRowSpan);\n\n  const gridGap = GAP_RATIO * minSpan;\n  // Default colWidth and rowHeight for fixed layout\n  if (!isFlowingWidth && !isFlowingHeight) {\n    if (!colWidth)\n      colWidth = rowHeight ? rowHeight : Math.min(width / colCount, height / (rowCount || 1));\n    if (!rowHeight) rowHeight = colWidth;\n  }\n\n  if (\n    colCount <= 0 ||\n    !rowCount ||\n    rowCount <= 0 ||\n    !colWidth ||\n    colWidth <= 0 ||\n    !rowHeight ||\n    rowHeight <= 0\n  )\n    return {};\n\n  return {\n    calcColCount: colCount,\n    calcRowCount: rowCount,\n    calcColWidth: colWidth ? colWidth - gridGap : colWidth,\n    calcRowHeight: rowHeight ? rowHeight - gridGap : rowHeight,\n    gridGap: gridGap\n  };\n}\n\n/**\n * Returns whether the pictoChart is layout from bottom to top.\n */\nconst isOriginBottom = (origin: string) => {\n  return origin === 'bottomStart' || origin === 'bottomEnd';\n};\n\n/**\n * Returns whether the pictoChart is layout from right to left.\n */\nconst isOriginRight = (origin: string) => {\n  const isEnd = origin === 'topEnd' || origin === 'bottomEnd';\n  return isEnd;\n};\n\n/**\n * Returns whether the cells are available given col, row and columnSpan, rowSpan needed.\n */\nconst areCellsAvailable = (\n  map: boolean[][],\n  col: number,\n  row: number,\n  columnSpan: number,\n  rowSpan: number\n) => {\n  for (let r = 0; r < rowSpan; r++) {\n    for (let c = 0; c < columnSpan; c++) {\n      if (map[row + r][col + c]) return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Occupies the cell in the map given col, row and columnSpan, rowSpan.\n */\nconst occupyCells = (\n  map: boolean[][],\n  col: number,\n  row: number,\n  columnSpan: number,\n  rowSpan: number\n) => {\n  for (let r = 0; r < rowSpan; r++) {\n    for (let c = 0; c < columnSpan; c++) {\n      map[row + r][col + c] = true;\n    }\n  }\n};\n\n/**\n * Returns whether the cells are available given col, row and the colCount and rowCount of the pictochart.\n */\nconst findNextAvailableCell = (\n  map: boolean[][],\n  columnSpan: number,\n  rowSpan: number,\n  colCount: number,\n  rowCount: number,\n  isVert: boolean\n): { row: number; col: number } | undefined => {\n  if (isVert) {\n    // For vertical layout, switch row and col in the computation, and switch the result back\n    const cell = findNextAvailableCell(map, rowSpan, columnSpan, rowCount, colCount, false);\n    return cell ? { col: cell.row, row: cell.col } : undefined;\n  }\n\n  for (let r = 0; r < rowCount - rowSpan + 1; r++) {\n    for (let c = 0; c < colCount - columnSpan + 1; c++) {\n      if (areCellsAvailable(map, c, r, columnSpan, rowSpan)) {\n        occupyCells(map, c, r, columnSpan, rowSpan);\n        return { col: c, row: r };\n      }\n    }\n  }\n\n  return;\n};\n\n/**\n * Returns the picto items with row and col of the pictochart.\n */\nexport function generateElementCoords<K, D extends PictoChartItemData<K>>(\n  items: D[],\n  row: number,\n  column: number,\n  layoutOrigin: 'topStart' | 'topEnd' | 'bottomStart' | 'bottomEnd',\n  isVert: boolean\n) {\n  const rowCount = row;\n  const colCount = column;\n  const isLayoutBottom = isOriginBottom(layoutOrigin);\n  const isLayoutRight = isOriginRight(layoutOrigin);\n\n  const pictoItems = [];\n  const map: boolean[][] = new Array(rowCount);\n  for (let i = 0; i < rowCount; i++) {\n    map[i] = new Array(colCount).fill(false);\n  }\n\n  for (let i = 0; i < items.length; i++) {\n    const currItem = items[i];\n    let count = 0;\n    const rowSpan = currItem.rowSpan ?? 1;\n    const columnSpan = currItem.columnSpan ?? 1;\n    const totalCount = currItem.count ?? 1;\n\n    while (count < totalCount) {\n      const cell = findNextAvailableCell(map, columnSpan, rowSpan, colCount, rowCount, isVert);\n      if (cell !== undefined) {\n        pictoItems.push({\n          row: isLayoutBottom ? rowCount - cell.row - rowSpan : cell.row,\n          col: isLayoutRight ? colCount - cell.col - columnSpan : cell.col,\n          countIdx: count,\n          itemIdx: i,\n          item: currItem\n        });\n      }\n      count += 1;\n    }\n  }\n\n  return pictoItems;\n}\n","import { ComponentChildren } from 'preact';\nimport type {\n  ItemInfo,\n  PictoChartItemData,\n  MarkerRendererContext,\n  PictoRendererOptions,\n  DatatipContext\n} from './pictoChart.type';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { BundleType } from '../resources/nls/bundle';\nimport { MarkerShapes } from '../utils/UNSAFE_visTypes/common';\nimport { colorSchemeVars } from '../Common/themes/themeContract.css';\nimport { rgb, rgba } from '../UNSAFE_Theme';\nimport { SvgSymbol } from '../PRIVATE_SvgShapes';\nimport { usePictoChartContext } from './PictoChartContext';\nimport { Property } from 'csstype';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { generateAriaLabel } from '#utils/UNSAFE_visUtils/accUtils';\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param highlighted The set of highlighted item\n */\nexport function isItemHighlighted<K>(id: K, highlightedIds?: K[]) {\n  if (!highlightedIds || highlightedIds.length === 0) {\n    return true;\n  }\n  return new Set(highlightedIds).has(id);\n}\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param selectedIds The set of highlighted item\n */\nexport function isItemSelected<K>(id: K, selectedIds?: K[]) {\n  if (!selectedIds || selectedIds.length === 0) {\n    return false;\n  }\n  return new Set(selectedIds).has(id);\n}\n\n/**\n * Returns the value of the data-oj-item-index attribute for a given element.\n * @param element The HTML element.\n */\nexport function getItemInfo(element: HTMLElement) {\n  const itemIdx = element.dataset['idx'];\n  if (itemIdx === undefined) return;\n\n  return {\n    idx: Number(itemIdx)\n  };\n}\n\n/**\n * Returns the item props for PictoChart.\n * @param item The picto chart item.\n * @param itemIdx The item index of the item.\n * @param countIdx The item count of the item.\n * @param isReadOnly Whether the picto chart is readonly.\n * @param hoveredItem The info of the currently hovered item.\n * @param selectedIds The selected Ids\n * @param focusedItem The info of currently focused item.\n * @param highlightedIds The highlighted ids.\n * @param activeId The active Id\n */\nexport function getItemProps<K, D extends PictoChartItemData<K>>(\n  item: D,\n  itemIdx: number,\n  countIdx: number,\n  isReadOnly: boolean,\n  hoveredItem?: ItemInfo,\n  selectedIds?: Array<K>,\n  focusedItem?: ItemInfo,\n  highlightedIds?: Array<K>,\n  activeId?: string\n) {\n  let isCurrent = false;\n  if (!isReadOnly) {\n    const isFocusedItem = !!focusedItem && itemIdx === focusedItem.idx;\n    const isHoveredItem = !!hoveredItem && itemIdx === hoveredItem.idx;\n    isCurrent = !!(\n      (isFocusedItem && focusedItem?.isCurrent) ||\n      (isHoveredItem && hoveredItem?.isCurrent)\n    );\n  }\n  const isHighlighted = isItemHighlighted<K>(item.id, highlightedIds);\n  const isSelected = isItemSelected(item.id, selectedIds);\n  const hasSelection = selectedIds && selectedIds.length !== 0;\n\n  return {\n    isCurrent,\n    isHighlighted: isHighlighted,\n    isSelected: isSelected,\n    hasSelection,\n    isFocused: focusedItem ? hasFocusRing(focusedItem, itemIdx) : false,\n    key: item.id,\n    itemIdx,\n    countIdx,\n    activeId: isCurrent ? activeId : undefined,\n    isReadOnly,\n    item: item\n  };\n}\n\n/**\n * Compares if two ItemInfo are equal\n * @param item1\n * @param item2\n * @returns\n */\nexport function isEqualItem(item1?: ItemInfo, item2?: ItemInfo) {\n  return item1?.idx === item2?.idx;\n}\n\n/**\n * Checks if the item is the currentItem and if the focus ring\n * is visible.\n * @param itemInfo ItemInfo\n * @param itemIdx Item index\n */\nexport function hasFocusRing(itemInfo: ItemInfo, itemIdx: number) {\n  if (!itemInfo.isFocusVisible) return false;\n  return itemInfo.idx === itemIdx;\n}\n\n/**\n *\n */\nexport function getCountWithTotal(itemCount: number, totalCount: number, translations: BundleType) {\n  const totalWithCountLabel = `${translations?.vis_labelCountWithTotal({\n    itemCount: itemCount.toString(),\n    totalCount: totalCount.toString()\n  })}`;\n  return totalWithCountLabel;\n}\n\n/**\n * Returns the aria properties for the picto chart.\n * @param isReadOnly { boolean } If the picto chart is readonly.\n * @param accessibleLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getItemAriaProps(\n  itemCount: number,\n  totalCount: number,\n  supportsSelection: boolean,\n  label?: string,\n  translations?: BundleType,\n  isSelected?: boolean,\n  hasSelection?: boolean,\n  accessibleLabel?: string,\n  activeId?: string\n): {\n  'aria-label'?: HTMLAttributesSignalExcluded['aria-label'];\n  role: HTMLAttributesSignalExcluded['role'];\n  id?: string;\n} {\n  const totalWithCountLabel = translations\n    ? getCountWithTotal(itemCount, totalCount, translations)\n    : '';\n\n  accessibleLabel = accessibleLabel || `${label ? label + ': ' : ''}${totalWithCountLabel}`; // TODO: use a translation string for :\n\n  return {\n    'aria-label':\n      generateAriaLabel(translations!, accessibleLabel, {\n        isSelected: !supportsSelection && !hasSelection ? undefined : isSelected\n      }) || undefined,\n    role: 'img',\n    id: activeId\n  };\n}\n\n/**\n * Returns the marker props for SVGSymbol\n */\nexport function getMarkerProps(\n  shape: MarkerShapes,\n  color?: ColorProps['color'],\n  isFocused?: boolean,\n  isSelected?: boolean,\n  isCurrent?: boolean,\n  supportsSelection?: boolean\n) {\n  const isHuman = shape === 'human';\n  const applyHover = isFocused || (isCurrent && supportsSelection);\n  const isNoneEqualSides = shape === 'ellipse' || shape === 'rectangle';\n  color = color !== '' ? color : rgba(colorSchemeVars.palette.neutral['190'], 0.15);\n  const outerBorderColor = isSelected ? colorSchemeVars.textIcon.primary : applyHover ? color : '';\n\n  return {\n    markerShape: shape,\n    tx: isHuman ? 70 : undefined,\n    ty: isHuman ? 60 : undefined,\n    markerColor: color,\n    borderColor: isSelected || applyHover ? rgb(colorSchemeVars.palette.neutral[0]) : color,\n    outerBorderColor,\n    markerScale: isNoneEqualSides && !outerBorderColor ? 1 : 0.85,\n    setAspectRatioNone: isNoneEqualSides ? true : false\n  };\n}\n\n// Creating component to read the context\nconst PictoRenderer = <K,>({\n  context,\n  markerProps\n}: {\n  context: MarkerRendererContext<K>;\n  markerProps: PictoRendererOptions;\n}) => {\n  const { supportsSelection } = usePictoChartContext();\n  const markerProp = getMarkerProps(\n    markerProps.shape,\n    markerProps.color,\n    context.state.focused,\n    context.state.selected,\n    context.state.hovered,\n    supportsSelection\n  );\n\n  return <SvgSymbol {...markerProp} />;\n};\n\n/**\n * Returns the marker renderer for SVGSymbol\n */\nexport function getPictoDefaultRenderers<\n  K,\n  D extends PictoChartItemData<K> = PictoChartItemData<K>\n>(rendererOptions: (data: D) => PictoRendererOptions) {\n  return {\n    markerRenderer: (context: MarkerRendererContext<D>) => {\n      const props = rendererOptions(context.data); // TODO: should we add default values\n      return <PictoRenderer context={context} markerProps={props} />;\n    },\n    datatipRenderer: (context: DatatipContext<D>) => {\n      const props = rendererOptions(context.data);\n      return { borderColor: props.color };\n    }\n  };\n}\n\nexport function getTotalCount<K>(items: PictoChartItemData<K>[]) {\n  let totalCount = 0;\n  for (let i = 0; i < items.length; i++) {\n    totalCount += items[i].count || 1;\n  }\n  return totalCount;\n}\n\n/**\n * Returns the text for the picto chart datatip.\n * @param items The picto chart items data.\n * @param focusedItem The item currently keyboard focused.\n * @param hoveredItem The item that is currently hovered.\n * @param datatip The datatip.\n */\nexport function getDatatipContent<K, D extends PictoChartItemData<K>>(\n  items: D[],\n  getItem: (itemInfo: ItemInfo, items: D[]) => D | undefined,\n  totalCount: number,\n  focusedItem: ItemInfo,\n  hoveredItem?: ItemInfo,\n  datatip?: (context: DatatipContext<D>) => {\n    content?: ComponentChildren;\n    borderColor?: Property.BorderColor;\n  },\n  translations?: BundleType\n) {\n  let itemInfo;\n  const isPointerActive = hoveredItem?.isCurrent;\n  if (isPointerActive && items[hoveredItem.idx].id != null) {\n    itemInfo = hoveredItem;\n  }\n  if (focusedItem && focusedItem.isCurrent) {\n    itemInfo = focusedItem;\n  }\n  let _content, countWithTotal;\n  let _borderColor: string = rgba(colorSchemeVars.palette.neutral['190'], 0.15);\n  const item = itemInfo && getItem(itemInfo, items);\n  if (item && datatip) {\n    // custom datatip\n    const datatipContext = item && { data: item };\n    const { content, borderColor } = datatip(datatipContext);\n    _content = content;\n    _borderColor = borderColor || _borderColor;\n    countWithTotal = translations\n      ? getCountWithTotal(item.count || 1, totalCount, translations)\n      : '';\n  }\n  return {\n    borderColor: _borderColor,\n    content:\n      _content ||\n      (itemInfo && getItem(itemInfo, items)?.accessibleLabel) ||\n      (itemInfo && getItem(itemInfo, items)?.label + ': ' + countWithTotal) ||\n      countWithTotal\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type {\n  ItemHoverDetail,\n  ItemFocusDetail,\n  ItemInfo,\n  PictoChartItemData\n} from './pictoChart.type';\n\n/**\n * Returns the item based on item info in a picto chart.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getItem<K, D extends PictoChartItemData<K>>(itemInfo: ItemInfo, items: D[]) {\n  const { idx } = itemInfo;\n  return items[idx];\n}\n\n/**\n * Returns the next item's info in a picto chart.\n * @param itemInfo\n * @param items\n * @returns\n */\nfunction getNextItemInfo<K, D extends PictoChartItemData<K>>(itemInfo: ItemInfo, items: D[]) {\n  let idx = itemInfo.idx;\n\n  idx = Math.min(items.length - 1, idx + 1);\n  return { idx: idx };\n}\n\n/**\n * Returns the previous item's info in a picto chart.\n * @param itemInfo\n * @returns\n */\nfunction getPrevItemInfo(itemInfo: ItemInfo) {\n  let idx = itemInfo.idx;\n\n  idx = Math.max(0, idx - 1);\n  return { idx: idx };\n}\n\n/**\n * Returns utils functions for navigation in a picto chart.\n * @param items\n * @returns\n */\nexport function getPictoChartNavUtils<K, D extends PictoChartItemData<K>>(items: D[]) {\n  return {\n    getItem: (itemInfo: ItemInfo) => {\n      return getItem(itemInfo, items);\n    },\n    getDetailFromInfo: (itemInfo?: ItemInfo): ItemHoverDetail<K, D> | ItemFocusDetail<K, D> => {\n      if (!itemInfo) {\n        return { id: undefined, data: undefined };\n      }\n      const item = getItem(itemInfo, items);\n      return { id: item ? item.id : undefined, data: item };\n    },\n    getPrevItemInfo: (itemInfo: ItemInfo) => {\n      return getPrevItemInfo(itemInfo);\n    },\n    getNextItemInfo: (itemInfo: ItemInfo) => {\n      return getNextItemInfo(itemInfo, items);\n    }\n  };\n}\n","import { useCallback, useRef, useState } from 'preact/hooks';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport type {\n  ItemHoverDetail,\n  ItemFocusDetail,\n  ItemInfo,\n  PictoChartItemData,\n  ItemDrillDetail\n} from './pictoChart.type';\nimport { getItemInfo, isEqualItem } from './pictoChartUtils';\nimport { getRandomId } from '../utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport { cancelEvent } from '../utils/UNSAFE_visUtils/eventsUtils';\nimport { useVisHover } from '#hooks/PRIVATE_useVisHover';\nimport { useVisDrill } from '#hooks/PRIVATE_useVisDrill';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\nexport function useEvents<K, D extends PictoChartItemData<K>>(\n  touchResponse: 'touchStart' | 'touchHold',\n  isInteractive: boolean,\n  selectionMode: 'none' | 'single' | 'multiple',\n  getDetailFromInfo: (info?: ItemInfo) => ItemHoverDetail<K, D> | ItemFocusDetail<K, D>,\n  getPrevItemInfo: (info: ItemInfo) => ItemInfo,\n  getNextItemInfo: (info: ItemInfo) => ItemInfo,\n  drilling?: 'on' | 'off',\n  onItemDrill?: (detail: ItemDrillDetail<K, D>) => void,\n  onItemHover?: (detail: ItemHoverDetail<K, D>) => void,\n  onItemFocus?: (detail: ItemFocusDetail<K, D>) => void\n) {\n  const [focusedItemInfo, setfocusedItemInfo] = useState<ItemInfo>({ idx: 0 });\n  const [hoveredItemInfo, sethoveredItemInfo] = useState<ItemInfo>();\n\n  const activeId = useRef<string>();\n\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n\n  const onHover = (event: PointerEvent) => {\n    const itemInfo = getItemInfo(event.target as HTMLElement);\n    if (!isEqualItem(itemInfo, hoveredItemInfo)) {\n      sethoveredItemInfo(itemInfo && { ...itemInfo, isCurrent: true });\n      activeId.current = getRandomId();\n      if (isInteractive) {\n        setfocusedItemInfo({ ...focusedItemInfo, isCurrent: false });\n        onItemHover?.(getDetailFromInfo(itemInfo));\n      }\n    }\n  };\n\n  const onHoverLeave = () => {\n    sethoveredItemInfo(undefined);\n    activeId.current = undefined;\n    if (isInteractive) {\n      onItemHover?.(getDetailFromInfo());\n    }\n  };\n\n  const hoverHandlers = useVisHover(onHover, undefined, onHoverLeave, touchResponse);\n\n  const processDrill = useCallback(\n    (info?: ItemInfo) => {\n      const { id, data } = getDetailFromInfo(info);\n      if (id != null && data) {\n        onItemDrill?.({ id, data });\n        activeId.current = getRandomId();\n      }\n    },\n    [getDetailFromInfo, onItemDrill]\n  );\n\n  const onDrill = useCallback(\n    (event: Event) => {\n      if (event.type === 'keydown') {\n        if (drilling == 'on') processDrill(focusedItemInfo);\n      } else {\n        processDrill(getItemInfo(event.target as HTMLElement));\n      }\n    },\n    [drilling, focusedItemInfo, processDrill]\n  );\n\n  const drillProps = useVisDrill(selectionMode, onDrill);\n\n  if (!isInteractive) {\n    return {\n      focusedItemInfo,\n      hoveredItemInfo,\n      // include relevant hover handlers for datatip\n      eventsProps: hoverHandlers\n    };\n  }\n\n  function updatefocusedItemInfo(itemInfo: ItemInfo) {\n    onItemFocus?.(getDetailFromInfo(itemInfo));\n    activeId.current = getRandomId();\n    setfocusedItemInfo(itemInfo);\n  }\n\n  function handleKeyboardInput(item: ItemInfo) {\n    if (!isEqualItem(item, focusedItemInfo)) {\n      item.isCurrent = true;\n      item.isFocusVisible = true;\n      if (hoveredItemInfo) {\n        sethoveredItemInfo({ ...hoveredItemInfo, isCurrent: false });\n      }\n      updatefocusedItemInfo(item);\n    }\n  }\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    const key = event.key;\n    switch (key) {\n      case 'Tab':\n        return;\n      case 'ArrowDown': {\n        const nextItemInfo = getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowUp': {\n        const nextItemInfo = getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowRight': {\n        const nextItemInfo = isRtl\n          ? getPrevItemInfo(focusedItemInfo)\n          : getNextItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n      case 'ArrowLeft': {\n        const nextItemInfo = isRtl\n          ? getNextItemInfo(focusedItemInfo)\n          : getPrevItemInfo(focusedItemInfo);\n        handleKeyboardInput(nextItemInfo);\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n\n  const onKeyUp = (event: KeyboardEvent) => {\n    const key = event.code;\n    switch (key) {\n      case 'Tab': {\n        updatefocusedItemInfo({\n          ...focusedItemInfo,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n\n  const onBlur = () => {\n    if (hoveredItemInfo != null || focusedItemInfo.isCurrent) {\n      onItemFocus?.(getDetailFromInfo(undefined));\n    }\n    const itemInfo = { ...focusedItemInfo, isCurrent: false, isFocusVisible: false };\n    setfocusedItemInfo(itemInfo);\n  };\n\n  return {\n    focusedItemInfo,\n    hoveredItemInfo,\n    activeId: activeId.current,\n    eventsProps: mergeProps(drillProps, hoverHandlers, {\n      onKeyUp,\n      onKeyDown,\n      onBlur\n    })\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref } from 'preact/hooks';\nimport type { ItemInfo } from './pictoChart.type';\nimport { calculateOffset, useDatatip } from '../hooks/PRIVATE_useDatatip';\nimport { ComponentChildren } from 'preact';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { Property } from 'csstype';\n\ntype Props = {\n  touchResponse: 'touchStart' | 'touchHold';\n  content?: ComponentChildren;\n  borderColor?: Property.BorderColor;\n  focusedItemInfo: ItemInfo;\n  width: number;\n  focusedItemRef: Ref<HTMLDivElement>;\n};\n\n/**\n * Returns the datatip.\n * @param content The text string for the picto chart item.\n * @param focusedItemRef The ref for focused item node.\n * @param focusedItemInfo The ItemInfo for focused item node.\n * @returns\n */\nexport const usePictoChartDatatip = ({\n  touchResponse,\n  content,\n  borderColor,\n  width,\n  focusedItemRef,\n  focusedItemInfo\n}: Props) => {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n\n  const itemDim = focusedItemRef.current?.getBoundingClientRect();\n  const { datatipContent, datatipProps } = useDatatip({\n    content,\n    placement: 'top-start',\n    offset: calculateOffset(isRtl, width, focusedItemInfo.isCurrent ? itemDim : undefined),\n    borderColor,\n    anchor: focusedItemInfo?.isCurrent ? 'element' : 'pointer',\n    touchResponse\n  });\n  return { datatipContent: datatipContent, datatipProps: datatipProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { styles } from './themes/PictoChartStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { BundleType } from '../resources/nls/bundle';\nimport { getItemAriaProps } from './pictoChartUtils';\nimport { Ref } from 'preact/hooks';\nimport { PictoChartItemData } from './pictoChart.type';\n\nexport type PictoElementProps<K, D extends PictoChartItemData<K>> = {\n  item: D;\n  children: ComponentChildren;\n  row: number;\n  column: number;\n  totalCount: number;\n  class?: string;\n  activeId?: string;\n  isHighlighted?: boolean;\n  isSelected?: boolean;\n  hasSelection?: boolean;\n  itemIdx?: number;\n  countIdx?: number;\n  supportsSelection?: boolean;\n  supportsDrill?: boolean;\n  translations?: BundleType;\n  focusedItemRef?: Ref<HTMLDivElement>;\n};\n\nconst PictoChartElement = <K, D extends PictoChartItemData<K>>(props: PictoElementProps<K, D>) => {\n  const isInteractive = props.supportsSelection || props.supportsDrill;\n\n  const { dimmedItemStyle, interactiveItemStyle } = styles;\n\n  const itemClasses = classNames([\n    isInteractive && interactiveItemStyle,\n    !props.isHighlighted && dimmedItemStyle\n  ]);\n  const isFirstElement = props.countIdx === 0;\n  const itemAriaProps =\n    (isFirstElement &&\n      getItemAriaProps(\n        props.item.count || 1,\n        props.totalCount,\n        !!props.supportsSelection,\n        props.item.label,\n        props.translations,\n        props.isSelected,\n        props.hasSelection,\n        props.item.accessibleLabel,\n        props.activeId\n      )) ||\n    {};\n\n  return (\n    <div\n      ref={isFirstElement ? props.focusedItemRef : undefined}\n      id={props.activeId}\n      data-idx={props.itemIdx}\n      data-count-idx={props.countIdx}\n      style={{\n        gridRow: `${props.row + 1} / span ${props.item.rowSpan || 1}`,\n        gridColumn: `${props.column + 1} / span ${props.item.columnSpan || 1}`\n      }}\n      class={itemClasses}\n      {...itemAriaProps}>\n      {props.children}\n    </div>\n  );\n};\n\nexport { PictoChartElement };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { baseStyles } from './themes/PictoChartStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { generateElementCoords, getFlowingInfo } from './pictoChartLayoutUtils';\nimport { useSelection } from '../hooks/PRIVATE_useVisSelection';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { getItemInfo, getDatatipContent, getItemProps, getTotalCount } from './pictoChartUtils';\nimport { getPictoChartNavUtils } from './pictoChartNavUtils';\nimport { useEvents } from './useEvents';\nimport { usePictoChartDatatip } from './usePictoChartDatatip';\nimport { useItemFocus } from '../hooks/PRIVATE_useVisEvents';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\nimport { PictoChartProps, PictoChartItemData } from './pictoChart.type';\nimport { PictoChartElement } from './PictoChartElement';\nimport { useVisTouchResponse } from '#hooks/PRIVATE_useVisTouchResponse';\nimport { merge } from '#utils/UNSAFE_stringUtils';\n\ntype PictoChartWithDimensionsProps<K, D> = Omit<PictoChartProps<K, D>, 'width' | 'height'> & {\n  width: number;\n  height: number;\n  isFlowingWidth: boolean;\n  isFlowingHeight: boolean;\n};\n\nexport function PictoChartWithDimensions<\n  K extends string | number,\n  D extends PictoChartItemData<K> = PictoChartItemData<K>\n>({\n  width,\n  height,\n  columnWidth,\n  rowHeight,\n  items,\n  columnCount,\n  rowCount,\n  layout,\n  layoutOrigin = 'topStart',\n  selectionMode = 'none',\n  highlightedIds = [],\n  selectedIds = [],\n  drilling = 'off',\n  onItemDrill,\n  onItemHover,\n  isFlowingWidth,\n  isFlowingHeight,\n  onItemFocus,\n  ...props\n}: PictoChartWithDimensionsProps<K, D>) {\n  const hasData = items.length !== 0;\n  const totalCount = getTotalCount(items);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const supportsSelection = !!(selectionMode && selectionMode !== 'none');\n  const supportsDrill = onItemDrill != null;\n  const isReadOnly =\n    !supportsSelection && !supportsDrill && onItemHover === null && onItemFocus === null;\n  const testIdProps = useTestId(props.testId);\n  const idToDataMap = new Map(items.map((obj) => [obj.id, obj]));\n\n  const { getItem, getDetailFromInfo, getPrevItemInfo, getNextItemInfo } = getPictoChartNavUtils<\n    K,\n    D\n  >(items);\n\n  const { touchResponse, touchResponseStyle } = useVisTouchResponse({ type: 'touchStart' });\n\n  const { hoveredItemInfo, focusedItemInfo, activeId, eventsProps } = useEvents<K, D>(\n    touchResponse,\n    !isReadOnly && hasData,\n    selectionMode,\n    getDetailFromInfo,\n    getPrevItemInfo,\n    getNextItemInfo,\n    drilling,\n    onItemDrill,\n    onItemHover,\n    onItemFocus\n  );\n\n  const idExtracter = (event: Event) => {\n    // return focused item for keyboard event.\n    // eventsProps should have already updated the focused item\n    const info =\n      event.type === 'keyup' ? focusedItemInfo : getItemInfo(event.target as HTMLElement);\n    return getDetailFromInfo(info).id;\n  };\n\n  const { selectionContent, selectionProps } = useSelection<K, D>({\n    idExtracter,\n    isDrillEnabled: drilling != 'off',\n    selection: selectedIds,\n    selectionMode: selectionMode,\n    getDataById: (id) => idToDataMap.get(id),\n    onChange: props.onSelectionChange\n  });\n\n  const rectangleWidth = columnWidth && parseFloat(columnWidth);\n  const rectangleHeight = rowHeight && parseFloat(rowHeight);\n  const pictoStyleClasses = classNames([baseStyles]);\n  const { focusedItemRef } = useItemFocus(focusedItemInfo);\n  const { content, borderColor } = getDatatipContent(\n    items,\n    getItem,\n    totalCount,\n    focusedItemInfo,\n    hoveredItemInfo,\n    props.datatip,\n    translations\n  );\n  const { calcColCount, calcRowCount, calcColWidth, calcRowHeight, gridGap } = getFlowingInfo<K, D>(\n    items,\n    layout === 'vertical',\n    width,\n    height,\n    isFlowingWidth,\n    isFlowingHeight,\n    columnCount,\n    rowCount,\n    rectangleWidth,\n    rectangleHeight\n  );\n\n  const {\n    datatipContent,\n    datatipProps: { 'aria-describedby': datatipAriaDescribedby, ...datatipProps }\n  } = usePictoChartDatatip({\n    touchResponse,\n    content,\n    width,\n    borderColor,\n    focusedItemRef,\n    focusedItemInfo\n  });\n\n  if (!calcColCount)\n    // Nothing to render.\n    return null;\n\n  const elements = generateElementCoords(\n    items,\n    calcRowCount,\n    calcColCount,\n    layoutOrigin,\n    layout === 'vertical'\n  );\n\n  const mergedEventProps = mergeProps(eventsProps, datatipProps, selectionProps);\n  return (\n    <div\n      tabIndex={0}\n      aria-label={props['aria-label']}\n      aria-describedby={merge([props['aria-describedby'], datatipAriaDescribedby])}\n      aria-labelledby={props['aria-labelledby']}\n      aria-activedescendant={activeId}\n      role=\"application\"\n      style={{\n        width: isFlowingWidth ? 'max-content' : `${width}px`,\n        height: isFlowingHeight ? 'max-content' : `${height}px`,\n        gridTemplateRows: `repeat(${calcRowCount}, ${calcRowHeight}px)`,\n        gridTemplateColumns: `repeat(${calcColCount}, ${calcColWidth}px)`,\n        gap: `${gridGap}px`,\n        ...touchResponseStyle\n      }}\n      class={pictoStyleClasses}\n      {...testIdProps}\n      {...mergedEventProps}>\n      {elements.map((elt) => {\n        const isFocusedItem = focusedItemInfo.idx === elt.itemIdx;\n        const itemProps = getItemProps(\n          elt.item,\n          elt.itemIdx,\n          elt.countIdx,\n          isReadOnly,\n          hoveredItemInfo,\n          selectedIds,\n          focusedItemInfo,\n          highlightedIds,\n          activeId\n        );\n\n        const context = {\n          data: elt.item,\n          state: {\n            selected: itemProps.isSelected,\n            focused: itemProps.isFocused,\n            hovered: itemProps.isCurrent\n          }\n        };\n\n        return (\n          <PictoChartElement<K, D>\n            focusedItemRef={isFocusedItem ? focusedItemRef : undefined}\n            row={elt.row}\n            column={elt.col}\n            supportsSelection={supportsSelection}\n            supportsDrill={supportsDrill}\n            translations={translations}\n            totalCount={totalCount}\n            {...itemProps}>\n            {props.children(context)}\n          </PictoChartElement>\n        );\n      })}\n      {datatipContent}\n      {selectionContent}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { PictoChartItemData, PictoChartProps } from './pictoChart.type';\nimport { TrackResizeContainer } from '../PRIVATE_TrackResizeContainer';\nimport { PictoChartContext } from './PictoChartContext';\nimport { PictoChartWithDimensions } from './PictoChartWithDimensions';\n\n/**\n * A picto chart displays information using icons to visualize an absolute number or the relative sizes of the different parts of a population.\n */\nexport function PictoChart<\n  K extends string | number,\n  D extends PictoChartItemData<K> = PictoChartItemData<K>\n>({ width, height, ...props }: PictoChartProps<K, D>) {\n  //  TODO: investigate if we need to handle empty items for performance reasons.\n  const supportsSelection = !!(props.selectionMode && props.selectionMode !== 'none');\n\n  const isFlowingWidth = width === undefined;\n  const isFlowingHeight = height === undefined;\n\n  return (\n    <PictoChartContext.Provider value={{ supportsSelection }}>\n      <TrackResizeContainer\n        width={isFlowingWidth ? 'initial' : width}\n        height={isFlowingHeight ? 'initial' : height}>\n        {(width, height) => (\n          <PictoChartWithDimensions\n            width={width}\n            height={height}\n            isFlowingWidth={isFlowingWidth}\n            isFlowingHeight={isFlowingHeight}\n            {...props}\n          />\n        )}\n      </TrackResizeContainer>\n    </PictoChartContext.Provider>\n  );\n}\n"],"names":["createContext","useContext","DEFAULT_SIZE","generateAriaLabel","rgba","colorSchemeVars","rgb","_jsx","SvgSymbol","useState","useRef","useUser","getRandomId","useVisHover","useCallback","useVisDrill","cancelEvent","mergeProps","useDatatip","calculateOffset","styles","classNames","useTranslationBundle","useTestId","useVisTouchResponse","useSelection","baseStyles","useItemFocus","_jsxs","merge","TrackResizeContainer"],"mappings":"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"}