{"version":3,"file":"RadioSet-3ac30786.js","sources":["../../src/UNSAFE_RadioSet/RadioSet.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, ComponentProps, Ref, toChildArray } from 'preact';\nimport { forwardRef } from 'preact/compat';\n\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { FormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useFormFieldContextProps } from '../hooks/UNSAFE_useFormFieldContextProps';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { FocusableHandle } from '../hooks/UNSAFE_useFocusableTextField';\nimport { FlexboxProps } from '../utils/UNSAFE_interpolations/flexbox';\nimport { Size } from '../utils/UNSAFE_size';\nimport { ValueUpdateDetail } from '../utils/UNSAFE_valueUpdateDetail';\n\nimport { InlineUserAssistance, UserAssistanceDensityType } from '../UNSAFE_UserAssistance';\n\nimport { CheckboxRadioField } from '../PRIVATE_CheckboxRadioField';\nimport { RadioSetContext } from './RadioSetContext';\nimport { RadioItemContext } from '../UNSAFE_RadioItem/RadioItemContext';\nimport { LayoutColumnSpan } from '../utils/UNSAFE_styles/Layout';\nimport type { TestIdProps } from '#hooks/UNSAFE_useTestId';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype Props = TestIdProps & {\n  /**\n   * The ID of an element (or space separated IDs of multiple elements) that\n   * describes the input.\n   */\n  'aria-describedby'?: string;\n  /**\n   * Text to provide guidance to help the user understand what data to enter.\n   */\n  assistiveText?: InlineUserAssistanceProps['assistiveText'];\n  /**\n   * RadioItem\n   */\n  children: ComponentChildren;\n  /**\n   * Specifies how many columns to span in a FormLayout with direction === 'row'\n   */\n  columnSpan?: LayoutColumnSpan;\n  /**\n   * layout direction of the children elements\n   */\n  direction?: FlexboxProps['direction'];\n  /**\n   * Help source URL associated with the component.\n   */\n  helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n  /**\n   * Custom text to be rendered for the <code>helpSourceLink</code>.\n   */\n  helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n  /**\n   * Specifies whether the radio set requires a selection to be made.\n   */\n  isRequired?: boolean;\n  /**\n   * Specifies if the radio set is read-only.\n   */\n  isReadonly?: boolean;\n  /**\n   * Specifies if the radio set is disabled.\n   */\n  isDisabled?: boolean;\n  /**\n   * Label text for the group of radio items.\n   *\n   */\n  label: string;\n  /**\n   * Specifies where the label is positioned relative to the field.\n   */\n  labelEdge?: 'none' | 'top' | 'start' | 'inside';\n  /**\n   * Specifies the width of the label when <code>labelEdge</code> is <code>\"start\"</code>.\n   */\n  labelStartWidth?: Size;\n  /**\n   * Messages to show on screen that are associated with the component.\n   */\n  messages?: InlineUserAssistanceProps['messages'];\n  /**\n   * Callback invoked each time the user changes selected option.\n   */\n  onCommit: (detail: ValueUpdateDetail<string | number | undefined>) => void;\n  /**\n   * Specifies the density of the user assistance presentation.  It can be set to:\n   * <ul>\n   * <li><code>'reflow'</code>: Show inline.  Layout will reflow when text is displayed.</li>\n   * <li><code>'efficient'</code>: Show inline and reserve space to prevent layout reflow when user\n   * assistance text is displayed.</li>\n   * <li><code>'compact'</code>: Show inline and reserve space to prevent layout reflow when user\n   * assistance text is displayed.</li>\n   * </ul>\n   */\n  userAssistanceDensity?: UserAssistanceDensityType;\n  /**\n   * Value of the radio option.\n   */\n  value?: string | number;\n};\n/**\n * A radio set allows the user to select one option from a set of mutually exclusive options.\n */\nexport const RadioSet = forwardRef(\n  (\n    {\n      'aria-describedby': ariaDescribedBy,\n      assistiveText,\n      columnSpan,\n      direction = 'column',\n      helpSourceLink,\n      helpSourceText,\n      isDisabled: propIsDisabled,\n      isReadonly: propIsReadonly,\n      isRequired = false,\n      label,\n      labelEdge: propLabelEdge,\n      labelStartWidth: propLabelStartWidth,\n      messages,\n      onCommit,\n      testId,\n      userAssistanceDensity: propUserAssistanceDensity,\n      value,\n\n      children\n    }: Props,\n    ref?: Ref<FocusableHandle>\n  ) => {\n    const hasValue = !!value;\n    const {\n      isDisabled: isFormDisabled,\n      // TODO: unused variables, are they needed?\n      // isFormLayout,\n      isReadonly: isFormReadonly,\n      labelEdge: formLabelEdge,\n      labelStartWidth: formLabelStartWidth,\n      userAssistanceDensity: formUserAssistanceDensity\n    } = useFormContext();\n    // default to FormContext values if component properties are not specified\n    const isDisabled = propIsDisabled ?? isFormDisabled;\n    const isReadonly = propIsReadonly ?? isFormReadonly;\n    const labelEdge = propLabelEdge ?? formLabelEdge;\n    const labelStartWidth = propLabelStartWidth ?? formLabelStartWidth;\n    const userAssistanceDensity = propUserAssistanceDensity ?? formUserAssistanceDensity;\n\n    const formFieldContext = useFormFieldContextProps({\n      hasValue,\n      isDisabled,\n      isReadonly\n    });\n\n    const baseId = useId();\n\n    return (\n      <FormFieldContext.Provider value={formFieldContext}>\n        <CheckboxRadioField\n          aria-describedby={ariaDescribedBy}\n          assistiveText={assistiveText}\n          baseId={baseId}\n          columnSpan={columnSpan}\n          direction={direction}\n          helpSourceLink={helpSourceLink}\n          helpSourceText={helpSourceText}\n          isDisabled={isDisabled}\n          isReadonly={isReadonly}\n          isRequired={isRequired}\n          label={label}\n          labelEdge={labelEdge}\n          labelStartWidth={labelStartWidth}\n          parentComponentVariant=\"radioSet\"\n          messages={messages}\n          userAssistanceDensity={userAssistanceDensity}\n          hasValue={hasValue}\n          ref={ref}\n          role=\"radiogroup\"\n          testId={testId}>\n          <RadioSetContext.Provider\n            value={{\n              name: baseId,\n              value,\n              onCommit\n            }}>\n            {toChildArray(children).map((child, index) => (\n              <RadioItemContext.Provider value={{ index }}>{child}</RadioItemContext.Provider>\n            ))}\n          </RadioSetContext.Provider>\n        </CheckboxRadioField>\n      </FormFieldContext.Provider>\n    );\n  }\n);\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;;;AA6GA;;AAEG;AACI,MAAM,QAAQ,GAAG,UAAU,CAChC,CACE,EACE,kBAAkB,EAAE,eAAe,EACnC,aAAa,EACb,UAAU,EACV,SAAS,GAAG,QAAQ,EACpB,cAAc,EACd,cAAc,EACd,UAAU,EAAE,cAAc,EAC1B,UAAU,EAAE,cAAc,EAC1B,UAAU,GAAG,KAAK,EAClB,KAAK,EACL,SAAS,EAAE,aAAa,EACxB,eAAe,EAAE,mBAAmB,EACpC,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,qBAAqB,EAAE,yBAAyB,EAChD,KAAK,EAEL,QAAQ,EACF,EACR,GAA0B,KACxB;AACF,IAAA,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;IACzB,MAAM,EACJ,UAAU,EAAE,cAAc;;;AAG1B,IAAA,UAAU,EAAE,cAAc,EAC1B,SAAS,EAAE,aAAa,EACxB,eAAe,EAAE,mBAAmB,EACpC,qBAAqB,EAAE,yBAAyB,EACjD,GAAG,cAAc,EAAE,CAAC;;AAErB,IAAA,MAAM,UAAU,GAAG,cAAc,IAAI,cAAc,CAAC;AACpD,IAAA,MAAM,UAAU,GAAG,cAAc,IAAI,cAAc,CAAC;AACpD,IAAA,MAAM,SAAS,GAAG,aAAa,IAAI,aAAa,CAAC;AACjD,IAAA,MAAM,eAAe,GAAG,mBAAmB,IAAI,mBAAmB,CAAC;AACnE,IAAA,MAAM,qBAAqB,GAAG,yBAAyB,IAAI,yBAAyB,CAAC;IAErF,MAAM,gBAAgB,GAAG,wBAAwB,CAAC;QAChD,QAAQ;QACR,UAAU;QACV,UAAU;AACX,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,MAAM,GAAG,KAAK,EAAE,CAAC;IAEvB,QACEA,IAAC,gBAAgB,CAAC,QAAQ,EAAC,EAAA,KAAK,EAAE,gBAAgB,EAAA,QAAA,EAChDA,IAAC,kBAAkB,EAAA,EAAA,kBAAA,EACC,eAAe,EACjC,aAAa,EAAE,aAAa,EAC5B,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,eAAe,EAChC,sBAAsB,EAAC,UAAU,EACjC,QAAQ,EAAE,QAAQ,EAClB,qBAAqB,EAAE,qBAAqB,EAC5C,QAAQ,EAAE,QAAQ,EAClB,GAAG,EAAE,GAAG,EACR,IAAI,EAAC,YAAY,EACjB,MAAM,EAAE,MAAM,EACd,QAAA,EAAAA,GAAA,CAAC,eAAe,CAAC,QAAQ,EACvB,EAAA,KAAK,EAAE;AACL,oBAAA,IAAI,EAAE,MAAM;oBACZ,KAAK;oBACL,QAAQ;AACT,iBAAA,EAAA,QAAA,EACA,YAAY,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,MACvCA,GAAC,CAAA,gBAAgB,CAAC,QAAQ,EAAC,EAAA,KAAK,EAAE,EAAE,KAAK,EAAE,EAAA,QAAA,EAAG,KAAK,EAAA,CAA6B,CACjF,CAAC,EAAA,CACuB,EACR,CAAA,EAAA,CACK,EAC5B;AACJ,CAAC;;;;"}