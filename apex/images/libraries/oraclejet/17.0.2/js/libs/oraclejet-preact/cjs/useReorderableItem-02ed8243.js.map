{"version":3,"file":"useReorderableItem-02ed8243.js","sources":["../../src/hooks/PRIVATE_useReorderable/useReorderable.ts","../../src/hooks/PRIVATE_useReorderable/ReorderableContext.ts","../../src/hooks/PRIVATE_useReorderable/useReorderableContext.ts","../../src/hooks/PRIVATE_useReorderable/useReorderableItem.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useRef, useCallback, useState } from 'preact/hooks';\nimport { useId } from '#hooks/UNSAFE_useId';\nimport { useUser } from '#hooks/UNSAFE_useUser';\nimport { useTranslationBundle } from '#/hooks/UNSAFE_useTranslationBundle';\nimport { getClientHints } from '#utils/PRIVATE_clientHints';\nimport { getItemKeysArray } from '#utils/PRIVATE_collectionUtils';\nimport { BundleType } from '#resources/nls/bundle';\nimport { ReorderProps } from '#UNSAFE_Collection/Reorderable.types';\n\ntype useReorderableProps<K> = ReorderProps<K> & {\n  rootRef: RefObject<HTMLDivElement>;\n  itemSelector: string;\n  isDisabled?: boolean;\n  columns?: number;\n};\n\n/**\n * Implements keyboard reorder behavior for list-like components, e.g. TabBar, ListView, CardView\n */\nexport function useReorderable<K extends string | number>(options: useReorderableProps<K>) {\n  const { onReorder, rootRef, itemSelector, isDisabled, columns } = options;\n\n  const currentItemKey = useRef<K | undefined>();\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const reorderInstructionsId = 'reorderable_' + useId();\n  const { deviceType, platform } = getClientHints();\n  const keyPressed =\n    platform === 'windows' ? translations.accControlKey() : translations.accCommandKey();\n  const reorderInstructions =\n    deviceType === 'phone' || deviceType === 'tablet'\n      ? ''\n      : translations.accReorderInstructions({\n          keyPressed: keyPressed\n        });\n  const [reorderStatus, setReorderStatus] = useState<string | undefined>('');\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      const keyHandlers = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n      if (\n        (e.metaKey || e.ctrlKey) &&\n        e.shiftKey &&\n        keyHandlers.includes(e.key) &&\n        onReorder &&\n        rootRef.current\n      ) {\n        if (e.metaKey) {\n          e.preventDefault();\n        }\n        const itemKeysArray = getItemKeysArray(rootRef.current, itemSelector);\n        const newArray = [...itemKeysArray];\n        const lastIndex = newArray.length - 1;\n        const currentItemIndex = newArray.indexOf(currentItemKey.current);\n        // get reference item index and reordered keys\n        const referenceItemIndex = getReferenceItemIndex(\n          e.key,\n          isRtl,\n          currentItemIndex,\n          lastIndex,\n          columns\n        );\n        if (referenceItemIndex !== undefined && currentItemIndex !== referenceItemIndex) {\n          const referenceKey = newArray[referenceItemIndex]?.toString();\n          newArray.splice(currentItemIndex, 1);\n          newArray.splice(referenceItemIndex as number, 0, currentItemKey.current);\n          onReorder?.({\n            reorderedKeys: newArray as K[],\n            itemKeys: [currentItemKey.current as K],\n            // If the dragged items were dropped at the very beginning, the referenceKey will be null.\n            referenceKey: referenceItemIndex === 0 ? null : (newArray[referenceItemIndex - 1] as K)\n          });\n          // set acc status\n          const isPrev = e.key === 'ArrowLeft' || e.key === 'ArrowUp' ? true : false;\n          const position = isPrev\n            ? translations.accPositionBefore()\n            : translations.accPositionAfter();\n          const itemKeyString = currentItemKey?.current?.toString();\n          if (referenceKey && position && itemKeyString) {\n            setReorderStatus(\n              translations.accAnnounceMovedKey({\n                itemKey: itemKeyString,\n                position: position,\n                referenceKey: referenceKey\n              })\n            );\n          }\n        }\n      }\n    },\n    [currentItemKey, onReorder, columns, isRtl, itemSelector, rootRef, translations]\n  );\n\n  const eventProps = isDisabled ? {} : { onKeyDown };\n\n  return {\n    reorderProps: eventProps,\n    reorderContext: {\n      currentItemKey\n    },\n    reorderInstructionsId,\n    reorderInstructions,\n    reorderStatus\n  } as const;\n}\n\n/**\n * A helper function to get referenceItemIndex during keyboard reordering\n *\n * @param eventKey the arrow event keys\n * @param isRtl whether RTL is enabled\n * @param currentItemIndex the index of current item\n * @param lastIndex the last index\n * @param columns optional param to specify the number of columns, for keyboard reordering by arrow up/down keys.\n */\nconst getReferenceItemIndex = (\n  eventKey: string,\n  isRtl: boolean,\n  currentItemIndex: number,\n  lastIndex: number,\n  columns?: number\n) => {\n  const leftDropIndex = currentItemIndex > 0 ? currentItemIndex - 1 : 0;\n  const rightDropIndex = currentItemIndex < lastIndex ? currentItemIndex + 1 : lastIndex;\n  switch (eventKey) {\n    case 'ArrowLeft':\n      return isRtl ? rightDropIndex : leftDropIndex;\n    case 'ArrowRight':\n      return isRtl ? leftDropIndex : rightDropIndex;\n    case 'ArrowUp':\n      if (columns) {\n        // if the current item is at the top row, arrow up should not move anywhere\n        return currentItemIndex < columns ? currentItemIndex : currentItemIndex - columns;\n      }\n    case 'ArrowDown':\n      if (columns) {\n        // if the current item is at the bottom row, arrow down should not move anywhere\n        return currentItemIndex > lastIndex - columns\n          ? currentItemIndex\n          : currentItemIndex + columns;\n      }\n    default:\n      return undefined;\n  }\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { MutableRef } from 'preact/hooks';\n\nexport type ReorderableContextProps<K extends string | number> = {\n  currentItemKey: MutableRef<K | undefined>;\n};\n/**\n * Context used to pass reordering information.\n * We want to communicate information down to ReorderableItem.\n */\ntype K = string | number;\nconst ReorderableContext = createContext<ReorderableContextProps<K>>(null!);\n\nexport { ReorderableContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { ReorderableContext } from './ReorderableContext';\n\n/**\n * Utility hook for consuming the ReorderableContext\n *\n * @returns The value of ReorderableContext provider\n */\nfunction useReorderableContext() {\n  return useContext(ReorderableContext);\n}\n\nexport { useReorderableContext };\n","import { RefObject } from 'preact';\nimport { useState, useRef, useCallback, useEffect } from 'preact/hooks';\nimport { classNames } from '#utils/UNSAFE_classNames';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\nimport { createDragImage } from '#utils/PRIVATE_dndUtils';\nimport { getKey, getItemKeysArray } from '#utils/PRIVATE_collectionUtils';\nimport { useUser } from '#hooks/UNSAFE_useUser';\nimport { useReorderableContext } from './useReorderableContext';\nimport { ReorderableItemProps } from '#UNSAFE_Collection/Reorderable.types';\nimport { styles } from './themes/ReorderableItemStyles.css';\n\nexport type useReorderableOptions<K extends string | number> = Omit<\n  ReorderableItemProps<K>,\n  'children'\n> & {\n  draggable: boolean;\n  isDisabled: boolean;\n  ref: RefObject<HTMLDivElement>;\n  currentKey: K | undefined;\n  getItem: () => Element | null | undefined; // a function to get the reorderable item\n  setTransferData: (event: DragEvent) => void; // a function to set the transfer data and type\n  itemStyles: {\n    // component specific style for two overlay divs, e.g. component has different gap sizes\n    itemOverlayFront: string;\n    itemOverlayRear: string;\n    itemDragger?: string; // component specific style for drag image\n  };\n  itemSelector: string;\n  isVertical?: boolean; // used when the component is vertical and has one column, e.g. ListView\n};\n\n/**\n * Implements mouse reorder behavior for list-like components, e.g. TabBar, ListView, CardView\n */\nexport function useReorderableItem<K extends string | number>(options: useReorderableOptions<K>) {\n  const {\n    isDisabled,\n    draggable,\n    dragKey,\n    setDragKey,\n    onReorder,\n    ref,\n    rootRef,\n    currentKey,\n    itemStyles,\n    getItem,\n    setTransferData,\n    itemSelector,\n    isVertical\n  } = options;\n\n  const item = getItem();\n  const itemKey = item != null ? (getKey(item as HTMLElement) as K) : undefined;\n\n  const [position, setPosition] = useState<'before' | 'after' | undefined>();\n  const pendingPositionRef = useRef<typeof position>();\n  const dragImgRef = useRef<HTMLElement | undefined>(undefined);\n\n  const itemDraggerClasses = classNames([styles.itemDragger, itemStyles.itemDragger]);\n\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n\n  const handleDragStart = useCallback(\n    (e: DragEvent) => {\n      const item = getItem();\n      const currentDragKey = item != null ? (getKey(item as HTMLElement) as K) : undefined;\n      //create drag image clone of the item and show it\n      if (ref?.current && setDragKey) {\n        dragImgRef.current = createDragImage(ref.current, itemDraggerClasses);\n        //if there is drag icon, set the drag image at the drag icon position\n        const dragIcon = ref.current.querySelector('[draggable=true]') as HTMLElement;\n        if (dragIcon != null) {\n          e?.dataTransfer?.setDragImage(\n            dragImgRef.current,\n            dragIcon.offsetLeft + dragIcon.offsetWidth / 2,\n            dragIcon.offsetTop + dragIcon.offsetHeight / 2\n          );\n        } else {\n          e?.dataTransfer?.setDragImage(dragImgRef.current, 0, 0);\n        }\n        setTransferData(e);\n        setDragKey(currentDragKey as K);\n      }\n    },\n    [getItem, setTransferData, itemDraggerClasses, ref, setDragKey]\n  );\n\n  const handleDragOver = useCallback(\n    (e: DragEvent) => {\n      if (dragKey) {\n        e.preventDefault();\n      }\n    },\n    [dragKey]\n  );\n\n  //Once drag is over, reset styling of dragged item to it's original styling\n  const handleDragEnd = useCallback(() => {\n    setDragKey?.(undefined);\n    document.body.removeChild(dragImgRef.current as HTMLElement);\n  }, [setDragKey]);\n\n  // detect drop target position on the overlay divs and render drop target\n  const handleDragEnterBeforeZone = () => {\n    setPosition('before');\n    pendingPositionRef.current = 'before';\n  };\n\n  const handleDragLeaveBeforeZone = () => {\n    if (pendingPositionRef.current === 'before') {\n      setPosition(undefined);\n    }\n  };\n\n  const handleDragEnterAfterZone = () => {\n    setPosition('after');\n    pendingPositionRef.current = 'after';\n  };\n\n  const handleDragLeaveAfterZone = () => {\n    if (pendingPositionRef.current === 'after') {\n      setPosition(undefined);\n    }\n  };\n\n  const handleDrop = useCallback(() => {\n    if (rootRef?.current) {\n      const item = getItem();\n      const currentDropKey = item != null ? (getKey(item as HTMLElement) as K) : undefined;\n      const reference = currentDropKey;\n      const itemKeys = getItemKeysArray(rootRef.current, itemSelector);\n      let insertPos;\n      const newArray = [...itemKeys];\n      const dragIndex = newArray.indexOf(dragKey);\n      if (reference != null) {\n        const dropIndex = newArray.indexOf(reference);\n        if (dragIndex != null && dropIndex != null && dragIndex != dropIndex) {\n          if (!isRtl) {\n            if (dragIndex < dropIndex) {\n              insertPos = position === 'before' ? dropIndex - 1 : dropIndex;\n            } else {\n              insertPos = position === 'before' ? dropIndex : dropIndex + 1;\n            }\n          } else {\n            if (dragIndex < dropIndex) {\n              insertPos = position === 'before' ? dropIndex : dropIndex - 1;\n            } else {\n              insertPos = position === 'before' ? dropIndex + 1 : dropIndex;\n            }\n          }\n        }\n      }\n      if (insertPos !== undefined && dragIndex !== insertPos) {\n        const sourceData = itemKeys[dragIndex];\n        newArray.splice(dragIndex, 1);\n        newArray.splice(insertPos as number, 0, sourceData);\n        onReorder?.({\n          reorderedKeys: newArray as K[],\n          itemKeys: [dragKey as K],\n          // If the dragged items were dropped at the very beginning, the referenceKey will be null.\n          referenceKey: insertPos === 0 ? null : (newArray[insertPos - 1] as K)\n        });\n        setPosition(undefined);\n        setDragKey(undefined);\n      }\n    }\n  }, [dragKey, position, getItem, isRtl, itemSelector, onReorder, rootRef, setDragKey]);\n\n  const { currentItemKey } = useReorderableContext();\n\n  useEffect(() => {\n    if (currentKey === itemKey) {\n      currentItemKey.current = currentKey;\n    }\n  }, [currentKey, itemKey, currentItemKey]);\n\n  if (isDisabled) {\n    return {};\n  }\n\n  //change dragged item visual to appear disable\n  const isDragged = itemKey != null && itemKey === dragKey;\n\n  const dndItemClasses = classNames([styles.itemDnd, isDragged && styles.itemDragged]);\n\n  const itemOverlayClassesBefore = classNames([\n    itemStyles.itemOverlayFront,\n    isVertical ? styles.itemOverlayVertical : styles.itemOverlay,\n    position === 'before' && styles.itemOverlayBefore,\n    position === 'before' && isRtl && styles.itemOverlayBeforeRtl\n  ]);\n  const itemOverlayClassesAfter = classNames([\n    itemStyles.itemOverlayFront,\n    itemStyles.itemOverlayRear,\n    isVertical ? styles.itemOverlayVertical : styles.itemOverlay,\n    position === 'after' && styles.itemOverlayAfter,\n    position === 'after' && isRtl && styles.itemOverlayAfterRtl\n  ]);\n\n  return {\n    rootProps: mergeProps({\n      ref: ref,\n      draggable: draggable,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      isDisabled: isDisabled,\n      class: dndItemClasses\n    }),\n    isDragged: isDragged,\n    overlayZoneBeforeProps: mergeProps({\n      onDragEnter: handleDragEnterBeforeZone,\n      onDragLeave: handleDragLeaveBeforeZone,\n      class: itemOverlayClassesBefore\n    }),\n    overlayZoneAfterProps: mergeProps({\n      onDragEnter: handleDragEnterAfterZone,\n      onDragLeave: handleDragLeaveAfterZone,\n      class: itemOverlayClassesAfter\n    })\n  } as const;\n}\n"],"names":["useRef","useUser","useTranslationBundle","useId","getClientHints","useState","useCallback","getItemKeysArray","createContext","useContext","getKey","classNames","styles","createDragImage","useEffect","mergeProps"],"mappings":"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"}