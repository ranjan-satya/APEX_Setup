{"version":3,"file":"IconSwitchButton-61cabbfe.js","sources":["../../src/PRIVATE_IconSwitchButton/IconSwitchButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChild, Fragment } from 'preact';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { useRef, useImperativeHandle } from 'preact/hooks';\n\nimport { BaseButton } from '#UNSAFE_BaseButton';\nimport { useToggleAction, ToggleDetail } from '#hooks/UNSAFE_useToggleAction';\nimport { useTooltip } from '#hooks/UNSAFE_useTooltip';\nimport { TestIdProps } from '#hooks/UNSAFE_useTestId';\nimport type { DimensionProps } from '#utils/UNSAFE_interpolations/dimensions';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\nimport { toggleStyling } from '#utils/UNSAFE_buttonUtils';\nimport { useId } from '#hooks/UNSAFE_useId';\nimport { ToggleButtonLabel } from '#UNSAFE_ToggleButtonLabel';\nimport type { ToggleButtonLabelProps } from '#UNSAFE_ToggleButtonLabel/ToggleButtonLabel';\n\ntype WidthInterpolationProps = Pick<DimensionProps, 'width'>;\n\nexport type IconSwitchButtonProps = WidthInterpolationProps &\n  TestIdProps & {\n    /**\n     * icon - the icon for the button\n     */\n    children?: ComponentChild;\n\n    /**\n     * Specifies that the button element should be disabled.\n     */\n    isDisabled?: boolean;\n\n    /**\n     * The ID of an element (or space separated IDs of multiple elements) that\n     * describes the button.\n     */\n    'aria-describedby'?: string;\n\n    /**\n     * Specifies if the toggle button is selected\n     */\n    isSelected?: boolean;\n\n    /**\n     * Property that triggers a callback immediately when toggle happens and value of isSelected property should be updated\n     */\n    onToggle?: (details: ToggleDetail) => void;\n\n    /**\n     * The size indicates how large the button is rendered: \"xs\", \"sm\", \"md\" (default), \"lg\".\n     */\n    size?: 'xs' | 'sm' | 'md' | 'lg';\n  };\n\n/**\n * Note that either an accessibleLabel or tooltip must be specified.\n */\ntype VariationAccessibleLabelProps =\n  | {\n      /**\n       * accessibleLabel - the aria label\n       */\n      accessibleLabel: string;\n\n      /**\n       * tooltip - overrides the accessibleLabel for the tooltip\n       */\n      tooltip?: string;\n    }\n  | {\n      accessibleLabel?: string;\n\n      tooltip: string;\n    };\n\n/**\n * A IconSwitchButton is an icon button that allows users to switch\n * between states when pressed.  It differs from a toggle button in not\n * providing any visual indication of the state; instead, switch the\n * icon to provide the state indication.\n */\nexport const IconSwitchButton = forwardRef(\n  (\n    {\n      children,\n      tooltip,\n      size = 'md',\n      isDisabled = false,\n      accessibleLabel,\n      isSelected = false,\n      onToggle,\n      testId,\n      width,\n      'aria-describedby': ariaDescribedBy\n    }: IconSwitchButtonProps & VariationAccessibleLabelProps & TestIdProps,\n    ref?: ForwardedRef<HTMLButtonElement>\n  ) => {\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    useImperativeHandle(ref!, () => buttonRef.current!, [buttonRef]);\n\n    const { triggerProps } = useToggleAction({\n      isDisabled: isDisabled,\n      onToggle: onToggle\n    });\n\n    const { tooltipContent, tooltipProps } = useTooltip({\n      text: tooltip ?? accessibleLabel,\n      isDisabled: isDisabled\n    });\n\n    const styling = toggleStyling(\n      'auto',\n      isSelected,\n      true,\n      false,\n      false,\n      undefined,\n      undefined,\n      true\n    );\n\n    const ariaProps = { 'aria-describedby': ariaDescribedBy };\n\n    return (\n      <Fragment>\n        <BaseButton\n          {...mergeProps(tooltipProps, triggerProps, ariaProps)}\n          elementDetails={{ type: 'button', isSwitch: true }}\n          aria-checked={isSelected}\n          variant=\"ghost\"\n          size={size}\n          isDisabled={isDisabled}\n          styling={styling}\n          width={width}\n          ref={buttonRef}\n          aria-label={accessibleLabel ?? tooltip}\n          testId={testId}>\n          <ToggleButtonLabel\n            isDisabled={isDisabled}\n            label={accessibleLabel ?? tooltip}\n            isToggle={true}\n            inputName={useId()}\n            inputType={'switch'}\n            onAction={() => onToggle?.({ value: isSelected })}\n            isSelected={isSelected}\n            display={'icons'}\n            startIcon={children}\n            size={size as ToggleButtonLabelProps['size']}\n          />\n        </BaseButton>\n        {tooltipContent}\n      </Fragment>\n    );\n  }\n);\n\nIconSwitchButton.displayName = 'IconSwitchButton';\n"],"names":["_jsxs","_jsx"],"mappings":";;;;;;;;;;;;;;AAgFA;;;;;AAKG;AACU,MAAA,gBAAgB,GAAG,UAAU,CACxC,CACE,EACE,QAAQ,EACR,OAAO,EACP,IAAI,GAAG,IAAI,EACX,UAAU,GAAG,KAAK,EAClB,eAAe,EACf,UAAU,GAAG,KAAK,EAClB,QAAQ,EACR,MAAM,EACN,KAAK,EACL,kBAAkB,EAAE,eAAe,EACiC,EACtE,GAAqC,KACnC;AACF,IAAA,MAAM,SAAS,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;AAClD,IAAA,mBAAmB,CAAC,GAAI,EAAE,MAAM,SAAS,CAAC,OAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAEjE,IAAA,MAAM,EAAE,YAAY,EAAE,GAAG,eAAe,CAAC;AACvC,QAAA,UAAU,EAAE,UAAU;AACtB,QAAA,QAAQ,EAAE,QAAQ;AACnB,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC;QAClD,IAAI,EAAE,OAAO,IAAI,eAAe;AAChC,QAAA,UAAU,EAAE,UAAU;AACvB,KAAA,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG,aAAa,CAC3B,MAAM,EACN,UAAU,EACV,IAAI,EACJ,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,IAAI,CACL,CAAC;AAEF,IAAA,MAAM,SAAS,GAAG,EAAE,kBAAkB,EAAE,eAAe,EAAE,CAAC;AAE1D,IAAA,QACEA,IAAA,CAAC,QAAQ,EAAA,EAAA,QAAA,EAAA,CACPC,GAAC,CAAA,UAAU,EACL,EAAA,GAAA,UAAU,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,CAAC,EACrD,cAAc,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAA,cAAA,EACpC,UAAU,EACxB,OAAO,EAAC,OAAO,EACf,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,SAAS,EAAA,YAAA,EACF,eAAe,IAAI,OAAO,EACtC,MAAM,EAAE,MAAM,EAAA,QAAA,EACdA,GAAC,CAAA,iBAAiB,EAChB,EAAA,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,eAAe,IAAI,OAAO,EACjC,QAAQ,EAAE,IAAI,EACd,SAAS,EAAE,KAAK,EAAE,EAClB,SAAS,EAAE,QAAQ,EACnB,QAAQ,EAAE,MAAM,QAAQ,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EACjD,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,QAAQ,EACnB,IAAI,EAAE,IAAsC,EAC5C,CAAA,EAAA,CACS,EACZ,cAAc,CACN,EAAA,CAAA,EACX;AACJ,CAAC,EACD;AAEF,gBAAgB,CAAC,WAAW,GAAG,kBAAkB;;;;"}