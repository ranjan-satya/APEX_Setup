{"version":3,"file":"ListItemLayout-dba9e24b.js","sources":["../../src/UNSAFE_ListItemLayout/ListItemLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, JSX } from 'preact';\nimport { Grid } from '../UNSAFE_Grid';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { styles } from './themes/ListItemLayoutStyles.css';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: ComponentChildren;\n  /**\n   * The centermost element that should display more important data.\n   */\n  primary?: ComponentChildren;\n  /**\n   * Render Selector component in the leftmost column of the grid.\n   */\n  selector?: ComponentChildren;\n  /**\n   * Visual element to the left of the primary section.\n   * Supports image, avatar, badge, initials, or icon.\n   */\n  leading?: ComponentChildren;\n  /**\n   * A section that is rendered above the primary line.\n   */\n  overline?: ComponentChildren;\n  /**\n   * A section below the primary line.\n   */\n  secondary?: ComponentChildren;\n  /**\n   * Another section below secondary.\n   */\n  tertiary?: ComponentChildren;\n  /**\n   * Provides information about other data.\n   * Some examples of basic metadata are author, date created, date modified, file size, abbreviations, etc.\n   */\n  metadata?: ComponentChildren;\n  /**\n   * Visual element to the right of the primary section and metadata.\n   * Example components are image, avatar, badge, initials, or icon.\n   */\n  trailing?: ComponentChildren;\n  /**\n   * The action prop displays either one primary action or one or more secondary actions.\n   * A common example is using Toolbar.\n   */\n  action?: ComponentChildren;\n  /**\n   * Additional section separated with a space between itself and tertiary.\n   */\n  quaternary?: ComponentChildren;\n  /**\n   * Navigation should normally be used for linking away from the layout.\n   */\n  navigation?: ComponentChildren;\n} & IntrinsicProps;\n\n// TODO: revisit idea of negative margin when selector has a proper API for handling spacing\n// Jira: JET-54543\n/**\n * A ListItemLayout component represents a layout used for list view item elements.\n */\nexport function ListItemLayout({\n  children,\n  selector,\n  leading,\n  primary,\n  secondary,\n  tertiary,\n  overline,\n  metadata,\n  trailing,\n  action,\n  quaternary,\n  navigation\n}: Props) {\n  // generate grid skeleton, adding cells based on which props are defined\n  const { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow } = getColumnsTemplate(\n    selector,\n    leading,\n    metadata,\n    trailing,\n    action,\n    quaternary,\n    navigation\n  );\n\n  // if ListItemLayout component has a child (ListItemTextLayout) then render that instead of individual props\n  const textArea = children ? (\n    <div className={styles.childrenStyles}>{children}</div>\n  ) : (\n    <div className={styles.flexColumnStyles}>\n      <div>{overline}</div>\n      <div>{primary}</div>\n      <div>{secondary}</div>\n      <div>{tertiary}</div>\n    </div>\n  );\n\n  // a second row is needed when quaternary or navigation are defined\n  const secondRow = hasSecondRow\n    ? [\n        firstCell && <span> </span>,\n        secondCell && <span> </span>,\n        <div className={styles.rowAlignStyles}>{quaternary}</div>,\n        lastCell && <div className={styles.endJustifyStyles}>{navigation}</div>\n      ]\n    : null;\n\n  return (\n    <Grid gap=\"4x\" gridTemplateColumns={columnsTemplate}>\n      {firstCell}\n      {secondCell}\n      <div className={styles.centerVerticalStyles}>{textArea}</div>\n      {lastCell}\n      {secondRow}\n    </Grid>\n  );\n}\n\nfunction getColumnsTemplate(\n  selector: ComponentChildren,\n  leading: ComponentChildren,\n  metadata: ComponentChildren,\n  trailing: ComponentChildren,\n  action: ComponentChildren,\n  quaternary: ComponentChildren,\n  navigation: ComponentChildren\n) {\n  const columnsTemplateBuilder = [];\n\n  let firstCell = null;\n  if (selector) {\n    columnsTemplateBuilder.push('auto');\n    firstCell = <div className={styles.selectorStyles}>{selector}</div>;\n  }\n\n  let secondCell = null;\n  if (leading) {\n    columnsTemplateBuilder.push('auto');\n    secondCell = <div className={styles.centerVerticalStyles}>{leading}</div>;\n  }\n\n  columnsTemplateBuilder.push('1fr'); // Text area always gets 1 full fraction of allotted space\n\n  let lastCell = null;\n  if (metadata || trailing || action || navigation) {\n    columnsTemplateBuilder.push('auto');\n    lastCell = (\n      <div className={styles.flexRowStyles}>\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            metadata ? styles.leftPaddingStyles : ''\n          ])}>\n          {metadata}\n        </div>\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            trailing ? styles.leftPaddingStyles : ''\n          ])}>\n          {trailing}\n        </div>\n        <div\n          className={classNames([styles.centerVerticalStyles, action ? styles.actionStyles : ''])}>\n          {action}\n        </div>\n      </div>\n    );\n  }\n\n  const columnsTemplate = columnsTemplateBuilder.join(' ');\n  const hasSecondRow = quaternary || navigation ? true : false;\n\n  return { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow };\n}\n"],"names":["children","selector","leading","primary","secondary","tertiary","overline","metadata","trailing","action","quaternary","navigation","columnsTemplate","firstCell","secondCell","lastCell","hasSecondRow","columnsTemplateBuilder","push","_jsx","className","styles","selectorStyles","centerVerticalStyles","_jsxs","flexRowStyles","classNames","leftPaddingStyles","actionStyles","join","getColumnsTemplate","textArea","childrenStyles","jsxs","flexColumnStyles","jsx","secondRow","rowAlignStyles","endJustifyStyles","Grid","gap","gridTemplateColumns"],"mappings":"+LAsEM,UAAyBA,SAC7BA,EAAQC,SACRA,EAAQC,QACRA,EAAOC,QACPA,EAAOC,UACPA,EAASC,SACTA,EAAQC,SACRA,EAAQC,SACRA,EAAQC,SACRA,EAAQC,OACRA,EAAMC,WACNA,EAAUC,WACVA,IAGA,MAAMC,gBAAEA,EAAeC,UAAEA,EAASC,WAAEA,EAAUC,SAAEA,EAAQC,aAAEA,GA2C5D,SACEf,EACAC,EACAK,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMM,EAAyB,GAE/B,IAAIJ,EAAY,KACZZ,IACFgB,EAAuBC,KAAK,QAC5BL,EAAYM,EAAAA,IAAK,MAAA,CAAAC,UAAWC,EAAMA,OAACC,eAActB,SAAGC,KAGtD,IAAIa,EAAa,KACbZ,IACFe,EAAuBC,KAAK,QAC5BJ,EAAaK,EAAAA,IAAK,MAAA,CAAAC,UAAWC,EAAMA,OAACE,qBAAoBvB,SAAGE,KAG7De,EAAuBC,KAAK,OAE5B,IAAIH,EAAW,MACXR,GAAYC,GAAYC,GAAUE,KACpCM,EAAuBC,KAAK,QAC5BH,EACES,EAAAA,KAAK,MAAA,CAAAJ,UAAWC,EAAAA,OAAOI,cACrBzB,SAAA,CAAAmB,EAAAA,IAAA,MAAA,CACEC,UAAWM,EAAAA,WAAW,CACpBL,EAAAA,OAAOE,qBACPhB,EAAWc,EAAAA,OAAOM,kBAAoB,KACtC3B,SACDO,IAEHY,aACEC,UAAWM,aAAW,CACpBL,EAAAA,OAAOE,qBACPf,EAAWa,EAAAA,OAAOM,kBAAoB,KAEvC3B,SAAAQ,IAEHW,EAAAA,WACEC,UAAWM,EAAUA,WAAC,CAACL,EAAMA,OAACE,qBAAsBd,EAASY,EAAAA,OAAOO,aAAe,KAClF5B,SAAAS,QAMT,MAAMG,EAAkBK,EAAuBY,KAAK,KAC9Cb,KAAeN,IAAcC,GAEnC,MAAO,CAAEC,kBAAiBC,YAAWC,aAAYC,WAAUC,eAC7D,CAnG6Ec,CACzE7B,EACAC,EACAK,EACAC,EACAC,EACAC,EACAC,GAIIoB,EAAW/B,EACfmB,aAAKC,UAAWC,EAAAA,OAAOW,wBAAiBhC,IAExCwB,EAAAS,KAAA,MAAA,CAAKb,UAAWC,EAAAA,OAAOa,iBAAgBlC,SAAA,CACrCmB,sBAAMb,IACNa,EAAMgB,IAAA,MAAA,CAAAnC,SAAAG,IACNgB,EAAAgB,IAAA,MAAA,CAAAnC,SAAMI,IACNe,sBAAMd,OAKJ+B,EAAYpB,EACd,CACEH,GAAaM,EAAAA,IAAc,OAAA,CAAAnB,SAAA,MAC3Bc,GAAcK,EAAAA,IAAc,OAAA,CAAAnB,SAAA,MAC5BmB,EAAAgB,IAAA,MAAA,CAAKf,UAAWC,EAAMA,OAACgB,eAAcrC,SAAGU,IACxCK,GAAYI,EAAAA,WAAKC,UAAWC,EAAAA,OAAOiB,iBAAmBtC,SAAAW,KAExD,KAEJ,OACEa,OAACe,EAAAA,KAAI,CAACC,IAAI,KAAKC,oBAAqB7B,EAAeZ,SAAA,CAChDa,EACAC,EACDK,EAAAA,IAAA,MAAA,CAAKC,UAAWC,SAAOE,qBAAuBvB,SAAA+B,IAC7ChB,EACAqB,IAGP"}