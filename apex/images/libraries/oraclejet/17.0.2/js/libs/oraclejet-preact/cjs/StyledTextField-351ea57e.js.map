{"version":3,"file":"StyledTextField-351ea57e.js","sources":["../../src/UNSAFE_TextField/ReadonlyTextFieldContent.tsx","../../src/UNSAFE_TextField/ReadonlyTextField.tsx","../../src/UNSAFE_TextField/StyledTextField.tsx"],"sourcesContent":["import { ComponentChildren, Ref } from 'preact';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport type { TextFieldStyles, TextFieldVariantOptions } from './themes/TextFieldStyles.css';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\nimport type {\n  ReadonlyTextFieldStyles,\n  ReadonlyTextFieldVariantOptions\n} from './themes/ReadonlyTextFieldStyles.css';\nimport { ReadonlyTextFieldRedwoodTheme } from './themes/redwood/ReadonlyTextFieldTheme';\n\ntype VariantProps =\n  | {\n      variant?: never;\n      resize?: never;\n    }\n  | {\n      variant: 'textarea';\n      resize?: 'horizontal' | 'vertical' | 'both';\n    };\n\ntype Props = VariantProps & {\n  mainContent?: ComponentChildren;\n  insideLabel?: ComponentChildren;\n  endContent?: ComponentChildren;\n  rootRef?: Ref<HTMLDivElement>;\n  hasZeroStartMargin?: boolean;\n};\n\n// Renders the oj-text-field-container dom which includes the\n// main (where the inside label and inputElem goes),\n// and end pieces of the form component.\n// This does not include user assistance because that is rendered outside the\n// oj-text-field-container; that is rendered in the TextField component.\nexport const ReadonlyTextFieldContent = ({\n  variant,\n  insideLabel,\n  mainContent,\n  endContent,\n  rootRef,\n  resize\n}: Props) => {\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n  const isInsideNonReadonlyForm = isFormLayout && !isReadonlyForm;\n  const hasInsideLabel = insideLabel !== undefined;\n  const inputGroupContext = useInputGroupContext();\n  const hasGroupContext = inputGroupContext !== null;\n  // depending on browser direction, apply the appropriate styling.\n  // when 'rtl' the flex row direction is reversed.\n  const inputGroupPosition = inputGroupContext\n    ? inputGroupContext.last\n      ? isLtr\n        ? 'groupRight'\n        : 'groupLeft'\n      : inputGroupContext.index === 0\n      ? isLtr\n        ? 'groupLeft'\n        : 'groupRight'\n      : 'groupMiddle'\n    : undefined;\n\n  const {\n    variantClasses: middleStyles,\n    styles: { textFieldEndContent }\n  } = useComponentTheme<TextFieldVariantOptions, TextFieldStyles>(TextFieldRedwoodTheme, {\n    middleContent: variant,\n    textAreaResizeDirection: resize && variant === 'textarea' ? direction : undefined\n  });\n\n  const {\n    classes: readonlyClassNames,\n    styles: {\n      readonlyTextFieldMiddleBase,\n      readonlyTextFieldMiddleNotInEnabledForm,\n      readonlyTextFieldMiddleInEnabledForm,\n      readonlyTextFieldMiddleInEnabledFormNotTextarea\n    }\n  } = useComponentTheme<ReadonlyTextFieldVariantOptions, ReadonlyTextFieldStyles>(\n    ReadonlyTextFieldRedwoodTheme,\n    {\n      insideNonReadonlyForm: isInsideNonReadonlyForm\n        ? 'isInsideNonReadonlyForm'\n        : 'notInsideNonReadonlyForm',\n      insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n      textarea: variant === 'textarea' ? 'isTextArea' : 'notTextArea',\n      loading: isLoading ? 'isLoading' : 'notLoading',\n      withinGroup: hasGroupContext ? 'isWithinGroup' : undefined,\n      inputGroupPosition,\n      resize: resize ?? 'none'\n    }\n  );\n\n  const middleClasses = classNames([\n    middleStyles,\n    readonlyTextFieldMiddleBase,\n    isInsideNonReadonlyForm && readonlyTextFieldMiddleInEnabledForm,\n    isInsideNonReadonlyForm &&\n      variant !== 'textarea' &&\n      readonlyTextFieldMiddleInEnabledFormNotTextarea,\n    !isInsideNonReadonlyForm && readonlyTextFieldMiddleNotInEnabledForm\n  ]);\n\n  return (\n    <div role=\"presentation\" class={readonlyClassNames} ref={rootRef}>\n      <div class={middleClasses}>\n        {insideLabel}\n        {mainContent}\n      </div>\n      {endContent && (\n        <span class={textFieldEndContent}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {endContent}\n          </Flex>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport type { VariantProps };\n","import { LabelRedwoodTheme } from '#UNSAFE_Label/themes/redwood/LabelTheme';\nimport { LabelValueLayout } from '#UNSAFE_LabelValueLayout';\nimport { SkeletonRedwoodTheme } from '#UNSAFE_Skeleton/themes/redwood/SkeletonTheme';\nimport { useComponentTheme } from '#hooks/UNSAFE_useComponentTheme';\nimport { useTestId, type TestIdProps } from '#hooks/UNSAFE_useTestId';\nimport { HTMLAttributesSignalExcluded } from '#utils/UNSAFE_attributeUtils';\nimport { classNames } from '#utils/UNSAFE_classNames';\nimport { Size } from '#utils/UNSAFE_size';\nimport { LayoutColumnSpan, layoutSpanStyles } from '#utils/UNSAFE_styles/Layout';\nimport { StyledComponentProps } from '#utils/UNSAFE_typeUtils';\nimport { ComponentChildren, ComponentProps, Ref } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { ReadonlyTextFieldContent, VariantProps } from './ReadonlyTextFieldContent';\nimport { FormLayoutRedwoodTheme } from './themes/redwood/FormLayoutTheme';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\n\ntype DivProps = HTMLAttributesSignalExcluded<HTMLDivElement>;\ntype UAProps = {\n  compactUserAssistance?: ComponentChildren;\n  inlineUserAssistance?: ComponentChildren;\n};\ntype OuterClassNamesProps = {\n  outerClassNames?: string;\n};\n\ntype PickedPropsFromReadonlyTextFieldContent = Pick<\n  ComponentProps<typeof ReadonlyTextFieldContent>,\n  'mainContent' | 'endContent'\n>;\n\ntype StartTopLabelReadonlyTextFieldProps = Omit<DivProps, 'label'> &\n  UAProps &\n  VariantProps &\n  PickedPropsFromReadonlyTextFieldContent &\n  OuterClassNamesProps & {\n    label?: ComponentChildren;\n    labelEdge?: 'start' | 'top';\n    labelStartWidth?: Size;\n    rootRef?: Ref<HTMLDivElement>;\n  };\n\nconst StartTopLabelReadonlyTextField = forwardRef(\n  (\n    {\n      outerClassNames,\n      label,\n      labelEdge,\n      labelStartWidth,\n      compactUserAssistance,\n      inlineUserAssistance,\n      mainContent,\n      endContent,\n      rootRef,\n      variant,\n      resize,\n      ...props\n    }: StartTopLabelReadonlyTextFieldProps,\n    ref?: Ref<HTMLDivElement>\n  ) => {\n    const parentComponentVariant = variant === 'textarea' ? 'textArea' : 'textField';\n    return (\n      <div {...props} ref={ref} class={outerClassNames}>\n        {compactUserAssistance}\n        <LabelValueLayout\n          label={label}\n          labelEdge={labelEdge}\n          labelStartWidth={labelStartWidth}\n          parentComponentVariant={parentComponentVariant}>\n          <ReadonlyTextFieldContent\n            mainContent={mainContent}\n            endContent={endContent}\n            rootRef={rootRef}\n            {...(variant ? ({ variant, resize } as VariantProps) : {})}\n          />\n        </LabelValueLayout>\n        {inlineUserAssistance}\n      </div>\n    );\n  }\n);\n\ntype InsideLabelReadonlyTextFieldProps = Omit<DivProps, 'label'> &\n  UAProps &\n  VariantProps &\n  PickedPropsFromReadonlyTextFieldContent &\n  OuterClassNamesProps & {\n    label?: ComponentChildren;\n    rootRef?: Ref<HTMLDivElement>;\n  };\nconst InsideLabelReadonlyTextField = forwardRef(\n  (\n    {\n      outerClassNames,\n      compactUserAssistance,\n      inlineUserAssistance,\n      mainContent,\n      endContent,\n      label,\n      rootRef,\n      variant,\n      resize,\n      ...props\n    }: InsideLabelReadonlyTextFieldProps,\n    ref?: Ref<HTMLDivElement>\n  ) => {\n    return (\n      <div {...props} ref={ref} class={outerClassNames}>\n        {compactUserAssistance}\n        <ReadonlyTextFieldContent\n          insideLabel={label}\n          mainContent={mainContent}\n          endContent={endContent}\n          rootRef={rootRef}\n          {...(variant ? ({ variant, resize } as VariantProps) : {})}\n        />\n        {inlineUserAssistance}\n      </div>\n    );\n  }\n);\n\nexport type StyleProps = UAProps &\n  VariantProps &\n  PickedPropsFromReadonlyTextFieldContent & {\n    columnSpan?: LayoutColumnSpan;\n    label?: ComponentChildren;\n    labelEdge?: 'inside' | 'start' | 'top';\n    variant?: 'textarea';\n    mainFieldRef?: Ref<HTMLDivElement>;\n  };\n\ntype Props = TestIdProps & StyledComponentProps<'div', StyleProps>;\n\nexport const ReadonlyTextField = forwardRef(\n  (\n    {\n      columnSpan = 1,\n      label,\n      labelEdge,\n      mainContent,\n      endContent,\n      variant,\n      mainFieldRef,\n      testId,\n      ...props\n    }: Props,\n    ref?: Ref<HTMLElement>\n  ) => {\n    const testIdProps = useTestId(testId);\n    const { classes, styles } = useComponentTheme(TextFieldRedwoodTheme, {\n      readonly: 'isReadonly'\n    });\n    const { baseTheme: labelBaseTheme } = useComponentTheme(LabelRedwoodTheme);\n    const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n\n    const { formControlBase } = styles;\n    // because TextField components reference Skeleton scoped vars, we need to bring in the Skeleton base theme\n    // to pick up the scoped var definitions.\n    const { baseTheme: skeletonBaseTheme } = useComponentTheme(SkeletonRedwoodTheme);\n\n    const outerClassNames = classNames([\n      classes,\n      skeletonBaseTheme,\n      formControlBase,\n      formLayoutTheme,\n      labelBaseTheme,\n      layoutSpanStyles.layoutSpanColumn[columnSpan]\n    ]);\n\n    if (label !== undefined && (labelEdge === 'start' || labelEdge === 'top')) {\n      return (\n        <StartTopLabelReadonlyTextField\n          outerClassNames={outerClassNames}\n          label={label}\n          labelEdge={labelEdge}\n          ref={ref as Ref<HTMLDivElement> | undefined}\n          mainContent={mainContent}\n          endContent={endContent}\n          rootRef={mainFieldRef}\n          variant={variant}\n          {...props}\n          {...testIdProps}></StartTopLabelReadonlyTextField>\n      );\n    }\n\n    return (\n      <InsideLabelReadonlyTextField\n        outerClassNames={outerClassNames}\n        ref={ref as Ref<HTMLDivElement> | undefined}\n        label={label}\n        mainContent={mainContent}\n        endContent={endContent}\n        rootRef={mainFieldRef}\n        variant={variant}\n        {...props}\n        {...testIdProps}></InsideLabelReadonlyTextField>\n    );\n  }\n);\n","import { Ref } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TextFieldStyles, TextFieldVariantOptions } from './themes/TextFieldStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { FormLayoutRedwoodTheme } from './themes/redwood/FormLayoutTheme';\nimport { LabelRedwoodTheme } from '../UNSAFE_Label/themes/redwood/LabelTheme';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\nimport { SkeletonRedwoodTheme } from '../UNSAFE_Skeleton/themes/redwood/SkeletonTheme';\nimport { layoutSpanStyles, LayoutColumnSpan } from '../utils/UNSAFE_styles/Layout';\n\nexport type StyleProps = {\n  columnSpan?: LayoutColumnSpan;\n  hasInsideLabel?: boolean;\n  variant?: 'default' | 'embedded';\n};\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const StyledTextField = forwardRef(\n  (\n    { columnSpan = 1, hasInsideLabel = false, variant = 'default', ...props }: Props,\n    ref?: Ref<HTMLElement>\n  ) => {\n    // because of the mismatch of height for inputs with inside labels and no labels,\n    // we'll have to set everything to the same min-height while within an input group context.\n    // Here we'll look to see if it's present and apply the style as needed\n    const groupContext = useInputGroupContext();\n    const { isReadonly } = useFormFieldContext();\n    const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n    const { baseTheme: labelBaseTheme } = useComponentTheme(LabelRedwoodTheme);\n    const { classes: textFieldClasses, styles } = useComponentTheme<\n      TextFieldVariantOptions,\n      TextFieldStyles\n    >(TextFieldRedwoodTheme, {\n      readonly: isReadonly ? 'isReadonly' : 'notReadonly',\n      formControlInsideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n      withinGroup: groupContext !== null ? 'isWithinGroup' : undefined\n    });\n\n    const { formControlBase, textFieldBase, textFieldEmbedded } = styles;\n\n    // because TextField components reference Skeleton scoped vars, we need to bring in the Skeleton base theme\n    // to pick up the scoped var definitions.\n    const { baseTheme: skeletonBaseTheme } = useComponentTheme(SkeletonRedwoodTheme);\n\n    const classes = classNames([\n      skeletonBaseTheme,\n      formControlBase,\n      textFieldBase,\n      variant === 'embedded' && textFieldEmbedded,\n      textFieldClasses,\n      formLayoutTheme,\n      labelBaseTheme,\n      layoutSpanStyles.layoutSpanColumn[columnSpan]\n    ]);\n\n    return <div {...props} class={classes} ref={ref as Ref<HTMLDivElement> | undefined} />;\n  }\n);\n"],"names":["useFormContext","useFormFieldContext","useUser","useInputGroupContext","useComponentTheme","TextFieldRedwoodTheme","ReadonlyTextFieldRedwoodTheme","classNames","_jsxs","_jsx","Flex","forwardRef","LabelValueLayout","useTestId","LabelRedwoodTheme","FormLayoutRedwoodTheme","SkeletonRedwoodTheme","layoutSpanStyles"],"mappings":"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"}