{"version":3,"file":"LabelValueLayout-24937fa5.js","sources":["../../src/UNSAFE_LabelValueLayout/LabelValueLayout.tsx"],"sourcesContent":["import { classNames } from '../utils/UNSAFE_classNames';\nimport { ComponentChildren, JSX } from 'preact';\nimport { Flex } from '../UNSAFE_Flex';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { sizeToCSS, Size } from '../utils/UNSAFE_size';\nimport { labelSlotStyles, labelInnerStyles, valueSlotStyles } from './LabelValueLayoutStyles.css';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TextFieldRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/TextFieldTheme';\nimport { RadioRedwoodTheme } from '../UNSAFE_RadioItem/themes/redwood/RadioTheme';\nimport { LabelRedwoodTheme } from '../UNSAFE_Label/themes/redwood/LabelTheme';\nimport { FormLayoutRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/FormLayoutTheme';\nimport { CheckboxRedwoodTheme } from '../UNSAFE_Checkbox/themes/redwood/CheckboxTheme';\n\ntype TextFieldProps = {\n  /**\n   * Defines how the label is going to be positioned. For a TextField only the start and top values are allowed.\n   */\n  labelEdge?: 'start' | 'top';\n  parentComponentVariant?: 'textField' | 'textArea';\n};\ntype CheckboxRadioSetProps = {\n  /**\n   * Defines how the label is going to be positioned. For CheckboxSet or RadioSet the start, top and inside values are supported.\n   */\n  labelEdge?: 'start' | 'top' | 'inside';\n  parentComponentVariant: 'radioSet' | 'checkboxSet';\n};\n\ntype Props = (TextFieldProps | CheckboxRadioSetProps) & {\n  /**\n   * Label content of the layout\n   */\n  label?: ComponentChildren;\n\n  /**\n   * Defines the label width for labelEdge 'start' ('top' is always 100%)\n   */\n  labelStartWidth?: Size;\n  /**\n   * Value content of the layout\n   */\n  children: ComponentChildren;\n\n  hasTopUserAssistance?: boolean;\n};\n\nexport const LabelValueLayout = ({\n  label,\n  labelEdge,\n  children,\n  labelStartWidth = '33%',\n  parentComponentVariant = 'textField',\n  hasTopUserAssistance = false\n}: Props) => {\n  const { baseTheme: textFieldTheme } = useComponentTheme(TextFieldRedwoodTheme);\n  const { baseTheme: radioTheme } = useComponentTheme(RadioRedwoodTheme);\n  const { baseTheme: checkboxTheme } = useComponentTheme(CheckboxRedwoodTheme);\n  const { baseTheme: labelTheme } = useComponentTheme(LabelRedwoodTheme);\n  const { baseTheme: formLayoutTheme } = useComponentTheme(FormLayoutRedwoodTheme);\n\n  const isTextField = parentComponentVariant.startsWith('text');\n  const isRadio = parentComponentVariant === 'radioSet';\n  const isCheckbox = parentComponentVariant === 'checkboxSet';\n  const isStart = labelEdge === 'start';\n  const isTop = labelEdge === 'top' || labelEdge === 'inside'; // 'inside' needs to pick up all 'top' styles.\n  const isInside = labelEdge === 'inside';\n  const width = sizeToCSS(labelStartWidth);\n  const valueWidth = `calc(100% - ${width})`;\n\n  const labelStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: width, width: width, maxWidth: width }\n    : {};\n\n  const valueStyles: JSX.CSSProperties = isStart\n    ? { flexBasis: valueWidth, width: valueWidth, maxWidth: valueWidth }\n    : {};\n\n  const { isFormLayout, isReadonly: isFormReadonly, labelWrapping } = useFormContext();\n  const { isReadonly } = useFormFieldContext();\n  const isPureReadonly = (isFormLayout && isFormReadonly) || (!isFormLayout && isReadonly);\n\n  const labelStyleClasses = classNames([\n    formLayoutTheme,\n    labelSlotStyles.base,\n    isStart && labelSlotStyles.start,\n    isTop && labelSlotStyles.top,\n    isTop && hasTopUserAssistance && labelSlotStyles.topAndTopUA,\n    isTop && isPureReadonly && labelSlotStyles.topPureReadonly\n  ]);\n\n  const labelInnerClasses = classNames([\n    isTextField && textFieldTheme,\n    isRadio && radioTheme,\n    isCheckbox && checkboxTheme,\n    (isRadio || isCheckbox) && labelTheme,\n    formLayoutTheme,\n    labelInnerStyles.base,\n    isStart && labelInnerStyles.start,\n    isTextField && isStart && !isPureReadonly && labelInnerStyles.startNotPureReadonly,\n    isRadio && isInside && labelInnerStyles.insideRadioSet,\n    isCheckbox && isInside && labelInnerStyles.insideCheckboxSet,\n    isRadio && isStart && !hasTopUserAssistance && labelInnerStyles.startWithNoTopRadioSetUA,\n    isCheckbox && isStart && !hasTopUserAssistance && labelInnerStyles.startWithNoTopCheckboxSetUA,\n    labelWrapping === 'truncate' && labelInnerStyles.noWrap\n  ]);\n\n  return (\n    // For readonly start aligned labels, we want the div that is the parent of the label to\n    // stretch to the height of the value content, including the end content (InputSensitiveText)\n    <Flex wrap=\"wrap\" align={isReadonly && isStart ? 'stretch' : 'start'}>\n      <div class={labelStyleClasses} style={labelStyles}>\n        <div class={labelInnerClasses}>{label}</div>\n      </div>\n      <div class={valueSlotStyles} style={valueStyles}>\n        {children}\n      </div>\n    </Flex>\n  );\n};\n"],"names":["useComponentTheme","TextFieldRedwoodTheme","RadioRedwoodTheme","CheckboxRedwoodTheme","LabelRedwoodTheme","FormLayoutRedwoodTheme","sizeToCSS","useFormContext","useFormFieldContext","classNames","_jsxs","Flex","_jsx"],"mappings":"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"}