{"version":3,"file":"SelectorAll-d8d3cb7b.js","sources":["../../src/UNSAFE_SelectorAll/SelectorAll.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useRef } from 'preact/hooks';\nimport { SelectionDetail } from '../UNSAFE_Collection';\nimport { Flex } from '../UNSAFE_Flex';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { styles } from '../UNSAFE_Selector/themes/SelectorStyles.css';\nimport { StyledCheckbox } from '../PRIVATE_StyledCheckbox';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useActive } from '../hooks/UNSAFE_useActive';\nimport { useFocus } from '../hooks/UNSAFE_useFocus';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { useTooltip } from '../hooks/UNSAFE_useTooltip';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { useHover } from '../hooks/UNSAFE_useHover/useHover';\n\n/**\n * Props for the SelectorAll Component\n */\nexport type Props<K> = {\n  /**\n   * The selected state of the select all selector\n   */\n  selected: 'none' | 'all' | 'partial' | 'partial-all';\n  /**\n   * Callback function to invoke when the selected keys has changed when\n   * the checkbox is toggled.\n   */\n  onChange?: (detail: SelectionDetail<K>) => void;\n  /**\n   * aria-label for this selectorAll\n   */\n  'aria-label'?: string;\n  /**\n   * One or more ids (separated by spaces) of elements that label the selected item. This will be used for the aria-labelledby of the DOM element.\n   */\n  'aria-labelledby'?: string;\n  /**\n   * Specifies whether tooltip should be shown on the SelectorAll checkbox\n   */\n  showTooltip?: 'enabled' | 'disabled';\n};\n\n/**\n * The SelectorAll component renders checkboxes for select all case.\n */\nexport function SelectorAll<K>({\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n  selected,\n  onChange,\n  showTooltip = 'disabled',\n  testId\n}: Props<K> & TestIdProps) {\n  const pressHandler = (event: Event) => {\n    if (selected == 'none' || selected == 'partial') {\n      onChange?.({ value: { all: true, deletedKeys: new Set() }, target: event.target });\n    } else {\n      onChange?.({ value: { all: false, keys: new Set() }, target: event.target });\n    }\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isActive, activeProps } = useActive();\n  const { isFocus, focusProps } = useFocus();\n  const { pressProps } = usePress(pressHandler);\n\n  const { isHover, hoverProps } = useHover();\n  const isChecked =\n    selected === 'partial' || selected === 'partial-all'\n      ? 'partial'\n      : selected === 'all'\n      ? 'checked'\n      : 'unchecked';\n  const testIdProps = useTestId(testId);\n\n  const onClick = () => {\n    // ensure the checkbox is focused after click\n    inputRef.current?.focus();\n  };\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  const tooltipLabel =\n    selected === 'none' || selected === 'partial'\n      ? translations.selectorAll_selectAll()\n      : translations.selectorAll_deselectAll();\n\n  const { tooltipContent, tooltipProps } = useTooltip({\n    text: tooltipLabel,\n    isDisabled: showTooltip === 'disabled' ? true : false\n  });\n\n  const ariaLabelText = !ariaLabel && !ariaLabelledby ? tooltipLabel : undefined;\n\n  return (\n    <div\n      class={styles.container}\n      {...mergeProps({ onClick }, pressProps, tooltipProps)}\n      {...testIdProps}>\n      <div class={styles.base} {...activeProps} {...hoverProps}>\n        <Flex align=\"center\" justify=\"center\">\n          <StyledCheckbox\n            ref={inputRef}\n            isHover={isHover}\n            isChecked={isChecked}\n            isActive={isActive}\n            isFocusRingShown={isFocus}\n            aria-label={ariaLabel ? ariaLabel : ariaLabelText}\n            aria-labelledby={ariaLabelledby}\n            onKeyDown={handleKeyboardEvent}\n            onKeyUp={handleKeyboardEvent}\n            {...focusProps}\n          />\n          {tooltipContent}\n        </Flex>\n      </div>\n    </div>\n  );\n}\n\nconst handleKeyboardEvent = (event: KeyboardEvent) => {\n  if (event.key == 'Enter') {\n    // prevent active styles applied to checkbox\n    event.stopPropagation();\n  }\n};\n"],"names":["useRef","useActive","useFocus","usePress","useHover","useTestId","useTranslationBundle","useTooltip","_jsx","styles","mergeProps","_jsxs","Flex","StyledCheckbox"],"mappings":"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"}