{"version":3,"file":"layoutUtils-c9c5367a.js","sources":["../../src/PRIVATE_Axis/dataAxisInfo.ts","../../src/PRIVATE_Axis/utils/axisUtils.ts","../../src/PRIVATE_Axis/utils/titleUtils.ts","../../src/utils/PRIVATE_chartUtils/numberFomatUtils.ts","../../src/PRIVATE_Axis/utils/dataAxisUtil.ts","../../src/PRIVATE_Axis/timeAxis.ts","../../src/utils/PRIVATE_chartUtils/dataUtils.ts","../../src/PRIVATE_Axis/groupAxis.ts","../../src/utils/PRIVATE_chartUtils/layoutUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ScaleLog, ScaleLinear } from '../utils/PRIVATE_chartUtils';\nimport { DataAxisInfoProps } from '../utils/UNSAFE_visTypes/chart';\n\nconst MAX_NUMBER_OF_GRIDS_AUTO = 10;\nconst MINOR_TICK_COUNT = 2;\nconst MAJOR_TICK_INCREMENT_BUFFER = 0.0000000001;\n\nexport class DataAxisInfo {\n  private dataMin!: number;\n  private dataMax!: number;\n  private viewportMin?: number;\n  private viewportMax?: number;\n  private min?: number;\n  private max?: number;\n  private isLog: boolean;\n  private majorTickCount!: number;\n  private minorTickCount!: number;\n  private majorIncrement?: number;\n  private minorIncrement?: number;\n  private minMajorIncrement?: number;\n  private isZeroBaseline: boolean;\n\n  constructor({\n    scale = 'linear',\n    baselineScaling = 'zero',\n    dataMax,\n    dataMin,\n    min,\n    max,\n    viewportMin,\n    viewportMax,\n    ...options\n  }: DataAxisInfoProps) {\n    this.isLog = scale === 'log';\n    this.isZeroBaseline = !this.isLog && baselineScaling === 'zero';\n\n    this.setDataRange(dataMin!, dataMax!);\n    this.setViewportRange(viewportMin, viewportMax, min, max);\n\n    this.majorIncrement = this.actualToLinear(options.step);\n    this.minorIncrement = this.actualToLinear(options.minorStep);\n    this.minMajorIncrement = this.actualToLinear(options.minStep);\n\n    this.calcAxisExtents();\n  }\n\n  /**\n   * Set the dataMin and dataMax.\n   * @param dataMin The minimum of the data.\n   * @param dataMax The maximum of the data.\n   */\n  setDataRange(dataMin: number, dataMax: number) {\n    this.dataMin = this.actualToLinear(dataMin)!;\n    this.dataMax = this.actualToLinear(dataMax)!;\n\n    if (this.isZeroBaseline) {\n      this.dataMin = Math.min(0, this.dataMin);\n      this.dataMax = Math.max(0, this.dataMax!);\n    }\n  }\n\n  setViewportRange(viewportMin?: number, viewportMax?: number, min?: number, max?: number) {\n    this.min = this.actualToLinear(min);\n    this.max = this.actualToLinear(max);\n    this.viewportMin = viewportMin == null ? this.min : this.actualToLinear(viewportMin);\n    this.viewportMax = viewportMax == null ? this.max : this.actualToLinear(viewportMax);\n  }\n\n  setDefaultMin(scaleUnit: number) {\n    // if already set in setViewportRange\n    if (this.min != null) {\n      return;\n    }\n\n    if (this.isZeroBaseline && this.dataMin >= 0) {\n      this.min = 0;\n    } else if (!this.isZeroBaseline && this.max != null) {\n      this.min = this.max - scaleUnit * (Math.floor((this.max - this.dataMin) / scaleUnit) + 1);\n    } else {\n      this.min = (Math.ceil(this.dataMin / scaleUnit) - 1) * scaleUnit;\n    }\n\n    // If all data points are positive, the axis min shouldn't be less than zero\n    if (this.dataMin >= 0 && !this.isLog) {\n      this.min = Math.max(this.min, 0);\n    }\n  }\n\n  setDefaultMax(scaleUnit: number) {\n    if (this.max != null) {\n      return;\n    }\n    if (this.isZeroBaseline && this.dataMax <= 0) {\n      this.max = 0;\n    } else if (!this.isZeroBaseline && this.min != null) {\n      this.max = this.min + scaleUnit * (Math.floor((this.dataMax - this.min) / scaleUnit) + 1);\n    } else {\n      this.max = (Math.floor(this.dataMax / scaleUnit) + 1) * scaleUnit;\n    }\n    // If all data points are negative, the axis max shouldn't be more that zero\n    if (this.dataMax <= 0) {\n      this.max = Math.min(this.max, 0);\n    }\n  }\n\n  calcAxisExtents() {\n    const maxValue = this.max != null ? this.max : this.dataMax;\n    const minValue = this.min != null ? this.min : this.dataMin;\n    const axisStep = this.calcAxisStep(minValue, maxValue);\n    let scaleUnit = this.minMajorIncrement ? Math.max(axisStep, this.minMajorIncrement) : axisStep;\n\n    // If there's only a single value on the axis, we need to adjust the\n    // this.dataMin and this.dataMax to produce a nice looking axis with around 6 ticks.\n    if (this.dataMin === this.dataMax) {\n      if (this.dataMin === 0) {\n        this.dataMax += 5 * scaleUnit;\n      } else {\n        this.dataMin -= 2 * scaleUnit;\n        this.dataMax += 2 * scaleUnit;\n      }\n    }\n\n    this.setDefaultMin(scaleUnit);\n\n    this.setDefaultMax(scaleUnit);\n\n    if (this.max === this.min) {\n      // happens if this.dataMin === this.dataMax === 0\n      this.max = 100;\n      this.min = 0;\n      scaleUnit = (this.max - this.min) / MAX_NUMBER_OF_GRIDS_AUTO;\n    }\n\n    if (\n      (this.viewportMin !== this.min || this.viewportMax !== this.max) &&\n      this.viewportMax != null &&\n      this.viewportMin != null\n    ) {\n      scaleUnit = this.calcAxisStep(this.viewportMin, this.viewportMax);\n    }\n\n    if (this.viewportMin == null) {\n      this.viewportMin = this.min;\n    }\n\n    if (this.viewportMax == null) {\n      this.viewportMax = this.max;\n    }\n\n    this.calcMajorMinorSteps(scaleUnit);\n  }\n\n  /**\n   * Determines the number of major and minor tick counts and increments for the axis if values were not given.\n   * The default minor tick count is 2.\n   * @param {number} scaleUnit The scale unit of the axis.\n   * @private\n   */\n\n  calcMajorMinorSteps(scaleUnit: number) {\n    if (this.max == null || this.min == null) {\n      return;\n    }\n    if (!this.majorIncrement) {\n      if (this.majorTickCount) {\n        this.majorIncrement = (this.viewportMax! - this.viewportMin!) / this.majorTickCount;\n      } else {\n        this.majorIncrement = this.minMajorIncrement\n          ? Math.max(scaleUnit, this.minMajorIncrement!)\n          : scaleUnit;\n      }\n    }\n\n    if (!this.majorTickCount) {\n      this.majorTickCount = (this.viewportMax! - this.viewportMin!) / this.majorIncrement;\n\n      // Check if we have a floating point inaccuracy that causes the tick count to be undercalculated\n      // within the allowable buffer. If so, tick count is supposed to be the rounded up integer.\n      if (Math.ceil(this.majorTickCount) - this.majorTickCount < MAJOR_TICK_INCREMENT_BUFFER) {\n        this.majorTickCount = Math.ceil(this.majorTickCount);\n      }\n    }\n\n    if (!this.minorTickCount) {\n      if (this.minorIncrement) {\n        this.minorTickCount = this.majorIncrement / this.minorIncrement;\n      } else if (this.isLog) {\n        this.minorTickCount = this.majorIncrement;\n      } else {\n        this.minorTickCount = MINOR_TICK_COUNT;\n      }\n    }\n\n    if (!this.minorIncrement) {\n      this.minorIncrement = this.majorIncrement / this.minorTickCount;\n    }\n  }\n\n  calcAxisStep(minValue: number, maxValue: number) {\n    if (this.majorIncrement) {\n      return this.majorIncrement;\n    }\n\n    const spread = maxValue - minValue;\n\n    if (spread === 0) {\n      if (minValue === 0) {\n        return 10;\n      }\n      return Math.pow(10, Math.floor(Math.log10(minValue)) - 1);\n    }\n\n    if (this.isLog) {\n      return Math.floor(spread / 8) + 1;\n    }\n\n    if (this.majorTickCount) {\n      const increment = spread / this.majorTickCount;\n      const testVal = Math.pow(10, Math.ceil(Math.log10(increment) - 1));\n      let firstDigit = increment / testVal;\n      if (firstDigit > 1 && firstDigit <= 1.5) {\n        firstDigit = 1.5;\n      } else if (firstDigit > 5) {\n        firstDigit = 10;\n      } else {\n        firstDigit = Math.ceil(firstDigit);\n      }\n      return firstDigit * testVal;\n    }\n    return this.getDefaultAxisStep(spread);\n  }\n\n  /**\n   * Aesthetically choose a step depending of the spread value.\n   * @param spread The spread of the data values.\n   * @returns The step for the axis.\n   */\n  getDefaultAxisStep(spread: number): number {\n    const t = Math.log10(spread);\n    const testVal = Math.pow(10, Math.ceil(t) - 2);\n    const first2Digits = Math.round(spread / testVal);\n\n    let scaleFactor = 1;\n    if (first2Digits >= 10 && first2Digits <= 14) {\n      scaleFactor = 2;\n    } else if (first2Digits >= 15 && first2Digits <= 19) {\n      scaleFactor = 3;\n    } else if (first2Digits >= 20 && first2Digits <= 24) {\n      scaleFactor = 4;\n    } else if (first2Digits >= 25 && first2Digits <= 45) {\n      scaleFactor = 5;\n    } else if (first2Digits >= 46 && first2Digits <= 80) {\n      scaleFactor = 10;\n    } else {\n      scaleFactor = 20;\n    }\n    return scaleFactor * testVal;\n  }\n\n  linearToActual(value: number) {\n    return this.isLog ? Math.pow(10, value) : value;\n  }\n\n  actualToLinear(value?: number) {\n    if (value == null) {\n      return;\n    }\n\n    if (this.isLog) {\n      return Math.log10(value);\n    }\n    return value;\n  }\n\n  getScale(range: [number, number]) {\n    const { viewportMin, viewportMax } = this.getAxisViewport();\n    const domain: [number, number] = [\n      this.linearToActual(viewportMin),\n      this.linearToActual(viewportMax)\n    ];\n    if (this.isLog) {\n      return new ScaleLog(domain, range);\n    }\n    return new ScaleLinear(domain, range);\n  }\n\n  getFirstTick() {\n    if (this.isZeroBaseline) {\n      return Math.ceil(this.viewportMin! / this.majorIncrement!) * this.majorIncrement!;\n    }\n    return (\n      this.min! +\n      Math.ceil((this.viewportMin! - this.min!) / this.majorIncrement!) * this.majorIncrement!\n    );\n  }\n\n  getAxisViewport() {\n    return {\n      viewportMin: this.viewportMin!,\n      viewportMax: this.viewportMax!\n    };\n  }\n\n  /**\n   * Returns the min and max extent of the axis.\n   */\n  getAxisExtent() {\n    return {\n      min: this.min!,\n      max: this.max!\n    };\n  }\n  /**\n   * Returns the major ticks.\n   */\n  getTicks() {\n    let firstTick = this.getFirstTick();\n    const ticks = [];\n\n    while (firstTick <= this.viewportMax!) {\n      ticks.push(this.linearToActual(firstTick));\n      firstTick += this.majorIncrement!;\n    }\n    return ticks;\n  }\n\n  getMinorTicks() {\n    const coords = [];\n    for (let i = -1; i <= this.majorTickCount; i++) {\n      const value = i * this.majorIncrement! + this.getFirstTick();\n      if (this.isLog && this.majorIncrement == 1 && this.minorIncrement == 1) {\n        // draw linear ticks from 2 to 9\n        for (let j = 2; j <= 9; j++) {\n          const linearValue = value + Math.log10(j);\n          if (linearValue > this.max!) break;\n          if (linearValue < this.min!) continue;\n          coords.push(this.linearToActual(linearValue));\n        }\n      } else {\n        for (let j = 1; j < this.minorTickCount; j++) {\n          const minorValue = value + j * this.minorIncrement!;\n          if (minorValue > this.max!) break;\n          if (minorValue < this.min!) continue;\n\n          coords.push(minorValue);\n        }\n      }\n    }\n    return coords;\n  }\n\n  getStep() {\n    return this.majorIncrement!;\n  }\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { AxisPosition, DataAxisProps } from '../../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../../utils/UNSAFE_visTypes/common';\nimport { AXIS_DEFAULTS } from './axisDefaults';\nimport { VisTextStyle } from '../../utils/UNSAFE_visUtils';\nimport type { Font, GetTextDimensionsType } from '../../hooks/PRIVATE_useTextDimensions';\n\n// increased the axis max ratio temporarily before chart can support\n// axis label truncation. This provides more space to chart axis for\n// really long tick labels for smaller decimal values.\nconst AXIS_MAX_RATIO = 0.3;\n\n/**\n * Returns resolved axis position.\n */\nexport function getAxesPosition(\n  yAxis: DataAxisProps | undefined,\n  isHoriz: boolean,\n  isRtl: boolean\n): {\n  xAxisPosition: AxisPosition;\n  yAxisPosition: AxisPosition;\n} {\n  let xAxisPosition, yAxisPosition: AxisPosition;\n\n  if (isHoriz) {\n    yAxisPosition = yAxis?.position === 'top' ? 'top' : 'bottom';\n    xAxisPosition = (isRtl ? 'right' : 'left') as AxisPosition;\n  } else {\n    xAxisPosition = 'bottom' as AxisPosition;\n    const isYEnd = yAxis?.position === 'end';\n    yAxisPosition = isYEnd ? (isRtl ? 'left' : 'right') : isRtl ? 'right' : 'left';\n  }\n  return { xAxisPosition, yAxisPosition };\n}\n\n/**\n * Returns the tick label anchor position for axis.\n * @param position\n * @param isRtl\n */\nexport function getTickLabelAnchor(position: AxisPosition, isRtl: boolean) {\n  if (!isRtl) {\n    return position === 'left' ? 'end' : position === 'right' ? 'start' : 'middle';\n  }\n  return position === 'left' ? 'start' : position === 'right' ? 'end' : 'middle';\n}\n\n/**\n * Returns the scale for the axis.\n * @param availSpace\n * @param axisViewportMin\n * @param axisViewportMax\n * @param position\n * @returns\n */\nexport function getAxisRange(availSpace: Dimension, position: AxisPosition, isRtl: boolean) {\n  const { x, y, width, height } = availSpace;\n  const y2 = y + height;\n  const x2 = x + width;\n\n  let rangeStart: number;\n  let rangeEnd: number;\n\n  if (position === 'left' || position === 'right') {\n    rangeStart = y2;\n    rangeEnd = y;\n  } else {\n    rangeStart = isRtl ? x2 : x;\n    rangeEnd = isRtl ? x : x2;\n  }\n\n  return [rangeStart, rangeEnd];\n}\n\n/**\n * Returns the maximum possible size of the axis.\n * @param availSpace The available space.\n * @param isHoriz If the axis is horizontal.\n * @param axisSize The ratio of axis to the chart.\n * @returns\n */\nexport function getAxisMaxSize(availSpace: Dimension, isHoriz: boolean, axisSize?: number) {\n  const size = Math.max(0, Math.min(1, axisSize != undefined ? axisSize : AXIS_MAX_RATIO));\n  return (isHoriz ? availSpace.height : availSpace.width) * size;\n}\n\n/**\n * Returns the width of a group for given availableSpace, axisposition and axis extents.\n * @param availSpace The available space to render the axis\n * @param position The position of the axis\n * @param min The minimum value of axis coord\n * @param max The maximum value of axis coord\n * @returns\n */\nexport function getGroupWidth(\n  availSpace: Dimension,\n  position: AxisPosition,\n  min: number,\n  max: number\n) {\n  const isHoriz = position === 'top' || position === 'bottom';\n  if (isHoriz) {\n    return availSpace.width / (max - min);\n  } else {\n    return availSpace.height / (max - min);\n  }\n}\n\n/**\n * Returns the num of labels to skip safely.\n * @param groupWidth\n * @param tickLabelStyle\n * @param getTextDimensions\n * @returns\n */\nexport function getSafeSkips(\n  groupWidth: number,\n  tickLabelStyle: VisTextStyle,\n  getTextDimensions?: GetTextDimensionsType\n) {\n  if (!getTextDimensions) {\n    return 0;\n  }\n  const textDims = getTextDimensions('MW', tickLabelStyle as Font);\n  const gaps = AXIS_DEFAULTS.labelGap;\n  return Math.floor((0.5 * textDims.width + gaps) / (2 * groupWidth));\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { GetTextDimensionsType } from '../../hooks/PRIVATE_useTextDimensions';\nimport { getSectionDims } from '../../utils/PRIVATE_visLayoutUtils';\nimport { getTextInfo, positionMultilineText } from '../../PRIVATE_VisSVGText/utils/utils';\nimport { TextProps } from '#PRIVATE_VisSVGText/text.types';\nimport { AxisPosition } from '../../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../../utils/UNSAFE_visTypes/common';\n\nconst defaultTitleProps = {\n  text: '',\n  lines: [],\n  lineProps: [],\n  titleDim: 0,\n  dims: {\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  },\n  isTruncated: false,\n  isRotated: false\n};\n\n/**\n * Returns the title props.\n * @returns\n */\nexport function getTitleProps(\n  title: string | undefined,\n  titleStyle: Record<string, any>,\n  maxHeight: number,\n  availSpace: Dimension,\n  position: AxisPosition,\n  isRtl: boolean,\n  getTextDimensions?: GetTextDimensionsType\n): TextProps & { titleDim: number } {\n  if (!title || !getTextDimensions) {\n    return defaultTitleProps;\n  }\n\n  const isHoriz = position === 'top' || position === 'bottom';\n\n  const maxWidth = isHoriz ? availSpace.width : availSpace.height;\n\n  const { lines, height, width, dims, lineHeight, isTruncated } = getTextInfo(\n    title,\n    titleStyle,\n    maxWidth,\n    maxHeight,\n    true,\n    getTextDimensions\n  );\n\n  if (height > maxHeight || width === 0 || height === 0) {\n    // title does not fit or not rendered\n    return defaultTitleProps;\n  }\n  const isRotated = position === 'left' || position === 'right';\n  const lineProps = positionMultilineText(lines, dims, lineHeight, position, availSpace, isRtl);\n  const textDim = getSectionDims(availSpace, position, width, height);\n  return {\n    text: title,\n    dims: textDim,\n    titleDim: height,\n    isTruncated,\n    lines: position === 'left' || position === 'top' ? lines : lines.reverse(),\n    lineProps,\n    isRotated\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nconst SCALING_FACTOR_DIFFERENCE = 3;\n\nconst scales = ['none', 'thousand', 'million', 'billion', 'trillion', 'quadrillion'] as const;\n\nconst scalesOrder = scales.map((_, i) => ({ scaleFactor: i * SCALING_FACTOR_DIFFERENCE }));\n\nexport type Scale = (typeof scales)[number];\n\nexport function getLinearAxisValueFormatter(\n  minValue: number,\n  maxValue: number,\n  tickStep: number,\n  locale: string\n) {\n  const scaleFactor = getScaleFactor(minValue, maxValue);\n  const decimalPlaces = getDecimalPlaces(minValue, maxValue, tickStep, scaleFactor);\n\n  const scale = Math.pow(10, scaleFactor);\n  const scaleConverterOptions = {\n    style: 'decimal' as const,\n    notation: 'compact' as const,\n    numberingSystem: 'latn' as const,\n    useGrouping: false\n  };\n  let defaultConverter = new Intl.NumberFormat(locale, scaleConverterOptions);\n\n  // Formatting for scale\n  const _SCALE_REGEXP = /(\\d+)(.*$)/;\n  const formattedScale = defaultConverter.format(scale);\n  const formattedScaleParts = _SCALE_REGEXP.exec(formattedScale);\n\n  const numberConverterOptions = {\n    style: 'decimal' as const,\n    minimumFractionDigits: decimalPlaces,\n    maximumFractionDigits: decimalPlaces\n  };\n  defaultConverter = new Intl.NumberFormat(locale, numberConverterOptions);\n\n  return (value: number) => {\n    if (!formattedScaleParts) {\n      return '';\n    }\n    const suffix = formattedScaleParts[2]; // Reset the suffix\n    const fsn = (Number(formattedScaleParts[1]) / scale) * value;\n    let formattedScaledNumber = fsn.toString();\n    formattedScaledNumber = defaultConverter.format(fsn);\n\n    // Add the scale factor suffix, unless value is zero\n    if (typeof suffix === 'string' && value !== 0) {\n      formattedScaledNumber += suffix;\n    }\n    return formattedScaledNumber;\n  };\n}\n\n/**\n * Returns the number of decimal places to use for given minValue, maxValue, tickStep, scaleFactor.\n * @param minValue The minValue of the axis.\n * @param maxValue The maxValue of the axis.\n * @param tickStep The step of the axis.\n * @param scaleFactor The scale factor of the scaling of the axis.\n * @returns\n */\nfunction getDecimalPlaces(\n  minValue: number,\n  maxValue: number,\n  tickStep: number,\n  scaleFactor: number\n) {\n  let decimalPlaces;\n  if (tickStep === 0 && minValue === maxValue) {\n    const valuePowerOfTen = getPowerOfTen(maxValue);\n    const scaleFactorDiff = scaleFactor - valuePowerOfTen;\n    if (scaleFactorDiff <= 0) {\n      // Value is same or larger than the scale factor, ensure 4 significant digits.\n      // Make sure that the number of decimal places is at least zero. Bug 18677330\n      decimalPlaces = Math.max(scaleFactorDiff + 3, 0);\n    } else {\n      // Value is smaller, ensure enough decimals to show 1 significant digit\n      decimalPlaces = Math.max(scaleFactorDiff, 4);\n    }\n  } else {\n    // get the number of decimal places in the number by subtracting\n    // the order of magnitude of the tick step from the order of magnitude\n    // of the scale factor\n    // (e.g.: scale to K, tick step of 50 -> 3 - 1 = 2 decimal places)\n    const tickStepPowerOfTen = getPowerOfTen(tickStep);\n    decimalPlaces = Math.max(scaleFactor - tickStepPowerOfTen, 0);\n  }\n\n  return decimalPlaces;\n}\n\n/**\n * Returns scale factor of scale given by scale name.\n * @param {string} scaleName\n * @return {number} scale factor of scale given by scale name\n */\nfunction getScaleFactor(minValue: number, maxValue: number) {\n  const absMax = Math.max(Math.abs(minValue), Math.abs(maxValue));\n  const power = getPowerOfTen(absMax);\n  return findNearestLEScaleFactor(power);\n}\n\n/**\n * Returns the log base 10 for a given value.\n * @param {number} value\n * @returns\n */\nfunction getPowerOfTen(value: number) {\n  // more comprehensive and easier than working with\n  // value returned by Math.log(value)/Math.log(10)\n  let val = value >= 0 ? value : -value;\n  let power = 0;\n\n  // Check for degenerate and zero values\n  if (val < 1e-15) {\n    return 0;\n  } else if (val === Infinity) {\n    return Number.MAX_VALUE;\n  }\n\n  if (val >= 10) {\n    // e.g. for 1000 the power should be 3\n    while (val >= 10) {\n      power += 1;\n      val /= 10;\n    }\n  } else if (val < 1) {\n    while (val < 1) {\n      power -= 1;\n      val *= 10;\n    }\n  }\n  return power;\n}\n\n/**\n * Finds a scale factor 'x' such that x <= value (e.g. if value equals 4 then returned scale factor equals 3)\n * @param {number} value value representing an order of magnitude\n * @return {number} a scale factor 'x' such that x <= value\n */\nfunction findNearestLEScaleFactor(value: number) {\n  let scaleFactor = 0;\n\n  if (value <= scalesOrder[0].scaleFactor) {\n    // if the number is less than 10, don't scale\n    scaleFactor = scalesOrder[0].scaleFactor;\n  } else if (value >= scalesOrder[scalesOrder.length - 1].scaleFactor) {\n    // if the data is greater than or equal to 10 quadrillion, scale to quadrillions\n    scaleFactor = scalesOrder[scalesOrder.length - 1].scaleFactor;\n  } else {\n    // else find the nearest scaleFactor such that scaleFactor <= value\n    const end = scalesOrder.length - 1;\n    for (let i = end; i >= 0; i--) {\n      if (scalesOrder[i].scaleFactor <= value) {\n        scaleFactor = scalesOrder[i].scaleFactor;\n        break;\n      }\n    }\n  }\n  return scaleFactor;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { AxisPosition, DataAxisProps } from '../../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../../utils/UNSAFE_visTypes/common';\nimport { DataAxisInfo } from '../dataAxisInfo';\nimport { AXIS_DEFAULTS } from '../utils/axisDefaults';\nimport { getAxisMaxSize, getAxisRange, getTickLabelAnchor } from '../utils/axisUtils';\nimport { getDataAxisLabelsInfo, getTickLabelInfo, updateLabelsDims } from '../utils/labelUtils';\nimport { getTitleProps } from '../utils/titleUtils';\nimport type { GetTextDimensionsType } from '../../hooks/PRIVATE_useTextDimensions';\nimport { getLinearAxisValueFormatter } from '../../utils/PRIVATE_chartUtils/numberFomatUtils';\nimport { ScaleLinear, ScaleLog } from '../../utils/PRIVATE_chartUtils';\n\n/**\n * The function that returns the y axis properties.\n * @param dataAxisInfo The DataAxisInfo.\n * @param dataAxis The dataAxis props.\n * @param groups The chart groups.\n * @param position The position of axis in the given space.\n * @param availSpace The available space.\n * @param isRtl Whether the reading direction is right to left.\n * @param getTextDimensions Function for text measurement.\n * @returns\n */\nexport function getDataAxisProps(\n  position: AxisPosition,\n  availSpace: Dimension,\n  isRtl: boolean,\n  locale: string,\n  dataAxis?: DataAxisProps,\n  dataAxisInfo?: DataAxisInfo,\n  axisFontSize?: string,\n  getTextDimensions?: GetTextDimensionsType\n) {\n  const [start, end] = getAxisRange(availSpace, position, isRtl);\n  const axisInfo = dataAxisInfo || new DataAxisInfo({ ...dataAxis });\n  const scale = axisInfo.getScale([start, end]);\n\n  const isHoriz = position === 'top' || position === 'bottom';\n  const axisMaxDim = getAxisMaxSize(availSpace, isHoriz, dataAxis?.size);\n  const titleStyle = { fontSize: axisFontSize, ...dataAxis?.titleStyle };\n  const { titleDim, ...titleProps } = getTitleProps(\n    dataAxis?.title,\n    titleStyle,\n    axisMaxDim,\n    availSpace,\n    position,\n    isRtl,\n    getTextDimensions\n  );\n  const { width: titleWidth, height: titleHeight } = titleProps.dims!;\n  const isTitleRendered = titleWidth > 0 && titleHeight > 0;\n  const axisDim = isTitleRendered ? titleDim + AXIS_DEFAULTS.titleGap : 0;\n  const isRotated = position === 'left' || position === 'right';\n\n  if (isTitleRendered) {\n    if (isRotated) {\n      availSpace.width -= axisDim;\n      availSpace.x += position === 'left' ? axisDim : 0;\n    } else {\n      availSpace.height -= axisDim;\n      availSpace.y += position === 'top' ? axisDim : 0;\n    }\n  }\n\n  const tickLabelStyle = {\n    fontSize: axisFontSize,\n    fill: dataAxis?.tickLabel?.style?.color,\n    ...dataAxis?.tickLabel?.style,\n    textAnchor: getTickLabelAnchor(position, isRtl),\n    dominantBaseline: 'middle'\n  };\n  const ticks = axisInfo.getTicks();\n\n  const linearFormatter = getLinearAxisValueFormatter(\n    ticks[0],\n    ticks[ticks.length - 1],\n    axisInfo.getStep(),\n    locale\n  );\n\n  let isLabelRendered = dataAxis?.tickLabel?.isRendered != false;\n\n  const labels = isLabelRendered\n    ? ticks.map((i) => {\n        if (dataAxis?.tickLabel?.format) {\n          return dataAxis.tickLabel.format(i);\n        }\n\n        if (dataAxis?.scale === 'log') {\n          const formatter = getLinearAxisValueFormatter(i, i, i, locale);\n          return formatter(i);\n        }\n        return linearFormatter(i);\n      })\n    : [];\n\n  const maxLabelHeight = axisMaxDim - axisDim - AXIS_DEFAULTS.labelGap;\n\n  const getLabelInfo = (tick: string | undefined, index: number, _: boolean) => {\n    const coord = scale.transform(ticks[index]);\n    return getTickLabelInfo(\n      coord,\n      tick,\n      tickLabelStyle,\n      isHoriz,\n      false,\n      false,\n      false,\n      isHoriz ? maxLabelHeight : axisMaxDim - axisDim,\n      isHoriz ? axisMaxDim - axisDim : maxLabelHeight,\n      availSpace,\n      getTextDimensions\n    );\n  };\n\n  const { maxWidth, maxHeight, tickLabels } = getDataAxisLabelsInfo(labels, getLabelInfo, isHoriz);\n\n  isLabelRendered =\n    isLabelRendered && isHoriz\n      ? maxHeight + AXIS_DEFAULTS.labelGap < axisMaxDim - axisDim\n      : maxWidth + AXIS_DEFAULTS.labelGap < axisMaxDim - axisDim;\n\n  const getAxisPos = (index: number) => {\n    return scale.transform(ticks[index]);\n  };\n\n  let labelDims = 0;\n  if (isLabelRendered) {\n    updateLabelsDims(maxWidth, maxHeight, tickLabels, getAxisPos, availSpace, position);\n    labelDims = isHoriz ? maxHeight + AXIS_DEFAULTS.labelGap : maxWidth + AXIS_DEFAULTS.labelGap;\n  }\n\n  return {\n    title: isTitleRendered ? dataAxis?.title : undefined,\n    titleStyle,\n    titleProps: isTitleRendered ? titleProps : undefined,\n    axisDim: isTitleRendered ? labelDims + axisDim : labelDims,\n    tickLabels,\n    tickLabelStyle,\n    scale\n  };\n}\n\nexport function getMaxAvailHeight(ticks: number[], scale: ScaleLinear | ScaleLog) {\n  const range = scale.range();\n  return Math.abs(range[1] - range[0]) / ticks.length;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  AxisPosition,\n  Group,\n  TimeAxisProps,\n  ChartItemData,\n  ChartSeriesData\n} from '../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../utils/UNSAFE_visTypes/common';\nimport { getLocale } from '../utils/UNSAFE_getLocale';\nimport { getAxisMaxSize, getAxisRange, getSafeSkips } from './utils/axisUtils';\nimport { getTitleProps } from './utils/titleUtils';\nimport {\n  getGroupAxisLabelsInfo,\n  getTickLabelInfo,\n  skipLabelsGreedy,\n  updateLabelsDims\n} from './utils/labelUtils';\nimport { AXIS_DEFAULTS } from './utils/axisDefaults';\nimport { GetTextDimensionsType } from '../hooks/PRIVATE_useTextDimensions';\n\nconst TIME_SECOND = 1000;\nconst TIME_MINUTE = 60 * TIME_SECOND;\nconst TIME_HOUR = 60 * TIME_MINUTE;\nconst TIME_DAY = 24 * TIME_HOUR;\nconst TIME_MONTH_MIN = 28 * TIME_DAY;\nconst TIME_MONTH_MAX = 31 * TIME_DAY;\nconst TIME_YEAR_MIN = 365 * TIME_DAY;\nconst TIME_YEAR_MAX = 366 * TIME_DAY;\n\nexport function getTimeAxisProps(\n  groups: Group[],\n  position: AxisPosition,\n  availSpace: Dimension,\n  viewportMin: number,\n  viewportMax: number,\n  averageInterval: number,\n  isRtl: boolean,\n  xAxis?: TimeAxisProps,\n  axisFontSize?: string,\n  getTextDimensions?: GetTextDimensionsType\n) {\n  const isHoriz = position === 'top' || position === 'bottom';\n  const axisMaxDim = getAxisMaxSize(availSpace, isHoriz, xAxis?.size);\n  const titleStyle = { fontSize: axisFontSize, ...xAxis?.titleStyle };\n  const timeAxisType = xAxis?.timeAxisType || 'regular';\n  const { titleDim, ...titleProps } = getTitleProps(\n    xAxis?.title,\n    titleStyle,\n    axisMaxDim,\n    availSpace,\n    position,\n    isRtl,\n    getTextDimensions\n  );\n  const { width: titleWidth, height: titleHeight } = titleProps.dims!;\n  const isTitleRendered = titleWidth > 0 && titleHeight > 0;\n  let axisDim = isTitleRendered ? titleDim + AXIS_DEFAULTS.titleGap : 0;\n  const isRotated = position === 'left' || position === 'right';\n\n  if (isTitleRendered) {\n    if (isRotated) {\n      availSpace.width -= axisDim;\n      availSpace.x += position === 'left' ? axisDim : 0;\n    } else {\n      availSpace.height -= axisDim;\n      availSpace.y += position === 'top' ? axisDim : 0;\n    }\n  }\n  const [start, end] = getAxisRange(availSpace, position, isRtl);\n\n  const tickLabelStyle = {\n    fontSize: axisFontSize,\n    fill: xAxis?.tickLabel?.style?.color,\n    ...xAxis?.tickLabel?.style,\n    textAnchor: position === 'left' ? 'end' : position === 'bottom' ? 'middle' : 'start',\n    dominantBaseline: 'middle'\n  };\n\n  const valueToCoord = (value: number) => {\n    return getCoordFromValue(\n      value,\n      viewportMin,\n      viewportMax,\n      start,\n      end,\n      averageInterval,\n      groups,\n      xAxis?.timeAxisType!\n    );\n  };\n\n  const locale = getLocale();\n  let axisStep = xAxis?.step;\n  const gap = AXIS_DEFAULTS.labelGap;\n\n  let times: number[] = [];\n  if (axisStep != null) {\n    times = getLabelPos(viewportMin, viewportMax, axisStep);\n  } else if (timeAxisType === 'mixedFrequency') {\n    axisStep = getMixedFrequencyStep(viewportMax - viewportMin);\n    times = getLabelPos(viewportMin, viewportMax, axisStep);\n  } else {\n    for (let i = 0; i < groups.length; i++) {\n      const date = new Date(groups[i].id).getTime();\n      if (date >= viewportMin && date <= viewportMax) times.push(date);\n    }\n    axisStep = averageInterval;\n  }\n\n  const level1Formatter = Array.isArray(xAxis?.tickLabel?.format)\n    ? xAxis?.tickLabel?.format[0]\n    : xAxis?.tickLabel?.format;\n  const level2Formatter = Array.isArray(xAxis?.tickLabel?.format)\n    ? xAxis?.tickLabel?.format[1]\n    : undefined;\n\n  if (timeAxisType != 'skipGaps') {\n    const granularity = calculateGranularity(axisStep, viewportMax - viewportMin);\n    times = treatMissingValues(times, granularity);\n\n    if (times.length > 1) {\n      // Since the contents of the times array might have been updated, the step value should\n      // be updated.\n      // The step value is approximated to the estimated average of the intervals in the updated\n      // times array.\n      // It is safe to do so even when there were no missing values as it should not have any side-effects\n      // on rendering the axis.\n      // If there are less than 2 values in the times array, proceed with the existing step value.\n      axisStep = (times[times.length - 1] - times[0]) / (times.length - 1);\n    }\n    const label = formatAxisLabel(\n      new Date(times[0] || viewportMin),\n      undefined,\n      !isHoriz,\n      false,\n      locale,\n      granularity,\n      level1Formatter,\n      level2Formatter\n    )[0];\n    const labelDims = getTextDimensions?.(label!, tickLabelStyle);\n    if (labelDims) {\n      const labelDim = isHoriz ? labelDims.width : labelDims.height;\n      const totalWidth =\n        (labelDim + getTickLabelGap(labelDims.height, isHoriz)) * (times.length - 1);\n      if (totalWidth > Math.abs(end - start)) {\n        axisStep = getMixedFrequencyStep(viewportMax - viewportMin);\n        times = getLabelPos(viewportMin, viewportMax, axisStep);\n      }\n    }\n  }\n\n  if (times.length === 0) {\n    times = [viewportMin];\n  }\n\n  const granularity = calculateGranularity(axisStep!, viewportMax - viewportMin);\n\n  const isLabelRendered = xAxis?.tickLabel?.isRendered != false;\n  let isLabel1Rendered = isLabelRendered;\n  let isLabel2Rendered = isLabelRendered;\n\n  let tickLabels: any[] = [];\n  const groupWidth = Math.abs(end - start) / times.length;\n\n  if (isLabelRendered) {\n    const { labelInfos1, labelInfos2 } = generateLabels(\n      times,\n      granularity,\n      valueToCoord,\n      level1Formatter,\n      level2Formatter\n    );\n\n    const numOfSafeSkips = getSafeSkips(groupWidth, tickLabelStyle, getTextDimensions);\n\n    const getLabel1Dims = (label: string | undefined, index: number) => {\n      const rangeValue = labelInfos1[index].coord;\n      if (!rangeValue || !label) {\n        return {\n          text: '',\n          dims: { width: 0, height: 0, x: 0, y: 0 },\n          lines: [],\n          isTruncated: false,\n          didNotFit: false,\n          lineProps: []\n        };\n      }\n      return getTickLabelInfo(\n        rangeValue,\n        label,\n        tickLabelStyle,\n        isHoriz,\n        false,\n        false,\n        false,\n        Infinity,\n        Infinity,\n        availSpace,\n        getTextDimensions\n      );\n    };\n\n    const getLabel2Dims = (label: string | undefined, index: number) => {\n      const rangeValue = labelInfos2[index]?.coord;\n      if (!rangeValue || !label) {\n        return {\n          text: '',\n          dims: { width: 0, height: 0, x: 0, y: 0 },\n          lines: [],\n          lineProps: [],\n          didNotFit: false,\n          isTruncated: false\n        };\n      }\n\n      return getTickLabelInfo(\n        rangeValue,\n        label,\n        tickLabelStyle,\n        isHoriz,\n        false,\n        false,\n        false,\n        Infinity,\n        Infinity,\n        availSpace,\n        getTextDimensions\n      );\n    };\n\n    const {\n      maxWidth: label1MaxWidth,\n      maxHeight: label1MaxHeight,\n      tickLabels: tickLabels1\n    } = getGroupAxisLabelsInfo(\n      labelInfos1.map((i) => i.text),\n      getLabel1Dims,\n      isHoriz,\n      false,\n      false,\n      numOfSafeSkips\n    );\n\n    axisDim = isHoriz ? label1MaxHeight + gap : label1MaxWidth + gap;\n\n    isLabel1Rendered =\n      isTitleRendered && isHoriz\n        ? axisDim < axisMaxDim - titleHeight\n        : axisDim < axisMaxDim - titleHeight;\n\n    const {\n      maxWidth: label2MaxWidth,\n      maxHeight: label2MaxHeight,\n      tickLabels: tickLabels2\n    } = skipLabelsGreedy(\n      labelInfos2.map((i) => i.label2),\n      getLabel2Dims,\n      isHoriz\n    );\n\n    const level2AxisDim = isHoriz\n      ? axisDim + label2MaxHeight + gap\n      : axisDim + label2MaxWidth + gap;\n\n    isLabel2Rendered = isHoriz\n      ? level2AxisDim < axisMaxDim - titleHeight\n      : level2AxisDim < axisMaxDim - titleHeight;\n\n    if (isLabel1Rendered) {\n      const getAxisPos = (index: number) => {\n        return labelInfos1[index].coord;\n      };\n      updateLabelsDims(\n        label1MaxWidth,\n        label1MaxHeight,\n        tickLabels1,\n        getAxisPos,\n        availSpace,\n        position\n      );\n      tickLabels = tickLabels.concat(tickLabels1);\n      axisDim = axisDim + titleHeight;\n    }\n\n    if (isLabel2Rendered) {\n      const getAxisPos = (index: number) => {\n        return labelInfos2[index].coord;\n      };\n      updateLabelsDims(\n        label2MaxWidth,\n        label2MaxHeight,\n        tickLabels2,\n        getAxisPos,\n        availSpace,\n        position\n      );\n      tickLabels.forEach((value) => {\n        if (value.lineProps[0]) {\n          value.lineProps[0].y -= value.lineProps[0].height;\n        }\n      });\n      tickLabels = tickLabels.concat(tickLabels2);\n      axisDim = level2AxisDim + titleHeight;\n    }\n  }\n\n  const scale = {\n    transform: valueToCoord,\n    range: () => {\n      return [start, end];\n    },\n    domain: () => {\n      return [viewportMin, viewportMax];\n    },\n    invert: (coord: number) => {\n      return getValueFromCoord(\n        coord,\n        start,\n        end,\n        viewportMin,\n        viewportMax,\n        averageInterval,\n        groups,\n        xAxis?.timeAxisType || 'enabled'\n      );\n    }\n  };\n\n  return {\n    title: isTitleRendered ? xAxis?.title : undefined,\n    titleProps: isTitleRendered ? titleProps : undefined,\n    titleStyle,\n    axisDim,\n    scale,\n    tickLabels,\n    groupWidth,\n    tickLabelStyle\n  };\n}\n\n/**\n * Calculates the granularity of the time axis.\n * @param step The step of the axis.\n * @param timeRange The time range of the axis.\n * @returns\n */\nexport function calculateGranularity(step: number, timeRange: number) {\n  if (step >= TIME_YEAR_MIN || timeRange >= 6 * TIME_YEAR_MIN) return TIME_YEAR_MIN;\n\n  if (step >= TIME_MONTH_MIN || timeRange >= 6 * TIME_MONTH_MIN) return TIME_MONTH_MIN;\n\n  if (step >= TIME_DAY || timeRange >= 6 * TIME_DAY) return TIME_DAY;\n\n  if (step >= TIME_HOUR || timeRange >= 6 * TIME_HOUR) return TIME_HOUR;\n\n  if (step >= TIME_MINUTE || timeRange >= 6 * TIME_MINUTE) return TIME_MINUTE;\n\n  return TIME_SECOND;\n}\n\n/**\n * Returns the step for mixed frequency time range.\n * @param timeRange\n * @returns\n */\nexport function getMixedFrequencyStep(timeRange: number) {\n  if (timeRange >= 6 * TIME_YEAR_MIN) return TIME_YEAR_MIN;\n  if (timeRange >= 6 * TIME_MONTH_MIN) return TIME_MONTH_MIN;\n  if (timeRange >= 6 * TIME_DAY) return TIME_DAY;\n  if (timeRange >= TIME_DAY) return 3 * TIME_HOUR;\n  if (timeRange >= 6 * TIME_HOUR) return TIME_HOUR;\n  if (timeRange >= TIME_HOUR) return 15 * TIME_MINUTE;\n  if (timeRange >= 30 * TIME_MINUTE) return 5 * TIME_MINUTE;\n  if (timeRange >= 6 * TIME_MINUTE) return TIME_MINUTE;\n  if (timeRange >= TIME_MINUTE) return 15 * TIME_SECOND;\n  if (timeRange >= 30 * TIME_SECOND) return 5 * TIME_SECOND;\n  return TIME_SECOND;\n}\n\nexport function formatLabelWithFormatter(\n  date: Date,\n  prevDate: Date | undefined,\n  formatter?: (date: number) => string\n) {\n  if (!formatter) {\n    return '';\n  }\n\n  const label = formatter(date.getTime());\n  const prevLabel = prevDate ? formatter?.(prevDate.getTime()) : undefined;\n\n  if (prevLabel !== label || label == null) {\n    return label;\n  }\n  // TODO: JET-65541. This is not as straightforward for format function. See old jet logic formatLabelWithConverter.\n  // do not skip label when it is same as prevLabel checking for granularity\n  // for eg. if June and July both convert to 'J' and granularity is TIME_MONTH_MIN, we want to keep both 'J's\n  // for eg. if Saturday and Sunday both convert to 'S' and granularity is TIME_MONTH_DAY, we want to keep both 'S's\n\n  return '';\n}\n\nexport function formatAxisLabel(\n  date: Date,\n  prevDate: Date | undefined,\n  bOneLabel: boolean,\n  isVert: boolean,\n  locale: string,\n  granularity: number,\n  label1Formatter?: (date: number) => string,\n  label2Formatter?: (date: number) => string\n) {\n  let label1 = null; // level 1 label\n  let label2 = null; // level 2 label\n\n  // If dateTimeFormatter is used, use it\n  if (label1Formatter || label2Formatter) {\n    if (label1Formatter) label1 = formatLabelWithFormatter(date, prevDate, label1Formatter);\n    if (label2Formatter) label2 = formatLabelWithFormatter(date, prevDate, label2Formatter);\n\n    return [label1, label2];\n  }\n\n  if (granularity === TIME_YEAR_MIN) {\n    label1 = formatDate(date, locale, false, false, true); // Year\n  } else if (granularity === TIME_MONTH_MIN) {\n    if (prevDate == null || prevDate.getMonth() != date.getMonth())\n      label1 = formatDate(date, locale, false, true, false); // Month\n\n    if (prevDate == null || prevDate.getFullYear() != date.getFullYear())\n      label2 = formatDate(date, locale, false, false, true); // Year\n  } else if (granularity === TIME_DAY) {\n    if (bOneLabel) {\n      label1 = formatDate(date, locale, true, true, true); // Day, Month, Year\n    } else {\n      if (prevDate == null || prevDate.getDate() != date.getDate())\n        label1 = formatDate(date, locale, true, false, false); // Day\n\n      if (prevDate == null || prevDate.getFullYear() != date.getFullYear())\n        label2 = formatDate(date, locale, false, true, true); // Year, Month\n      else if (prevDate.getMonth() != date.getMonth())\n        label2 = formatDate(date, locale, false, true, false); // Month\n    }\n  } else {\n    if (granularity === TIME_HOUR) {\n      if (prevDate == null || prevDate.getHours() != date.getHours())\n        label1 = formatTime(date, locale, false, false); // HH AM/PM or HH:MM\n    } else if (granularity === TIME_MINUTE) {\n      if (prevDate == null || prevDate.getMinutes() != date.getMinutes())\n        label1 = formatTime(date, locale, true, false); // HH:MM\n    } else {\n      if (prevDate == null || prevDate.getSeconds() != date.getSeconds())\n        label1 = formatTime(date, locale, true, true); // HH:MM:SS\n    }\n\n    if (isVert) {\n      if (prevDate == null || prevDate.getDate() != date.getDate())\n        label2 = formatDate(date, locale, true, true, false); // Month, Day\n    } else {\n      if (prevDate == null || prevDate.getFullYear() != date.getFullYear())\n        label2 = formatDate(date, locale, true, true, true); // Year, Month, Day\n      else if (prevDate.getMonth() != date.getMonth())\n        label2 = formatDate(date, locale, true, true, false); // Month, Day\n      else if (prevDate.getDate() != date.getDate())\n        label2 = formatDate(date, locale, true, false, false); // Day\n    }\n  }\n\n  return [label1, label2];\n}\n\n/**\n * Returns the formatted date string.\n * @param date\n * @param locale\n * @param showDay\n * @param showMonth\n * @param showYear\n * @returns\n */\nexport function formatDate(\n  date: Date,\n  locale: string,\n  showDay: boolean,\n  showMonth: boolean,\n  showYear: boolean\n) {\n  // this function is equivalent to _formatDate present in DvtTimeAxisInfo\n  // replacing the impl to use toLocaleDateString\n\n  const options = {\n    year: showYear ? ('numeric' as const) : undefined,\n    month: showMonth ? ('short' as const) : undefined,\n    day: showDay ? ('numeric' as const) : undefined\n  };\n\n  return date.toLocaleDateString(locale, options);\n}\n\n/**\n * Returns the formatted time string.\n * @param date\n * @param locale\n * @param showMinute\n * @param showSecond\n * @returns\n */\nexport function formatTime(date: Date, locale: string, showMinute: boolean, showSecond: boolean) {\n  // this function is equivalent to _formatDate present in DvtTimeAxisInfo\n  // replacing the impl to use toLocaleDateString\n\n  const options = {\n    hour: '2-digit' as const,\n    minute: showMinute ? ('2-digit' as const) : undefined,\n    second: showSecond ? ('2-digit' as const) : undefined\n  };\n\n  return date.toLocaleTimeString(locale, options);\n}\n\nexport function getLabelPos(start: number, end: number, step: number) {\n  // The time positions has to be at even intervals from the beginning of a year (January 1, 12:00:00 AM), otherwise\n  // we may have labels such as [2013, 2014, 2015, ...] that are drawn at [June 8 2013, June 8 2014, June 8 2015, ...],\n  // which is data misrepresentation.\n  const anchor = new Date(start);\n  const initialTimezoneOffset = anchor.getTimezoneOffset();\n  anchor.setMonth(0, 1); // January 1\n  anchor.setHours(0, 0, 0, 0); // 00:00:00\n  let time = anchor.getTime();\n\n  const times = [];\n  if (step >= TIME_YEAR_MIN && step <= TIME_YEAR_MAX) {\n    // Assume that the step is one year, which can mean different # of days depending on the year\n    while (time < start) time = addOneYear(time);\n    while (time <= end) {\n      times.push(time);\n      time = addOneYear(time);\n    }\n  } else if (step >= TIME_MONTH_MIN && step <= TIME_MONTH_MAX) {\n    // Assume that the step is one month, which can mean different # of days depending on the month\n    while (time < start) time = addOneMonth(time);\n    while (time <= end) {\n      times.push(time);\n      time = addOneMonth(time);\n    }\n  } else {\n    // Bug 26396791. Correction is needed due to daylight savings.\n    // Only apply daylight correction when step is less than a month. Daylight savings does not impact any step higher than month.\n    // JET-52348 - Ideally we should be using Date api to add and substract date offsets to calculate labels since\n    // Date will automatically handle daylight savings. This approach should solve issues for steps greater than month but we could encounter\n    // offsets in axis labels when dataset values are in different daylight savings and chart step is low (eg day or hour);\n    const timezoneCorrection = (initialTimezoneOffset - anchor.getTimezoneOffset()) * 60 * 1000;\n    const correction = step < TIME_MONTH_MIN ? timezoneCorrection : 0;\n    time += Math.ceil((start - time - correction) / step) * step + correction;\n    while (time <= end) {\n      times.push(time);\n      time += step;\n    }\n  }\n  return times;\n}\n\nexport function generateLabels(\n  times: number[],\n  granularity: number,\n  getCoordFromValue: (time: number) => number,\n  label1Formatter?: (time: number) => string,\n  label2Formatter?: (time: number) => string\n) {\n  const locale = getLocale();\n\n  const labelInfos1 = [];\n  const coords1 = [];\n\n  const labelInfos2 = [];\n  const coords2 = [];\n  let isOneLevel = true;\n  let prevDate = undefined;\n  for (let i = 0; i < times.length; i++) {\n    const time = times[i];\n    const coord = getCoordFromValue(time);\n    const date = new Date(time);\n    const [label1, label2] = formatAxisLabel(\n      date,\n      prevDate,\n      false,\n      false,\n      locale,\n      granularity,\n      label1Formatter,\n      label2Formatter\n    );\n    if (label1 != null) {\n      labelInfos1.push({ text: label1, coord });\n      coords1.push(coord);\n    }\n\n    if (label2 != null) {\n      labelInfos2.push({ label2, coord });\n      coords2.push(coord);\n      isOneLevel = false;\n    }\n\n    prevDate = date;\n  }\n  return {\n    labelInfos1,\n    labelInfos2,\n    coords1,\n    coords2,\n    isOneLevel\n  };\n}\n/**\n * Adds the time by one year, e.g. 2014 January 15 -> 2015 January 15 -> ...\n */\nexport function addOneYear(time: number) {\n  const date = new Date(time);\n  date.setFullYear(date.getFullYear() + 1);\n  return date.getTime();\n}\n\n/**\n * Adds the time by one month, e.g. January 15 -> February 15 -> March 15 -> ...\n */\nexport function addOneMonth(time: number) {\n  const date = new Date(time);\n  date.setMonth(date.getMonth() + 1);\n  return date.getTime();\n}\n\n/**\n * Returns the corresponding index for the given time in time axis.\n * @param time The time stamp.\n * @param averageInterval The average interval of the time axis.\n * @param groups The groups array.\n * @returns\n */\nexport function timeToIndex(time: number, averageInterval: number, groups: Group[]) {\n  let endIndex = groups.length;\n  // TODO: can do binary search to make this fast\n  for (let i = 0; i < groups.length; i++) {\n    if (time <= new Date(groups[i].id).getTime()) {\n      endIndex = i;\n      break;\n    }\n  }\n  const startIndex = endIndex - 1;\n\n  const startTime =\n    groups[startIndex] !== undefined\n      ? new Date(groups[startIndex].id).getTime()\n      : new Date(groups[0].id).getTime() - averageInterval;\n  const endTime =\n    groups[endIndex] !== undefined\n      ? new Date(groups[endIndex].id).getTime()\n      : new Date(groups[groups.length - 1].id).getTime() + averageInterval;\n\n  return startIndex + (time - startTime) / (endTime - startTime);\n}\n\n/**\n * Returns the time stamp for given index.\n * @param index The index.\n * @param averageInterval The average interval of the axis.\n * @param groups The groups array.\n * @returns\n */\nexport function indexToTime(index: number, averageInterval: number, groups: Group[]) {\n  const endIndex = Math.min(Math.max(Math.ceil(index), 0), groups.length);\n  const startIndex = endIndex - 1;\n  const startTime =\n    groups[startIndex] !== undefined\n      ? getTime(groups[startIndex].id)\n      : getTime(groups[0].id) - averageInterval;\n  const endTime =\n    groups[endIndex] !== undefined\n      ? getTime(groups[endIndex].id)\n      : getTime(groups[groups.length - 1].id) + averageInterval;\n\n  return startTime + (index - startIndex) * (endTime - startTime);\n}\n\nexport function getTime(uxTime: string) {\n  return new Date(uxTime).getTime();\n}\n\nexport function getCoordFromValue(\n  value: number,\n  minValue: number,\n  maxValue: number,\n  startCoord: number,\n  endCoord: number,\n  averageInterval: number,\n  groups: Group[],\n  timeAxisType: 'skipGaps' | 'mixedFrequency' | 'enabled'\n) {\n  let ratio;\n  if (timeAxisType === 'skipGaps') {\n    if (groups.length < 1) {\n      return startCoord;\n    }\n    const minVal = timeToIndex(minValue, averageInterval, groups);\n    const maxVal = timeToIndex(maxValue, averageInterval, groups);\n    const val = timeToIndex(value, averageInterval, groups);\n    ratio = (val - minVal) / (maxVal - minVal);\n  } else {\n    ratio = (value - minValue) / (maxValue - minValue);\n  }\n\n  return startCoord + ratio * (endCoord - startCoord);\n}\n\nexport function getValueFromCoord(\n  coord: number,\n  startCoord: number,\n  endCoord: number,\n  minValue: number,\n  maxValue: number,\n  averageInterval: number,\n  groups: Group[],\n  timeAxisType: 'skipGaps' | 'enabled' | 'mixedFrequency'\n) {\n  const ratio = (coord - startCoord) / (endCoord - startCoord);\n\n  if (timeAxisType === 'skipGaps') {\n    const minVal = timeToIndex(minValue, averageInterval, groups);\n    const maxVal = timeToIndex(maxValue, averageInterval, groups);\n    return indexToTime(minVal + ratio * (maxVal - minVal), averageInterval, groups);\n  } else return minValue + ratio * (maxValue - minValue);\n}\n\nexport function isoToNumber(dateString?: string) {\n  if (!dateString) {\n    return;\n  }\n  return new Date(dateString).getTime();\n}\n\n/**\n * Returns the average interval for the time axis.\n * @param groups The number of groups.\n * @param start The earliest time among all data points.\n * @param end The latest time among all data points.\n * @returns\n */\nexport function getAverageInterval(groups: Group[], start: number, end: number) {\n  if (end != start && groups.length > 1) {\n    return (end - start) / (groups.length - 1);\n  } else if (end - start > 0) {\n    return end - start;\n  }\n\n  return 6 * TIME_MINUTE;\n}\n\n/**\n * Returns the time axis info.\n * @param groups The groups array.\n * @param xAxis The xAxis props.\n * @param offset The start and end offset for the axis.\n * @param timeAxisRange The start and end of the time range.\n * @returns\n */\nexport function getTimeAxisInfo(\n  groups: Group[],\n  xAxis: TimeAxisProps = {},\n  offset: number,\n  timeAxisRange: { start?: number; end?: number }\n) {\n  let { start, end } = timeAxisRange;\n  const { viewportMin, viewportMax, viewportEndGroup, viewportStartGroup } = xAxis;\n\n  let minValue = isoToNumber((viewportMin || viewportStartGroup) as string);\n  let maxValue = isoToNumber((viewportMax || viewportEndGroup) as string);\n\n  // if start or end are undefined, use the application set viewport settings\n  if (start == undefined) {\n    start = minValue;\n  }\n\n  if (end == undefined) {\n    end = maxValue;\n  }\n\n  const averageInterval = getAverageInterval(groups, start!, end!);\n\n  const axisOffset = offset * averageInterval;\n  const globalMin = start! - axisOffset;\n  const globalMax = end! + axisOffset;\n\n  minValue = minValue || globalMin;\n  maxValue = maxValue || globalMax;\n\n  let startIndex = 0;\n  let endIndex = Math.max(0, groups.length - 1);\n\n  // TODO: since groups is expected to be sorted, can binary search here\n  groups.forEach((group: Group, index: number) => {\n    const timeStamp = new Date(group.id).getTime();\n\n    if (timeStamp < minValue!) {\n      startIndex = index;\n    }\n\n    if (timeStamp < maxValue!) {\n      endIndex = index;\n    }\n  });\n\n  return {\n    viewportMin: minValue,\n    viewportMax: maxValue,\n    viewportStartGroup,\n    viewportEndGroup,\n    startIndex,\n    endIndex,\n    min: globalMin,\n    max: globalMax,\n    averageInterval\n  };\n}\n\n/**\n * Returns the maximum of time stamps for the given dataset\n * and time axis type.\n * @param groups The array of groups.\n * @param series The array of series.\n * @param getDataItem The function that returns item for given seriesIndex and groupIndex.\n * @param timeAxisType The time axis type.\n * @returns\n */\nexport function getStartAndEndTime<K extends string | number, D extends ChartItemData<K>>(\n  groups: Group[],\n  series: ChartSeriesData<K, D>[],\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  timeAxis: TimeAxisProps\n) {\n  const range: { start?: number; end?: number } = {\n    start: Number.MAX_VALUE,\n    end: -Number.MAX_VALUE\n  };\n  const numGroups = groups.length;\n  const timeAxisType = timeAxis.timeAxisType;\n\n  if (timeAxisType != 'mixedFrequency' && numGroups > 0) {\n    range.start = isoToNumber(groups[0].id) as number;\n    range.end = isoToNumber(groups[numGroups - 1].id) as number;\n  } else {\n    // TODO: this is inefficient. We should precompute all the repeated necessary\n    // infomation and reuse whereever needed.\n    series.forEach((_: ChartSeriesData<K, D>, seriesIndex: number) => {\n      groups.forEach((_: Group, groupIndex) => {\n        const num = isoToNumber(getDataItem(seriesIndex, groupIndex)?.x);\n        if (num) {\n          range.start = Math.min(range.start!, num);\n          range.end = Math.max(range.end!, num);\n        }\n      });\n    });\n  }\n  // if we can't determine valid range, let the application set viewportMin and viewportMax\n  // or viewportStartGroup, viewportEndGroup to determine the axis range.\n  if (range.start === Number.MAX_VALUE && range.end === -Number.MAX_VALUE) {\n    range.start = undefined;\n    range.end = undefined;\n  }\n  return range;\n}\n\n/**\n * Treat missing values when there are large gaps in time axis.\n * @param times\n * @param granularity\n * @returns\n */\nfunction treatMissingValues(times: number[], granularity: number) {\n  let initialInterval;\n  const intervals: Set<number> = new Set();\n  let hasMissingValues = false;\n  let ret = times; // If there are no missing values, the original array will be returned.\n  const intervalsCache = [];\n\n  const timeLength = times.length;\n  let previousDate = new Date(times[0]);\n  for (let i = 1; i < timeLength; i++) {\n    // Calculate the current interval.\n    const currentDate = new Date(times[i]);\n    const currentInterval = calculateGranularInterval(previousDate, currentDate, granularity);\n    previousDate = currentDate;\n\n    // Cache the result so as to not calculate again while filling the missing values\n    // Since the cache is only used for filling in the missing values, and the operation\n    // is performed in the same order as this one, having the cache key in the format\n    // '1546318800000-1514782800000' should be fine.\n    intervalsCache.push(currentInterval);\n\n    // Proceed only if the current interval is greater than the current\n    // granularity level.\n    if (currentInterval <= 0) {\n      continue;\n    }\n\n    // Add the current interval to the set.\n    // The GCD of all the intervals will be used to fill in the missing the\n    // values.\n    intervals.add(currentInterval);\n\n    // During the initial iteration, we will not have any information on intervals,\n    // so, store the current interval and continue.\n    if (!initialInterval) {\n      initialInterval = currentInterval;\n      continue;\n    }\n\n    // Check if the current interval is regular.\n    if (currentInterval !== initialInterval) {\n      hasMissingValues = true;\n    }\n  }\n\n  // If missing values are present, treat them.\n  if (hasMissingValues) {\n    // Get the GCD of intervals and it will be the minimum interval in the new set of times\n    const minimumInterval = getGCDInterval([...intervals]);\n    ret = [];\n    ret.push(times[0]);\n    for (let i = 1; i < timeLength; i++) {\n      const currentValue = times[i];\n      let previousValue = times[i - 1];\n\n      // Retrieve the interval from cache.\n      // As we are looping through the same array the cache will have the interval value\n      // and will never be undefined.\n      const currentInterval = intervalsCache[i - 1];\n\n      // If no values are missing in this interval,\n      // add current value to the return array and continue.\n      // Note: Values are considered missing only when the interval is greater than the current granularity level (minimumInterval).\n      // Example: Jan 1, Jan 15, Feb 1, Mar 1, May 1, Jun 1\n      // Granularity = Month; Minimum Interval = 1 (1 month)\n      // Mar 1, May 1 => has one missing value: Apr\n      // Jan 1, Jan 15 => has no missing value\n      if (currentInterval <= minimumInterval) {\n        ret.push(currentValue);\n        continue;\n      }\n\n      // Calculate the interval at which the values are to be filled\n      const ratioOfCurrentIntervalToMinimumInterval = currentInterval / minimumInterval; // Should be a round number as minimumInterval is a divisor of currentInterval\n      const numMissingValues = ratioOfCurrentIntervalToMinimumInterval - 1;\n      const fillIntervalInMilliseconds = Math.round(\n        (currentValue - previousValue) / ratioOfCurrentIntervalToMinimumInterval\n      );\n\n      // Fill in the missing values\n      for (let j = 1; j <= numMissingValues; j++) {\n        previousValue += fillIntervalInMilliseconds;\n        ret.push(previousValue);\n      }\n      ret.push(currentValue); // Finally, add the current value\n      previousValue = currentValue; // Update the previous value\n    }\n  }\n  return ret;\n}\n\n/**\n * Calculates the granual interval.\n * @param previousDate\n * @param currentDate\n * @param granularity\n * @returns\n */\nfunction calculateGranularInterval(previousDate: Date, currentDate: Date, granularity: number) {\n  // Treat times for the day light savings.\n  const prevTimezoneOffset = previousDate.getTimezoneOffset();\n  const currentTimezoneOffset = currentDate.getTimezoneOffset();\n  const currentTime = currentDate.getTime();\n  const currentTimezoneOffsetCorrection = (prevTimezoneOffset - currentTimezoneOffset) * 1000 * 60;\n  if (currentTimezoneOffsetCorrection > 0) {\n    currentDate.setTime(currentTime + currentTimezoneOffsetCorrection);\n  }\n\n  let granularInterval;\n  if (granularity === TIME_YEAR_MIN)\n    granularInterval = currentDate.getFullYear() - previousDate.getFullYear();\n  else if (granularity === TIME_MONTH_MIN)\n    granularInterval =\n      12 * (currentDate.getFullYear() - previousDate.getFullYear()) +\n      (currentDate.getMonth() - previousDate.getMonth());\n  else\n    granularInterval = Math.round((currentDate.getTime() - previousDate.getTime()) / granularity);\n\n  if (currentTimezoneOffsetCorrection > 0) {\n    currentDate.setTime(currentTime); // reset to original value\n  }\n\n  return granularInterval;\n}\n\n/**\n * Returns the greatest common denominator.\n * @param interval1\n * @param interval2\n * @returns\n */\nfunction gcd(interval1: number, interval2: number): number {\n  if (interval1 === 0) return interval2;\n  return gcd(interval2 % interval1, interval1);\n}\n\n/**\n * Returns the gcd of the intervals.\n * @param intervals\n * @returns\n */\nfunction getGCDInterval(intervals: number[]) {\n  let result = intervals[0];\n  for (let i = 1; i < intervals.length; i++) {\n    result = gcd(result, intervals[i]);\n    if (result === 1) return 1;\n  }\n  return result;\n}\n\n/**\n * Retuns the tick label gap.\n * @param labelHeight The height of the label.\n * @param isHoriz Whether the axis is horizontal.\n * @returns\n */\nfunction getTickLabelGap(labelHeight: number, isHoriz: boolean) {\n  // legacy numbers.\n  return isHoriz ? labelHeight * 0.79 : labelHeight * 0.28;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ChartItemData, ChartSeriesData, DataAxisProps, Group } from '../UNSAFE_visTypes/chart';\nimport { BarSeriesData } from '../../UNSAFE_BarChart/barChart.types';\nimport { getTime } from '../../PRIVATE_Axis/timeAxis';\n\n/**\n * Returns the min and max value among the items rendered in the viewport.\n * @param series The array of chart series.\n * @param viewportMin The current viewport min.\n * @param viewportMax The current viewport max.\n * @returns\n */\nexport function getDataMinMax<K extends string | number, D extends ChartItemData<K>>(\n  series: BarSeriesData<K, D>[],\n  groups: Group[],\n  xStartIndex: number,\n  xEndIndex: number,\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  isStacked: boolean,\n  isLog: boolean,\n  hiddenSet: Set<K>,\n  hideAndShowBehavior: 'none' | 'withRescale' | 'withoutRescale'\n) {\n  let dataMin = Number.MAX_VALUE;\n  let dataMax = -Number.MAX_VALUE;\n  const idToDataMap = new Map<K, D>();\n  for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n    let posCumulValue = 0;\n    let negCumulValue = 0;\n\n    series.forEach((_: BarSeriesData<K, D>, seriesIndex: number) => {\n      const item = getDataItem(seriesIndex, groupIndex);\n      if (!item || item.value == null) {\n        return;\n      }\n      idToDataMap.set(item.id, item);\n      if (groupIndex >= xStartIndex && groupIndex <= xEndIndex) {\n        const skipData =\n          item?.id != null && hiddenSet.has(item.id) && hideAndShowBehavior === 'withRescale';\n        if (skipData || (item.value <= 0 && isLog)) {\n          return;\n        }\n        if (isStacked) {\n          posCumulValue += item.value > 0 ? item.value : 0;\n          negCumulValue += item.value < 0 ? item.value : 0;\n          dataMin = Math.min(isLog ? posCumulValue : negCumulValue, dataMin);\n          dataMax = Math.max(posCumulValue, dataMax);\n        } else {\n          dataMin = Math.min(dataMin, item.value);\n          dataMax = Math.max(dataMax, item.value);\n        }\n      }\n    });\n  }\n  return { dataMin, dataMax, idToDataMap };\n}\n\n/**\n * Returns the dataMin and dataMax, used for axis extend calculations, from the chart data.\n * @param series\n * @param hiddenIds\n * @param xStartIndex\n * @param xEndIndex\n * @param yAxis\n * @returns\n */\nexport function getDataExtent<K extends string | number, D extends ChartItemData<K>>(\n  series: BarSeriesData<K, D>[],\n  groups: Group[],\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  xStartIndex: number,\n  xEndIndex: number,\n  isStacked: boolean,\n  hiddenSet: Set<K>,\n  hideAndShowBehavior: 'none' | 'withRescale' | 'withoutRescale',\n  yAxis?: DataAxisProps\n) {\n  let dataMin = yAxis?.dataMin;\n  let dataMax = yAxis?.dataMax;\n  //TODO: For performance optimization we can return early if we donot need idToDataMap i.e when selectionMode is off.\n  // if (dataMin != null && dataMax != null) {\n  //   return { dataMin, dataMax };\n  // }\n  const data = getDataMinMax<K, D>(\n    series,\n    groups,\n    xStartIndex,\n    xEndIndex,\n    getDataItem,\n    isStacked,\n    yAxis?.scale === 'log',\n    hiddenSet,\n    hideAndShowBehavior\n  );\n\n  if (dataMin == null) {\n    dataMin = data.dataMin;\n  }\n\n  if (dataMax == null) {\n    dataMax = data.dataMax;\n  }\n  return { dataMax, dataMin, idToDataMap: data.idToDataMap };\n}\n\n/**\n * For a given groupIndex gIndex, and seriesIndex sIndex, returns the next groupIndex that has not null data.\n * @param gIndex The groupIndex.\n * @param sIndex The seriesIndex.\n * @param groups The groups arrray.\n * @param getDataItem The function that returns data item for given seriesIndex and groupIndex.\n * @returns\n */\nfunction findNextGroupWithData<D>(\n  gIndex: number,\n  sIndex: number,\n  groups: Group[],\n  getDataItem: (sIndex: number, gIndex: number) => D | undefined\n) {\n  let right = gIndex;\n  while (right < groups.length) {\n    const hasData = !!getDataItem(sIndex, right);\n    if (hasData) {\n      return right;\n    }\n    right += 1;\n  }\n  return -1;\n}\n\n/**\n * For a given groupIndex gIndex, and seriesIndex sIndex, returns the prev groupIndex that has not null data.\n * @param gIndex The groupIndex.\n * @param sIndex The seriesIndex.\n * @param groups The groups arrray.\n * @param getDataItem The function that returns data item for given seriesIndex and groupIndex.\n * @returns\n */\nfunction findPreviousGroupWithData<D>(\n  gIndex: number,\n  sIndex: number,\n  getDataItem: (sIndex: number, gIndex: number) => D | undefined\n) {\n  let left = gIndex;\n  while (left >= 0) {\n    const hasData = !!getDataItem(sIndex, left);\n    if (hasData) {\n      return left;\n    }\n    left -= 1;\n  }\n  return -1;\n}\n\n/**\n * Finds the nearest data group/item for the given x axis coordinate.\n * @param x The x coordinate.\n * @param groups The groups array.\n * @param series The series array.\n * @param getDataItem The function that returns data item for given seriesIndex and groupIndex.\n * @returns\n */\nexport function findNearestRegularAxisIndex<K, D>(\n  x: number,\n  groups: Group[],\n  series: ChartSeriesData<K, D>[],\n  getDataItem: (sIndex: number, gIndex: number) => D | undefined\n) {\n  const keyFunc = (index: number) => getTime(groups[index].id);\n\n  if (groups.length < 2) {\n    return 0;\n  }\n\n  if (keyFunc(0) > x) {\n    return Math.min(\n      ...series.map((_, sIndex) => findNextGroupWithData<D>(0, sIndex, groups, getDataItem))\n    );\n  }\n\n  if (keyFunc(groups.length - 1) < x) {\n    return Math.max(\n      ...series.map((_, sIndex) =>\n        findPreviousGroupWithData(groups.length - 1, sIndex, getDataItem)\n      )\n    );\n  }\n\n  const groupIndex = findGroup(0, groups.length - 1, x, keyFunc);\n\n  const prevIndex = Math.max(\n    ...series.map((_, sIndex) => findPreviousGroupWithData(groupIndex, sIndex, getDataItem))\n  );\n\n  if (prevIndex === groupIndex) return prevIndex;\n\n  const nextIndex = Math.min(\n    ...series.map((_, sIndex) => findNextGroupWithData<D>(groupIndex, sIndex, groups, getDataItem))\n  );\n\n  if (keyFunc(nextIndex) - x < x - keyFunc(prevIndex)) {\n    return nextIndex;\n  }\n  return prevIndex;\n}\n\n/**\n * Finds the nearest data group/item for the given x axis coordinate in mixed frequency time axis chart.\n * @param x The x axis coordinate\n * @param groups The chart groups.\n * @param series The chart series.\n * @param getDataItem The function that returns data item for each series and groups.\n */\nexport function getNearestMixedFrequencyDataItem<K, D extends ChartItemData<K>>(\n  target: number,\n  series: ChartSeriesData<K, D>[],\n  groups: Group[],\n  getDataItem: (seriesIndex: number, groupIndex: number) => ChartItemData<K> | undefined\n) {\n  /**\n   * first find the data items in each series closest to the given value and\n   * then find the closest among them.\n   * TODO: make this O(log(n))\n   */\n  return series.map((_, seriesIndex) => {\n    let min = Number.MAX_VALUE;\n    let minIndex = 0;\n    for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n      const x = getDataItem(seriesIndex, groupIndex)?.x;\n      if (!x) {\n        continue;\n      }\n      const time = getTime(x);\n      const dist = Math.abs(target - time);\n      if (dist < min) {\n        min = dist;\n        minIndex = groupIndex;\n      }\n    }\n    return { seriesIndex, groupIndex: minIndex };\n  });\n}\n\n/**\n * For a given target value, binary searches the index between min and max. The keyFunc returns the\n * value for each given index.\n * @param min The minimum index to search.\n * @param max The maximum index to search.\n * @param target The target value to find the neareast index to.\n * @param keyFunc The function that returns the target value for each given index.\n * @returns\n */\nfunction findGroup(min: number, max: number, target: number, keyFunc: (index: number) => number) {\n  let left = min;\n  let right = max;\n\n  const foundIndex = (ll: number, rr: number) => {\n    return rr - ll === 1 && keyFunc(ll) <= target && target <= keyFunc(rr);\n  };\n\n  let moveRight = 0;\n  let step = Math.floor((right - left) / 2);\n  while (!foundIndex(left, right)) {\n    const newIndex = moveRight ? Math.floor(left + step) : Math.ceil(right - step);\n    const diff = target - keyFunc(newIndex);\n    if (0 <= diff) {\n      left = newIndex;\n      moveRight = moveRight ? 0 : 1;\n    } else {\n      right = newIndex;\n    }\n    step = Math.floor((right - left) / 2);\n  }\n  return target - keyFunc(left) < keyFunc(right) - target ? left : right;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getTitleProps } from './utils/titleUtils';\nimport { ScaleLinear } from '../utils/PRIVATE_chartUtils';\nimport { AxisPosition, Group, GroupAxisProps } from '../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../utils/UNSAFE_visTypes/common';\nimport { AXIS_DEFAULTS } from './utils/axisDefaults';\nimport { GetTextDimensionsType } from './../hooks/PRIVATE_useTextDimensions';\nimport { getGroupAxisLabelsInfo, getTickLabelInfo, updateLabelsDims } from './utils/labelUtils';\nimport { getAxisMaxSize, getAxisRange, getSafeSkips, getTickLabelAnchor } from './utils/axisUtils';\n\n/**\n * Retuns the groups axis labels.\n * @param groups The groups array.\n * @param startIndex The viewport start index.\n * @param endIndex The viewport end index.\n * @returns\n */\nfunction getGroupAxisLabels(groups: Group[], startIndex: number, endIndex: number) {\n  const ticks = [];\n  for (let i = startIndex; i <= endIndex; i++) {\n    ticks.push(groups[i].name || groups[i].id);\n  }\n  return ticks;\n}\n\n/**\n * Retuns the info about group axis.\n * @param groups The groups array.\n * @param xAxis The xAxis props.\n * @param offset The start and end offset for the chart.\n * @returns\n */\nexport function getGroupAxisInfo(groups: Group[], xAxis: GroupAxisProps = {}, offset: number) {\n  let { viewportMin, viewportMax, viewportEndGroup, viewportStartGroup } = xAxis;\n\n  if (viewportMin != null) {\n    viewportStartGroup = groups[Math.max(0, Math.ceil(viewportMin))].id;\n  }\n\n  if (viewportStartGroup != null && viewportMin == null) {\n    viewportMin = groups.findIndex((value: Group) => value.id === viewportStartGroup);\n  }\n\n  if (viewportMin == null) {\n    viewportMin = -1 * offset;\n    viewportStartGroup = groups[0]?.id;\n  }\n\n  if (viewportMax != null) {\n    viewportEndGroup = groups[Math.min(groups.length - 1, Math.floor(viewportMax))].id;\n  }\n\n  if (viewportEndGroup != null && viewportMax == null) {\n    viewportMax = groups.findIndex((value: Group) => value.id === viewportEndGroup);\n  }\n\n  if (viewportMax == null) {\n    viewportMax = groups.length - 1 + offset;\n    viewportEndGroup = groups[Math.floor(viewportMax)]?.id;\n  }\n\n  return {\n    min: -1 * offset,\n    max: groups.length - offset,\n    viewportMin,\n    viewportMax,\n    viewportStartGroup,\n    viewportEndGroup,\n    startIndex: Math.max(0, Math.ceil(viewportMin!)),\n    endIndex: Math.min(Math.floor(viewportMax), viewportMax!)\n  };\n}\n\n/**\n * The function that returns the x axis properties.\n * @param groupAxisIno The GroupAxisInfo.\n * @param groupAxis The groupAxis props.\n * @param groups The chart groups.\n * @param position The position of axis in the given space.\n * @param availSpace The available space.\n * @param isRtl Whether the reading direction is right to left.\n * @param getTextDimensions Function for text measurement.\n * @returns\n */\nexport function getGroupAxisProps(\n  groups: Group[],\n  position: AxisPosition,\n  availSpace: Dimension,\n  isRtl: boolean,\n  viewportMin: number,\n  viewportMax: number,\n  startIndex: number,\n  endIndex: number,\n  isDomainFlipped: boolean,\n  groupAxis?: GroupAxisProps,\n  axisFontSize?: string,\n  getTextDimensions?: GetTextDimensionsType\n) {\n  const isHoriz = position === 'top' || position === 'bottom';\n  const axisMaxDim = getAxisMaxSize(availSpace, isHoriz, groupAxis?.size);\n  const titleStyle = { fontSize: axisFontSize, ...groupAxis?.titleStyle };\n\n  const { titleDim, ...titleProps } = getTitleProps(\n    groupAxis?.title,\n    titleStyle,\n    axisMaxDim,\n    availSpace,\n    position,\n    isRtl,\n    getTextDimensions\n  );\n\n  const { width: titleWidth, height: titleHeight } = titleProps.dims!;\n  const isTitleRendered = titleWidth > 0 && titleHeight > 0;\n  const axisDim = isTitleRendered ? titleDim + AXIS_DEFAULTS.titleGap : 0;\n  const isRotated = position === 'left' || position === 'right';\n\n  if (isTitleRendered) {\n    if (isRotated) {\n      availSpace.width -= axisDim;\n      availSpace.x += position === 'left' ? axisDim : 0;\n    } else {\n      availSpace.height -= axisDim;\n      availSpace.y += position === 'top' ? axisDim : 0;\n    }\n  }\n\n  const [start, end] = getAxisRange(availSpace, position, isRtl);\n  const domain: [number, number] = isDomainFlipped\n    ? [viewportMax, viewportMin]\n    : [viewportMin, viewportMax];\n  const scale = new ScaleLinear(domain, [start, end]);\n  const groupWidth = Math.abs(end - start) / (viewportMax - viewportMin);\n\n  const tickLabelStyle = {\n    fontSize: axisFontSize,\n    fill: groupAxis?.tickLabel?.style?.color,\n    ...groupAxis?.tickLabel?.style,\n    textAnchor: getTickLabelAnchor(position, isRtl),\n    dominantBaseline: 'middle'\n  };\n\n  let isLabelRendered = groupAxis?.tickLabel?.isRendered != false;\n\n  const labelsInView = getGroupAxisLabels(groups, startIndex, endIndex);\n\n  const numOfSafeSkips = getSafeSkips(groupWidth, tickLabelStyle, getTextDimensions);\n\n  const maxLabelDim = axisMaxDim - axisDim - AXIS_DEFAULTS.labelGap;\n\n  const isWrapAllowed = tickLabelStyle.whiteSpace != 'nowrap';\n\n  const getLabelInfo = (\n    label: string | undefined,\n    index: number,\n    isRotated: boolean,\n    allowTruncate: boolean,\n    isWrapAllowed: boolean\n  ) => {\n    const rangeValue = scale.transform(index + startIndex);\n    return getTickLabelInfo(\n      rangeValue,\n      label,\n      tickLabelStyle,\n      isHoriz,\n      isRotated,\n      isWrapAllowed,\n      allowTruncate,\n      isHoriz ? groupWidth : maxLabelDim,\n      isHoriz ? maxLabelDim : groupWidth,\n      availSpace,\n      getTextDimensions\n    );\n  };\n\n  const autoRotate = groupAxis?.tickLabel?.autoRotate != false;\n  const { maxWidth, maxHeight, tickLabels } = getGroupAxisLabelsInfo(\n    labelsInView,\n    getLabelInfo,\n    isHoriz,\n    autoRotate,\n    isWrapAllowed,\n    numOfSafeSkips\n  );\n\n  isLabelRendered =\n    isLabelRendered && isHoriz\n      ? maxHeight + AXIS_DEFAULTS.labelGap < axisMaxDim - axisDim\n      : maxWidth + AXIS_DEFAULTS.labelGap < axisMaxDim - axisDim;\n\n  const getAxisPos = (index: number) => {\n    return scale.transform(startIndex + index);\n  };\n\n  let labelDims = 0;\n  if (isLabelRendered) {\n    updateLabelsDims(maxWidth, maxHeight, tickLabels, getAxisPos, availSpace, position);\n    labelDims = isHoriz ? maxHeight + AXIS_DEFAULTS.labelGap : maxWidth + AXIS_DEFAULTS.labelGap;\n  }\n\n  tickLabels.forEach((label) => {\n    label['dataProps'] = {\n      'data-oj-object': 'group',\n      'data-oj-group-index': label.index.toString(),\n      'data-oj-text': label.isTruncated ? label.text : undefined\n    };\n  });\n\n  return {\n    title: isTitleRendered ? groupAxis?.title : undefined,\n    titleProps: isTitleRendered ? titleProps : undefined,\n    titleStyle,\n    tickLabels,\n    tickLabelStyle,\n    axisDim: isTitleRendered ? labelDims + axisDim : labelDims,\n    scale,\n    groupWidth\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  DataAxisProps,\n  Group,\n  GroupAxisProps,\n  TimeAxisProps,\n  AxisPosition,\n  ChartItemData,\n  ChartSeriesData,\n  Scale\n} from '../UNSAFE_visTypes/chart';\nimport { Dimension } from '../UNSAFE_visTypes/common';\nimport { BarSeriesData } from '../../UNSAFE_BarChart/barChart.types';\nimport { DataAxisInfo } from '../../PRIVATE_Axis/dataAxisInfo';\nimport { getDataAxisProps } from '../../PRIVATE_Axis/utils/dataAxisUtil';\nimport {\n  findNearestRegularAxisIndex,\n  getDataExtent,\n  getNearestMixedFrequencyDataItem\n} from './dataUtils';\nimport { getAxesPosition } from '../../PRIVATE_Axis/utils/axisUtils';\nimport {\n  getStartAndEndTime,\n  getTime,\n  getTimeAxisInfo,\n  getTimeAxisProps\n} from '../../PRIVATE_Axis/timeAxis';\nimport type { GetTextDimensionsType } from '../../hooks/PRIVATE_useTextDimensions';\nimport { cloneDimension } from '../../utils/PRIVATE_visLayoutUtils';\nimport { getGroupAxisInfo, getGroupAxisProps } from '#PRIVATE_Axis/groupAxis';\n\nconst OUTER_GAP_WIDTH = 10;\nconst OUTER_GAP_HEIGHT = 8;\nconst MIN_SCROLL_SIZE = 12;\nconst SCROLL_GAP = 6;\n\n/**\n * Returns the chart layout info.\n * @returns\n */\nexport function getLayoutInfo<K extends string | number, D extends ChartItemData<K>>(\n  series: BarSeriesData<K, D>[],\n  groups: Group[],\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  xAxis: GroupAxisProps | TimeAxisProps | undefined,\n  yAxis: DataAxisProps | undefined,\n  availSpace: Dimension,\n  hiddenSet: Set<K>,\n  hideAndShowBehavior: 'none' | 'withRescale' | 'withoutRescale',\n  isHoriz: boolean,\n  isRtl: boolean,\n  isStacked: boolean,\n  axisFontSize: string,\n  offset: number,\n  locale: string,\n  getTextDimensions?: GetTextDimensionsType\n) {\n  const isTimeAxis = (xAxis as TimeAxisProps)?.timeAxisType != null;\n  const { xAxisPosition, yAxisPosition } = getAxesPosition(yAxis, isHoriz, isRtl);\n  let xAxisInfo;\n  if (isTimeAxis) {\n    const timeAxisRange = getStartAndEndTime(groups, series, getDataItem, xAxis as TimeAxisProps);\n    xAxisInfo = getTimeAxisInfo(groups, xAxis as TimeAxisProps, offset, timeAxisRange);\n  } else {\n    xAxisInfo = getGroupAxisInfo(groups, xAxis as GroupAxisProps, offset);\n  }\n\n  const { dataMax, dataMin, idToDataMap } = getDataExtent<K, D>(\n    series,\n    groups,\n    getDataItem,\n    xAxisInfo.startIndex,\n    xAxisInfo.endIndex,\n    isStacked,\n    hiddenSet,\n    hideAndShowBehavior,\n    yAxis\n  );\n\n  const yAxisInfo = new DataAxisInfo({ ...yAxis, dataMax, dataMin });\n  const { axisDim: yDim } = getDataAxisProps(\n    yAxisPosition,\n    cloneDimension(availSpace),\n    isRtl,\n    locale,\n    yAxis,\n    yAxisInfo,\n    axisFontSize,\n    getTextDimensions\n  );\n\n  const isXAxisHoriz = xAxisPosition === 'bottom';\n\n  // get updated available space for x axis.\n  const { xSpace: xAvailSpace } = getSpaces(\n    availSpace,\n    xAxisPosition,\n    yAxisPosition,\n    isXAxisHoriz ? availSpace.height : availSpace.width,\n    yDim\n  );\n\n  const {\n    axisDim: xMaxDim,\n    scale: xScale,\n    groupWidth,\n    ...xProps\n  } = isTimeAxis\n    ? getTimeAxisProps(\n        groups,\n        xAxisPosition,\n        xAvailSpace,\n        xAxisInfo.viewportMin,\n        xAxisInfo.viewportMax,\n        // @ts-ignore\n        xAxisInfo.averageInterval,\n        isRtl,\n        xAxis as TimeAxisProps,\n        axisFontSize,\n        getTextDimensions\n      )\n    : getGroupAxisProps(\n        groups,\n        xAxisPosition,\n        xAvailSpace,\n        isRtl,\n        xAxisInfo.viewportMin,\n        xAxisInfo.viewportMax,\n        xAxisInfo.startIndex,\n        xAxisInfo.endIndex,\n        isHoriz,\n        xAxis as GroupAxisProps,\n        axisFontSize,\n        getTextDimensions\n      );\n\n  // recalculate y axis props after the x axis.\n  const { ySpace: newYSpace } = getSpaces(\n    availSpace,\n    xAxisPosition,\n    yAxisPosition,\n    xMaxDim!,\n    isXAxisHoriz ? availSpace.width : availSpace.height\n  );\n\n  const newYProps = getDataAxisProps(\n    yAxisPosition,\n    newYSpace,\n    isRtl,\n    locale,\n    yAxis,\n    yAxisInfo,\n    axisFontSize,\n    getTextDimensions\n  );\n\n  const { axisDim: yMaxDim, scale: yScale, ...yProps } = newYProps;\n\n  const { plotAreaSpace } = getSpaces(availSpace, xAxisPosition, yAxisPosition, xMaxDim!, yMaxDim);\n\n  return {\n    xViewportExtent: { viewportMin: xAxisInfo.viewportMin, viewportMax: xAxisInfo.viewportMax },\n    xIndexExtent: { startIndex: xAxisInfo.startIndex, endIndex: xAxisInfo.endIndex },\n    yViewportExtent: yAxisInfo.getAxisViewport(),\n    yAxisExtent: yAxisInfo.getAxisExtent(),\n    xAxisExtent: { min: xAxisInfo.min, max: xAxisInfo.max },\n    xProps,\n    xScale,\n    xAxisPosition,\n    groupWidth,\n    yProps,\n    yScale,\n    yMaxDim,\n    yAxisPosition,\n    yMajorTicks: yAxisInfo.getTicks(),\n    yMinorTicks: yAxisInfo.getMinorTicks(),\n    plotAreaSpace,\n    idToDataMap\n  };\n}\n\n/**\n * Returns the available space for x axis and y axis.\n * @param availSpace The available space of the chart.\n * @param xAxisPosition The position of x axis.\n * @param yAxisPosition The position of y axis.\n * @param xMaxDim The max dimension of x axis.\n * @param yMaxDim The max dimension of y axis.\n * @returns\n */\nexport function getSpaces(\n  availSpace: Dimension,\n  xAxisPosition: AxisPosition,\n  yAxisPosition: AxisPosition,\n  xMaxDim: number,\n  yMaxDim: number\n) {\n  const isXHoriz = xAxisPosition === 'bottom' || xAxisPosition === 'top';\n  const isYLeft = yAxisPosition === 'left';\n\n  let xSpace: Dimension;\n  let ySpace: Dimension;\n  let plotAreaSpace: Dimension;\n\n  if (isXHoriz) {\n    xSpace = getHorizSpace(\n      availSpace,\n      xAxisPosition,\n      isYLeft ? yMaxDim : 0,\n      !isYLeft ? yMaxDim : 0,\n      xMaxDim\n    );\n    ySpace = getVertSpace(\n      availSpace,\n      yAxisPosition as 'left' | 'right',\n      xAxisPosition === 'bottom' ? xMaxDim : 0,\n      xAxisPosition === 'top' ? xMaxDim : 0,\n      yMaxDim\n    );\n    plotAreaSpace = {\n      x: xSpace.x,\n      y: ySpace.y,\n      width: xSpace.width,\n      height: ySpace.height\n    };\n  } else {\n    xSpace = getVertSpace(\n      availSpace,\n      xAxisPosition,\n      yAxisPosition === 'bottom' ? yMaxDim : 0,\n      yAxisPosition === 'bottom' ? 0 : yMaxDim,\n      xMaxDim\n    );\n    ySpace = getHorizSpace(\n      availSpace,\n      yAxisPosition as 'top' | 'bottom',\n      xAxisPosition === 'left' ? xMaxDim : 0,\n      xAxisPosition === 'left' ? 0 : xMaxDim,\n      yMaxDim\n    );\n\n    plotAreaSpace = {\n      x: ySpace.x,\n      y: xSpace.y,\n      width: ySpace.width,\n      height: xSpace.height\n    };\n  }\n\n  return { xSpace, ySpace, plotAreaSpace };\n}\n\n/**\n * Returns the vertical sub section of given available space.\n * @param availSpace The available space.\n * @param position The position of the vertical section.\n * @param bottomOffset The bottom offset of the vertical section.\n * @param topOffset The top offset of the vertical section.\n * @param width The width of the section.\n * @returns\n */\nexport function getVertSpace(\n  availSpace: Dimension,\n  position: 'left' | 'right',\n  bottomOffset: number,\n  topOffset: number,\n  width: number\n) {\n  return {\n    x: position === 'left' ? availSpace.x : availSpace.x + availSpace.width - width,\n    width: width,\n    y: availSpace.y + topOffset,\n    height: availSpace.height - bottomOffset - topOffset\n  };\n}\n\n/**\n * Returns the horizontal sub section of given available space.\n * @param availSpace The available space.\n * @param position The position of the horizontal section.\n * @param leftOffset The left offset of the horizontal section.\n * @param rightOffset The right offset of the horizontal section.\n * @param height The height of the section.\n * @returns\n */\nexport function getHorizSpace(\n  availSpace: Dimension,\n  position: 'top' | 'bottom',\n  leftOffset: number,\n  rightOffset: number,\n  height: number\n) {\n  return {\n    x: availSpace.x + leftOffset,\n    width: availSpace.width - leftOffset - rightOffset,\n    y: position === 'top' ? availSpace.y : availSpace.y + availSpace.height - height,\n    height: height\n  };\n}\n\n/**\n * Returns the outer spacing for the chart.\n * @param width The height of the chart.\n * @param height The width of the chart.\n * @returns\n */\nexport function getOuterGaps(width: number, height: number) {\n  const widthRatio = Math.min(width / 400, 1);\n  const heightRatio = Math.min(height / 300, 1);\n  return {\n    width: widthRatio * OUTER_GAP_WIDTH,\n    height: heightRatio * OUTER_GAP_HEIGHT\n  };\n}\n\n/**\n * Returns the default available space for chart.\n * @param width The width of the chart.\n * @param height The height of the chart.\n * @returns\n */\nexport function getAvailSpace(width: number, height: number) {\n  const gaps = getOuterGaps(width, height);\n  return {\n    width: width - 2 * gaps.width,\n    height: height - 2 * gaps.height,\n    x: gaps.width,\n    y: gaps.height\n  };\n}\n\n/**\n * Retuns the available space for the scrollbar.\n * @param availSpace\n * @param zoomAndScroll\n * @param xAxisPosition\n * @returns\n */\nexport function getScrollBarSpace(\n  availSpace: Dimension,\n  zoomAndScroll: 'live' | 'off',\n  xAxisPosition: AxisPosition\n) {\n  const dims = { x: 0, y: 0, height: 0, width: 0 };\n  const avSpace = cloneDimension(availSpace);\n  if (zoomAndScroll === 'off') {\n    return { scrollDims: dims, availSpace: avSpace };\n  }\n  if (xAxisPosition === 'left') {\n    dims.x = availSpace.x;\n    dims.y = availSpace.y;\n    dims.width = MIN_SCROLL_SIZE;\n    dims.height = availSpace.height;\n\n    avSpace.x += dims.width + SCROLL_GAP;\n    avSpace.width -= dims.width + SCROLL_GAP;\n  } else if (xAxisPosition === 'right') {\n    dims.x = availSpace.x + availSpace.width - MIN_SCROLL_SIZE;\n    dims.width = MIN_SCROLL_SIZE;\n    dims.height = availSpace.height;\n    dims.y = availSpace.y;\n\n    avSpace.width -= dims.width + SCROLL_GAP;\n  } else {\n    dims.x = availSpace.x;\n    dims.y = availSpace.y + availSpace.height - MIN_SCROLL_SIZE;\n    dims.height = MIN_SCROLL_SIZE;\n    dims.width = availSpace.width;\n\n    avSpace.height -= dims.height + SCROLL_GAP;\n  }\n  return { scrollDims: dims, availSpace: avSpace };\n}\n\n/**\n * Updates the scrollbar space\n * @param availSpace\n * @param isHoriz\n * @param yMaxDim\n */\nexport function updateScrollBarSpace(\n  availSpace: Dimension,\n  isHoriz: boolean,\n  isRtl: boolean,\n  yMaxDim: number\n) {\n  const newDims = cloneDimension(availSpace);\n  if (isHoriz) {\n    newDims.width -= yMaxDim;\n    newDims.x += isRtl ? 0 : yMaxDim;\n  } else {\n    newDims.height -= yMaxDim;\n  }\n  return newDims;\n}\n\nexport function findNearestDataPoint<K extends string | number, D extends ChartItemData<K>>(\n  series: ChartSeriesData<K, D>[],\n  groups: Group[],\n  xScale: Scale,\n  yScale: Scale,\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  isStacked: boolean,\n  getSeriesDataInfo: (seriesIndex: number) => { offset: number; dataWidth: number },\n  getYCoord: (\n    value: number,\n    yScale: Scale,\n    isStacked: boolean,\n    isLog: boolean,\n    dataItemGaps: number,\n    negCummValue: number,\n    posCummValue: number\n  ) => number,\n  isLog: boolean,\n  dataItemGaps: number,\n  hiddenIds?: Set<number | string>,\n  timeAxisType?: 'enabled' | 'mixedFrequency' | 'skipGaps'\n) {\n  return (x: number, y: number) => {\n    let candidates: { seriesIndex: number; groupIndex: number }[] = [];\n    let neareastGroupIndex = Math.round(x);\n    let groupCenter = xScale.transform(neareastGroupIndex);\n    const isMixedFrequency = timeAxisType === 'mixedFrequency';\n\n    if (timeAxisType === 'enabled' || timeAxisType === 'skipGaps') {\n      neareastGroupIndex = findNearestRegularAxisIndex<K, D>(x, groups, series, getDataItem);\n      groupCenter = xScale.transform(getTime(groups[neareastGroupIndex].id));\n    }\n    candidates = series.map((_, sIndex) => ({\n      groupIndex: neareastGroupIndex,\n      seriesIndex: sIndex\n    }));\n\n    if (isMixedFrequency) {\n      candidates = getNearestMixedFrequencyDataItem<K, D>(x, series, groups, getDataItem);\n    }\n\n    let posCummValue = 0;\n    let negCummValue = 0;\n\n    let minDistance = Number.MAX_VALUE;\n    let minDistanceDims2 = Number.MAX_VALUE;\n    let minSeriesIndex = 0;\n    let minSeriesCenter = groupCenter;\n\n    let yCoord;\n\n    // Currently this logic is aware of various chart settings. Another approach is\n    // purely geometric (save dims of each chart item and sort by some distance measure).\n    // Not sure which one is faster but can consider for performance evaluation.\n    candidates.forEach(({ seriesIndex, groupIndex }) => {\n      const item = getDataItem(seriesIndex, groupIndex);\n      if (!item || hiddenIds?.has(item.id!) || item.value == null || (isLog && item.value <= 0)) {\n        return;\n      }\n\n      let dist = 0;\n      let dist2 = 0;\n\n      if (isMixedFrequency) {\n        dist = Math.abs(xScale.transform(getTime(item?.x!)) - xScale.transform(x));\n        dist2 = Math.abs(yScale.transform(item.value) - yScale.transform(y));\n      } else if (!isStacked) {\n        const { offset, dataWidth } = getSeriesDataInfo(seriesIndex);\n        const seriesCenter = offset + groupCenter + dataWidth / 2;\n        if (dataWidth === 0) {\n          dist = Math.abs(yScale.transform(item.value) - yScale.transform(y));\n        } else {\n          dist = Math.abs(xScale.transform(x) - seriesCenter);\n          if (dist < minDistance) {\n            minSeriesCenter = seriesCenter;\n          }\n        }\n      } else {\n        const itemY = (item.value < 0 ? negCummValue : posCummValue) + item.value / 2;\n        dist = Math.abs(y - itemY);\n      }\n\n      if (dist < minDistance) {\n        minDistance = dist;\n        minSeriesIndex = seriesIndex;\n        neareastGroupIndex = groupIndex;\n        yCoord = getYCoord(\n          item.value,\n          yScale,\n          isStacked,\n          isLog,\n          dataItemGaps,\n          negCummValue,\n          posCummValue\n        );\n        if (isMixedFrequency) {\n          minDistanceDims2 = dist2;\n        }\n      } else if (dist === minDistance) {\n        if (isMixedFrequency && dist2 < minDistanceDims2) {\n          minDistance = dist;\n          minSeriesIndex = seriesIndex;\n          neareastGroupIndex = groupIndex;\n          minDistanceDims2 = dist2;\n          yCoord = getYCoord(\n            item.value,\n            yScale,\n            isStacked,\n            isLog,\n            dataItemGaps,\n            negCummValue,\n            posCummValue\n          );\n        }\n      }\n\n      if (isStacked) {\n        posCummValue += item.value > 0 ? item.value : 0;\n        negCummValue += item.value < 0 ? item.value : 0;\n      }\n    });\n    return {\n      seriesIndex: minSeriesIndex,\n      groupIndex: neareastGroupIndex,\n      y: yCoord,\n      x: isMixedFrequency\n        ? xScale.transform(getTime(getDataItem(minSeriesIndex, neareastGroupIndex)?.x!))\n        : isStacked\n        ? groupCenter\n        : minSeriesCenter\n    };\n  };\n}\n\nexport function getGroupCenterCoord<K extends string | number, D extends ChartItemData<K>>(\n  group: Group,\n  groupIndex: number,\n  xScale: Scale,\n  item: D,\n  timeAxisType?: 'enabled' | 'skipGaps' | 'mixedFrequency'\n) {\n  if (!timeAxisType) {\n    return xScale.transform(groupIndex);\n  } else if (timeAxisType === 'mixedFrequency') {\n    return xScale.transform(new Date(item.x!).getTime());\n  } else {\n    return xScale.transform(new Date(group.id).getTime());\n  }\n}\n\nexport function getMixedFreqGroupCenter<K extends string | number, D extends ChartItemData<K>>(\n  xScale: Scale,\n  item: D\n) {\n  return xScale.transform(new Date(item.x!).getTime());\n}\n"],"names":[],"mappings":"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"}