{"version":3,"file":"MultilineText-03e1e46c.js","sources":["../../src/PRIVATE_VisSVGText/SinglelineText.tsx","../../src/PRIVATE_VisSVGText/MultilineText.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\n\ntype SVGTextAttrs = JSXInternal.SVGAttributes<SVGTextElement>;\n\ntype TextProps = {\n  text: string;\n  props: SVGTextAttrs;\n  dataProps?: Record<`data-oj-${string}`, string | undefined>;\n  id?: string;\n  class?: string;\n  style?: SVGTextAttrs['style'];\n  isRotated: boolean;\n  isRtl: boolean;\n  isTruncated?: boolean;\n};\n\nexport function SinglelineText({\n  text,\n  style,\n  dataProps,\n  props,\n  id,\n  isRotated,\n  isRtl,\n  isTruncated,\n  ...otherProps\n}: TextProps) {\n  const { x, y } = props;\n  const transform = isRotated\n    ? `matrix(0, ${isRtl ? 1 : -1}, ${isRtl ? -1 : 1}, 0, ${x}, ${y})`\n    : undefined;\n  return (\n    <text\n      {...props}\n      {...dataProps}\n      id={id}\n      className={otherProps.class}\n      style={style}\n      x={isRotated ? undefined : x}\n      y={isRotated ? undefined : y}\n      transform={isRotated ? transform : undefined}>\n      {text}\n    </text>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\nimport { SinglelineText } from './SinglelineText';\n\ntype SVGTextAttrs = JSXInternal.SVGAttributes<SVGTextElement>;\n\ntype MultilineTextProps = {\n  text: string;\n  lines: string[];\n  lineProps: SVGTextAttrs[];\n  textStyle: SVGTextAttrs['style'];\n  isRotated: boolean;\n  isRtl: boolean;\n  dataProps?: Record<`data-oj-${string}`, string | undefined>;\n  id?: string;\n  class?: string;\n  isTruncated?: boolean;\n};\n\nexport function MultilineText({\n  text,\n  lines,\n  lineProps,\n  dataProps,\n  id,\n  textStyle,\n  isRotated,\n  isRtl,\n  isTruncated,\n  ...otherProps\n}: MultilineTextProps) {\n  return (\n    <g {...dataProps} id={id} className={otherProps.class} style={textStyle}>\n      {lines.map((line, i) => {\n        return (\n          <SinglelineText text={line} props={lineProps[i]} isRotated={isRotated} isRtl={isRtl} />\n        );\n      })}\n    </g>\n  );\n}\n"],"names":["_jsx"],"mappings":";;;AAwBM,SAAU,cAAc,CAAC,EAC7B,IAAI,EACJ,KAAK,EACL,SAAS,EACT,KAAK,EACL,EAAE,EACF,SAAS,EACT,KAAK,EACL,WAAW,EACX,GAAG,UAAU,EACH,EAAA;AACV,IAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;IACvB,MAAM,SAAS,GAAG,SAAS;UACvB,CAAa,UAAA,EAAA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,EAAA,EAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAQ,KAAA,EAAA,CAAC,CAAK,EAAA,EAAA,CAAC,CAAG,CAAA,CAAA;UAChE,SAAS,CAAC;IACd,QACEA,GACM,CAAA,MAAA,EAAA,EAAA,GAAA,KAAK,EACL,GAAA,SAAS,EACb,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,UAAU,CAAC,KAAK,EAC3B,KAAK,EAAE,KAAK,EACZ,CAAC,EAAE,SAAS,GAAG,SAAS,GAAG,CAAC,EAC5B,CAAC,EAAE,SAAS,GAAG,SAAS,GAAG,CAAC,EAC5B,SAAS,EAAE,SAAS,GAAG,SAAS,GAAG,SAAS,EAC3C,QAAA,EAAA,IAAI,EACA,CAAA,EACP;AACJ;;AC1BM,SAAU,aAAa,CAAC,EAC5B,IAAI,EACJ,KAAK,EACL,SAAS,EACT,SAAS,EACT,EAAE,EACF,SAAS,EACT,SAAS,EACT,KAAK,EACL,WAAW,EACX,GAAG,UAAU,EACM,EAAA;IACnB,QACEA,GAAO,CAAA,GAAA,EAAA,EAAA,GAAA,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EACpE,QAAA,EAAA,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;YACrB,QACEA,GAAC,CAAA,cAAc,EAAC,EAAA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAI,CAAA,EACvF;SACH,CAAC,EACA,CAAA,EACJ;AACJ;;;;"}