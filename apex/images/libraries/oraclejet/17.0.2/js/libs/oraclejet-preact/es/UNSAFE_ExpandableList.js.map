{"version":3,"file":"UNSAFE_ExpandableList.js","sources":["../../src/UNSAFE_ExpandableList/useExpandCollapse.ts","../../src/UNSAFE_ExpandableList/ExpandableList.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback } from 'preact/hooks';\nimport { ToggleDetail } from '../UNSAFE_Collection';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { containsKey, Keys } from '../utils/UNSAFE_keys';\n\n/**\n * A hook that handles mouse and keyboard gesture that toggles the expanded state.\n * @param keyExtractor\n * @param expanded\n * @param onToggle\n * @returns\n */\nexport function useExpandCollapse<K>(\n  keyExtractor: (element: HTMLElement) => K | null,\n  expanded: Keys<K>,\n  onToggle?: (detail: ToggleDetail<K>) => void\n) {\n  const { direction } = useUser();\n\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      handleToggle(event, keyExtractor, onToggle);\n    },\n    [keyExtractor, onToggle]\n  );\n\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        handleToggle(event, keyExtractor, onToggle);\n      } else if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n        const isRtl = direction === 'rtl';\n        const isLeftArrow = event.key === 'ArrowLeft' && !isRtl;\n        handleArrowKey(isLeftArrow, event.target as HTMLElement, expanded, keyExtractor, onToggle);\n        // arrow key might cause it to scroll horizontally\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    },\n    [keyExtractor, onToggle, expanded, direction]\n  );\n\n  return onToggle ? { onClick, onKeyDown, onKeyUp } : {};\n}\n\n// prevent default (propagation) for keyDown to prevent scrolling the container\nconst onKeyDown = (event: KeyboardEvent) => {\n  if (event.key === 'Enter' || event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n    event.preventDefault();\n  }\n};\n\nconst handleArrowKey = <K>(\n  isLeftArrow: boolean,\n  target: HTMLElement,\n  expanded: Keys<K>,\n  keyExtractor: (element: HTMLElement) => K | null,\n  onToggle?: (detail: ToggleDetail<K>) => void\n) => {\n  const itemKey = keyExtractor(target);\n  if (onToggle && itemKey) {\n    const contains = containsKey(expanded, itemKey);\n    if ((isLeftArrow && contains) || (!isLeftArrow && !contains)) {\n      onToggle({ value: itemKey });\n    }\n  }\n};\n\nconst handleToggle = <K>(\n  event: Event,\n  keyExtractor: (element: HTMLElement) => K | null,\n  onToggle?: (detail: ToggleDetail<K>) => void\n) => {\n  const itemKey = keyExtractor(event.target as HTMLElement);\n  if (onToggle && itemKey) {\n    onToggle({ value: itemKey });\n    if (event.type === 'click') {\n      event.stopPropagation();\n    }\n  }\n};\n","import { ComponentChildren, Fragment } from 'preact';\nimport { useState, useCallback, useRef } from 'preact/hooks';\nimport { memo } from 'preact/compat';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport {\n  ListItemRendererContext,\n  SelectionDetail,\n  ToggleDetail,\n  FlattenedDataState,\n  HierarchicalItemRendererContext\n} from '../UNSAFE_Collection';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { Keys, containsKey, isSameKey } from '../utils/UNSAFE_keys';\nimport { Button } from '../UNSAFE_Button';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { ExpandIcon } from '../PRIVATE_ThemedIcons/ExpandIcon';\nimport { CollapseIcon } from '../PRIVATE_ThemedIcons/CollapseIcon';\nimport {\n  List,\n  ListGroupHeader,\n  GROUP_SELECTOR,\n  excludeGroup,\n  GroupLoadingIndicator\n} from '../PRIVATE_List';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\nimport { CustomRendererContext, PublicListProps } from '../UNSAFE_ListView/List.types';\nimport { useExpandCollapse } from './useExpandCollapse';\nimport { keyExtractor } from '../utils/PRIVATE_collectionUtils';\n\n// these are the props that are different from ListView\ntype SpecificTypes<K, D> = {\n  /**\n   * A function to render an item or a group header.\n   */\n  children: (context: HierarchicalItemRendererContext<K, D>) => ComponentChildren;\n  /**\n   * A FlattenedDataState object that provides information including data and metadata to this ExpandableList.\n   * If the value is null, then ExpandableList will show loading indicator until a FlattenedDataState is set.\n   */\n  data: FlattenedDataState<K, D> | null;\n  /**\n   * A function to handle when user performs a gesture that toggles the expansion state of a group header\n   */\n  onToggle?: (detail: ToggleDetail<K>) => void;\n};\n\n/**\n * Props for the ExpandableList Component, which consist of all props from ListView\n * except some which have different signatures.\n */\ntype ExpandableListProps<K, D> = Omit<PublicListProps<K, D>, 'children' | 'data'> &\n  SpecificTypes<K, D>;\n\n/**\n * An ExpandableList shows a two-level group of items where each group header can be expand or collapse.\n */\nexport function ExpandableList<K extends string | number, D>({\n  children,\n  currentKey,\n  data,\n  onSelectionChange,\n  onToggle,\n  ...props\n}: ExpandableListProps<K, D>) {\n  const [statusText, setStatusText] = useState('');\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  const updateStateText = useCallback(\n    (detail: ToggleDetail<K>) => {\n      onToggle?.(detail);\n      if (data) {\n        const previouslyExpanded = containsKey(data?.expanded, detail.value);\n        setStatusText(\n          previouslyExpanded\n            ? translations.expandableList_groupCollapse()\n            : translations.expandableList_groupExpand()\n        );\n        // we need to clear the live region text otherwise screenreader\n        // won't read again if the content did not change the next time\n        setTimeout(() => {\n          setStatusText('');\n        }, 1000);\n      }\n    },\n    [onToggle, data, translations]\n  );\n  const expandCollapseProps = useExpandCollapse(\n    (element: HTMLElement) => {\n      if (element.getAttribute('role') === 'treegrid') {\n        return currentKey === undefined ? null : currentKey;\n      }\n      return keyExtractor(element, GROUP_SELECTOR) as K;\n    },\n    data == null ? (emptyKeys as Keys<K>) : data.expanded,\n    onToggle && updateStateText\n  );\n\n  const descId = useId();\n  const stableDescIdRef = useRef(descId);\n\n  const createHierarchicalContext = <K, D>(\n    context: ListItemRendererContext<K, D>,\n    options?: { expanded: boolean; onToggle: (detail: ToggleDetail<K>) => void }\n  ) => {\n    const expanderRenderer =\n      options !== undefined\n        ? () => (\n            <Expander\n              itemKey={context.metadata.key}\n              expanded={options.expanded}\n              onToggle={options.onToggle}\n            />\n          )\n        : undefined;\n\n    return {\n      ...context,\n      parentKey: context.metadata.parentKey,\n      leaf: context.metadata.isLeaf ?? true,\n      depth: context.metadata.treeDepth ?? 1,\n      expander: expanderRenderer\n    };\n  };\n\n  const handleSelectionChange = useCallback(\n    (detail: SelectionDetail<K>) => {\n      if (onSelectionChange && data) {\n        const keys = excludeGroup(data, detail.value);\n        if (isSameKey(keys, detail.value)) {\n          onSelectionChange(detail);\n        } else if (keys.keys && keys.keys.size > 0) {\n          onSelectionChange({ ...detail, value: keys });\n        }\n      }\n    },\n    [onSelectionChange, data]\n  );\n\n  const customItemRenderer = (context: CustomRendererContext<K, D>) => {\n    const itemKey = context.listItemContext.metadata.key;\n    const options =\n      data && onToggle ? { expanded: containsKey(data.expanded, itemKey), onToggle } : undefined;\n    const itemContext = createHierarchicalContext(context.listItemContext, options);\n    if (itemContext.leaf) {\n      return context.defaultListItem(itemContext, { itemDepth: itemContext.depth + 1 });\n    } else {\n      return (\n        <ListGroupHeader\n          key={itemContext.metadata.key}\n          ariaDescribedBy={stableDescIdRef.current}\n          itemKey={itemContext.metadata.key}\n          itemIndex={itemContext.index}\n          itemDepth={itemContext.depth}\n          isFocused={context.isFocused}\n          isFocusRingVisible={context.isFocusRingVisible}\n          isActive={context.isActive}\n          isGridlineVisible={false}\n          isExpandable={true}\n          expandedKeys={data == null ? (emptyKeys as Keys<K>) : data.expanded}\n          onToggle={onToggle}>\n          {children(itemContext)}\n        </ListGroupHeader>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <List\n        currentKey={currentKey}\n        data={data}\n        role=\"treegrid\"\n        loadingIndicator={<GroupLoadingIndicator />}\n        onSelectionChange={handleSelectionChange}\n        customItemRenderer={customItemRenderer}\n        {...{ ...props, ...expandCollapseProps }}>\n        {(context: ListItemRendererContext<K, D>) => {\n          return children(context as HierarchicalItemRendererContext<K, D>);\n        }}\n      </List>\n      {onToggle && (\n        <Fragment>\n          <LiveRegion>{statusText}</LiveRegion>\n          <span id={stableDescIdRef.current}>\n            <HiddenAccessible>\n              {translations.expandableList_expandCollapseInstructionText()}\n            </HiddenAccessible>\n          </span>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nconst emptyKeys = { all: false, keys: new Set() };\n\nconst Expander = memo(\n  <K,>(props: { itemKey: K; expanded: boolean; onToggle: (detail: ToggleDetail<K>) => void }) => {\n    const classes = classNames(['oj-listview-expander']);\n\n    const actionHandler = () => {\n      props.onToggle({ value: props.itemKey });\n    };\n\n    return (\n      <span class={classes} role=\"presentation\">\n        <Button\n          onAction={actionHandler}\n          variant=\"ghost\"\n          startIcon={props.expanded ? <ExpandIcon size=\"6x\" /> : <CollapseIcon size=\"6x\" />}\n        />\n      </span>\n    );\n  },\n  (prev: any, next: any) => {\n    return (\n      prev.itemKey === next.itemKey &&\n      prev.expanded === next.expanded &&\n      prev.onToggle === next.onToggle\n    );\n  }\n);\n"],"names":["_jsx","_jsxs","ExpandIcon"],"mappings":"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"}