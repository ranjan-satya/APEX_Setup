{"version":3,"file":"Avatar-c84a09ae.js","sources":["../../src/UNSAFE_Avatar/Avatar.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { AvatarStyles, AvatarVariantOptions } from './themes/AvatarStyles.css';\n\nimport { AvatarRedwoodTheme } from './themes/redwood/AvatarTheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { globalImages } from '#/ImageVars.css';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\n\ntype AvatarProps = {\n  /**\n   * Specifies the source for the image of the avatar.  Will only be displayed if no icon component is specified as a child.  Image will be rendered as a\n   * background image.\n   */\n  src?: string;\n  /**\n   * Specifies the initials of the avatar.  Will only be displayed if both the src attribute and the child icon component are not specified.\n   */\n  initials?: string;\n  /**\n   * Specifies the background of the avatar. The default value of this property is theme driven.\n   */\n  background?:\n    | 'neutral'\n    | 'orange'\n    | 'green'\n    | 'teal'\n    | 'blue'\n    | 'slate'\n    | 'pink'\n    | 'purple'\n    | 'lilac'\n    | 'gray';\n\n  /**\n   * Specifies the size of the avatar. The default value of this property is theme driven.\n   */\n  size?: '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n\n  /**\n   * Specifies the shape of the avatar. Can be square or circle.  The default value of this\n   * property varies by theme.\n   */\n  shape?: 'square' | 'circle';\n  /**\n   * Aria-label does not need to be set if associated information is available to assistive technologies elsewhere on the page,\n   * for example if a person's name is shown next to the avatar.\n   * Otherwise aria-label must be set to make the page accessible.\n   *\n   *  If aria-label is set, role will internally be set to 'img'.\n   */\n  'aria-label'?: string;\n  /**\n   * Specifies the Avatar content.\n   */\n  children?: ComponentChildren;\n};\n\n/**\n * An avatar represents a person or entity as initials or an image.\n */\nexport function Avatar({ children, src, ...otherProps }: AvatarProps) {\n  if (src && !children) {\n    return <ImageAvatar src={src} {...otherProps}></ImageAvatar>;\n  } else {\n    return <ContentAvatar {...otherProps}>{children}</ContentAvatar>;\n  }\n}\n\nconst ImageAvatar = ({ src, ...otherProps }: AvatarProps) => {\n  const {\n    styles: { base, image }\n  } = useComponentTheme<never, AvatarStyles>(AvatarRedwoodTheme);\n  const imageClasses = classNames([base, image]);\n  return (\n    <AvatarWrapper {...otherProps}>\n      <div class={imageClasses} style={{ backgroundImage: `url(${src})` }}></div>\n    </AvatarWrapper>\n  );\n};\n\nconst ContentAvatar = ({ children, initials, ...otherProps }: AvatarProps) => {\n  const {\n    styles: { baseStyle, content, initialsStyle, icon }\n  } = useComponentTheme<never, AvatarStyles>(AvatarRedwoodTheme);\n\n  const contentClasses = [baseStyle, content, initials ? initialsStyle : icon];\n\n  const childContent = initials || children;\n  return (\n    <AvatarWrapper {...otherProps}>\n      <div aria-hidden=\"true\" class={classNames(contentClasses)}>\n        {childContent}\n      </div>\n    </AvatarWrapper>\n  );\n};\n\nconst AvatarWrapper = ({ background, size, shape, children, ...props }: AvatarProps) => {\n  const { classes } = useComponentTheme<AvatarVariantOptions>(AvatarRedwoodTheme, {\n    shape,\n    size,\n    background\n  });\n\n  const wrapperClasses = classNames([classes, globalImages]);\n  if (props['aria-label']) {\n    return (\n      <div aria-label={props['aria-label']} role=\"img\" class={wrapperClasses}>\n        {children}\n      </div>\n    );\n  } else {\n    return <div class={wrapperClasses}>{children}</div>;\n  }\n};\n"],"names":["_jsx","useComponentTheme","AvatarRedwoodTheme","classNames","globalImages"],"mappings":";;;;;;;;;AAgEA;;AAEG;AACG,SAAU,MAAM,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,UAAU,EAAe,EAAA;AAClE,IAAA,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE;QACpB,OAAOA,cAAA,CAAC,WAAW,EAAC,EAAA,GAAG,EAAE,GAAG,EAAA,GAAM,UAAU,EAAA,CAAgB,CAAC;KAC9D;SAAM;AACL,QAAA,OAAOA,eAAC,aAAa,EAAA,EAAA,GAAK,UAAU,EAAG,QAAA,EAAA,QAAQ,GAAiB,CAAC;KAClE;AACH,CAAC;AAED,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,UAAU,EAAe,KAAI;AAC1D,IAAA,MAAM,EACJ,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EACxB,GAAGC,mCAAiB,CAAsBC,2DAAkB,CAAC,CAAC;IAC/D,MAAM,YAAY,GAAGC,qBAAU,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/C,QACEH,eAAC,aAAa,EAAA,EAAA,GAAK,UAAU,EAC3B,QAAA,EAAAA,cAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,eAAe,EAAE,CAAO,IAAA,EAAA,GAAG,GAAG,EAAE,EAAA,CAAQ,EAC7D,CAAA,EAChB;AACJ,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAe,KAAI;AAC3E,IAAA,MAAM,EACJ,MAAM,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,EACpD,GAAGC,mCAAiB,CAAsBC,2DAAkB,CAAC,CAAC;AAE/D,IAAA,MAAM,cAAc,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,GAAG,aAAa,GAAG,IAAI,CAAC,CAAC;AAE7E,IAAA,MAAM,YAAY,GAAG,QAAQ,IAAI,QAAQ,CAAC;IAC1C,QACEF,eAAC,aAAa,EAAA,EAAA,GAAK,UAAU,EAC3B,QAAA,EAAAA,cAAA,CAAA,KAAA,EAAA,EAAA,aAAA,EAAiB,MAAM,EAAC,KAAK,EAAEG,qBAAU,CAAC,cAAc,CAAC,EAAA,QAAA,EACtD,YAAY,EACT,CAAA,EAAA,CACQ,EAChB;AACJ,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAe,KAAI;AACrF,IAAA,MAAM,EAAE,OAAO,EAAE,GAAGF,mCAAiB,CAAuBC,2DAAkB,EAAE;QAC9E,KAAK;QACL,IAAI;QACJ,UAAU;AACX,KAAA,CAAC,CAAC;IAEH,MAAM,cAAc,GAAGC,qBAAU,CAAC,CAAC,OAAO,EAAEC,0BAAY,CAAC,CAAC,CAAC;AAC3D,IAAA,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;AACvB,QAAA,QACEJ,cAAiB,CAAA,KAAA,EAAA,EAAA,YAAA,EAAA,KAAK,CAAC,YAAY,CAAC,EAAE,IAAI,EAAC,KAAK,EAAC,KAAK,EAAE,cAAc,YACnE,QAAQ,EAAA,CACL,EACN;KACH;SAAM;AACL,QAAA,OAAOA,wBAAK,KAAK,EAAE,cAAc,EAAG,QAAA,EAAA,QAAQ,GAAO,CAAC;KACrD;AACH,CAAC;;;;"}