{"version":3,"file":"MessagesManager-0d60fea1.js","sources":["../../src/PRIVATE_Message/MessageStartIcon.tsx","../../src/PRIVATE_Message/MessageSummary.tsx","../../src/PRIVATE_Message/MessageUtils.ts","../../src/PRIVATE_Message/MessageTransition.tsx","../../src/PRIVATE_Message/MessagesManager.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageSeverity, MessageVariant } from './Message.types';\nimport { MessageConfirmationIcon } from '../PRIVATE_ThemedIcons/MessageConfirmationIcon';\nimport { MessageErrorIcon } from '../PRIVATE_ThemedIcons/MessageErrorIcon';\nimport { MessageInfoIcon } from '../PRIVATE_ThemedIcons/MessageInfoIcon';\nimport { MessageWarningIcon } from '../PRIVATE_ThemedIcons/MessageWarningIcon';\nimport { Flex } from '../UNSAFE_Flex';\nimport {\n  messageStartIconStyles,\n  severityIconStyles,\n  startIconContainerStyles\n} from './themes/MessageStyles.css';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\n\nconst severityIcons = {\n  confirmation: MessageConfirmationIcon,\n  error: MessageErrorIcon,\n  info: MessageInfoIcon,\n  warning: MessageWarningIcon\n};\n\n/**\n * Props for the StartIcon component\n */\ntype Props = TestIdProps & {\n  /**\n   * The icon severity\n   */\n  severity: Exclude<MessageSeverity, 'none'>;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * StartIcon Component for rendering the severity based icon in Message\n */\nfunction MessageStartIcon({ severity, testId, variant = 'banner' }: Props) {\n  const IconComponent = severityIcons[severity];\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const labelMap = {\n    confirmation: translations.message_confirmation(),\n    error: translations.message_error(),\n    info: translations.message_info(),\n    warning: translations.message_warning()\n  };\n  const testIdProps = useTestId(testId);\n\n  // TODO: JET-50793\n  const iconContent =\n    variant !== 'inline' ? (\n      <Flex align=\"center\" height=\"100%\">\n        <span class={startIconContainerStyles[variant]} role=\"img\" aria-label={labelMap[severity]}>\n          <IconComponent />\n        </span>\n      </Flex>\n    ) : (\n      <span class={startIconContainerStyles.inline} role=\"img\" aria-label={labelMap[severity]}>\n        <IconComponent />\n      </span>\n    );\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  return (\n    <div\n      class={classNames([\n        messageStartIconStyles.base,\n        messageStartIconStyles[variant],\n        severityIconStyles[variant]\n      ])}\n      role=\"presentation\"\n      {...testIdProps}>\n      {iconContent}\n    </div>\n  );\n}\n\nexport { MessageStartIcon };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  AriaAttributesSignalExcluded,\n  HTMLAttributesSignalExcluded\n} from '#utils/UNSAFE_attributeUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { messageSummaryStyles } from './themes/MessageStyles.css';\nimport { MessageVariant } from './Message.types';\nimport { TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\n\ntype AriaProps = Pick<AriaAttributesSignalExcluded, 'aria-level'>;\n\n/**\n * Props for the Summary component\n */\ntype Props = AriaProps &\n  TestIdProps & {\n    /**\n     * The role associated with the message summary.\n     * In MessageToast and MessageBanner, role should be 'heading' and aria-level should be 2.\n     * In ComponentMessage, role should be undefined.\n     */\n    role?: HTMLAttributesSignalExcluded['role'];\n\n    /**\n     * The summary text\n     */\n    text?: string;\n\n    /**\n     * Style variant\n     */\n    variant?: MessageVariant;\n  };\n\n/**\n * Summary Component for rendering the summary text of the Message\n */\nfunction MessageSummary({\n  'aria-level': ariaLevel,\n  role,\n  text,\n  testId,\n  variant = 'banner'\n}: Props) {\n  const testIdProps = useTestId(testId);\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  // TODO:  Refactor to utilize useComponentTheme and multiVariantStyles.\n  const classes = classNames([messageSummaryStyles.base, messageSummaryStyles[variant]]);\n  return (\n    <div aria-level={ariaLevel} role={role} class={classes} {...testIdProps}>\n      {text}\n    </div>\n  );\n}\n\nexport { MessageSummary };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport * as Logger from '../utils/UNSAFE_logger';\nimport { playAudioFromURL, playDefaultNotificationSound } from '../utils/UNSAFE_soundUtils';\nimport { isValidValueForProp } from './MessageFormattingUtils';\nimport { MessageSeverity, MessageVariant } from './Message.types';\n\n/**\n * Logger that prepends the component name to the message\n */\nconst MessageLogger = {\n  error: (message: string, type = 'common') => Logger.error(`JET Message(${type}): ${message}`),\n  warn: (message: string, type = 'common') => Logger.warn(`JET Message(${type}): ${message}`),\n  info: (message: string, type = 'common') => Logger.info(`JET Message(${type}): ${message}`),\n  log: (message: string, type = 'common') => Logger.log(`JET Message(${type}): ${message}`)\n};\n\n/**\n * Plays a sound based on the provided argument. Supported keywords:\n * 1. default - plays the default beep sound\n * 2. none - no sound will be played\n *\n * @param sound Supported keywords or URL to an audio file\n */\nasync function playSound(sound: string) {\n  if (sound === 'none') {\n    // no need to play any audio\n    return;\n  }\n\n  // For default, we play a beep sound using WebAudio API\n  if (sound === 'default') {\n    try {\n      playDefaultNotificationSound();\n    } catch (error) {\n      // Default sound is not played due to some error\n      // Log a message and return doing nothing else\n      MessageLogger.warn(`Failed to play the default sound. ${error}.`);\n    }\n    return;\n  }\n\n  // If it is not a key word, then it is an URL\n  try {\n    await playAudioFromURL(sound);\n  } catch (error) {\n    // Playing audio using the URL failed.\n    MessageLogger.warn(`Failed to play the audio from the url ${sound}. ${error}.`);\n  }\n}\n\n/**\n * A helper function that throws an error\n *\n * @param message The error message\n * @param type The type of the message that is throwing an error\n * @throws {Error}\n */\nfunction throwError(message: string, type = 'common') {\n  throw new Error(`JET Message(${type}) - ${message}`);\n}\n\n/**\n * Fetches a renderer for the current message if one is provided\n *\n * @param message The item context for the current message\n * @param rendererIdentifier Identifier of the current renderer\n * @param renderers All available renderers\n * @returns The renderer for rendering the custom content\n */\nfunction getRenderer<K, D, R>(\n  message: Item<K, D>,\n  rendererIdentifier?: string | ((item: Item<K, D>) => string | undefined),\n  renderers?: Record<string, (data: R) => ComponentChildren>,\n  type?: string\n) {\n  // If either detailRenderer function or record of renderers are not available,\n  // return null\n  if (!rendererIdentifier || !renderers) {\n    return undefined;\n  }\n\n  const rendererKey =\n    typeof rendererIdentifier === 'function' ? rendererIdentifier(message) : rendererIdentifier;\n\n  // If rendererKey is null or undefined, then we need to use default rendering\n  // so return null\n  if (rendererKey == null) {\n    return undefined;\n  }\n\n  // If the returned render key is a string but does not exist in the provided\n  // record of renderers, throw an error\n  if (!(rendererKey in renderers)) {\n    throwError(\n      `${rendererKey} is not a valid template name for the message with key=${message.key}`,\n      type\n    );\n  }\n\n  // Else, fetch and return the renderer\n  return renderers[rendererKey];\n}\n\n/**\n * Generates a root style class based on the severity. For invalid severity and severity=none\n * no specific style class exists.\n *\n * @param severity The message severity\n * @returns calculated style class based on the severity\n */\nfunction severityBasedStyleClass(severity: MessageSeverity, variant: MessageVariant) {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none' ? `oj-c-message${variant}-${severity}` : '';\n}\n\n/**\n * Determines if a severity icon is needed based on the component severity\n *\n * @param severity The component severity\n * @returns Whether or not to render the severity icon\n */\nfunction isSeverityIconNeeded(\n  severity: MessageSeverity\n): severity is Exclude<MessageSeverity, 'none'> {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none';\n}\n\nexport { getRenderer, playSound, throwError, severityBasedStyleClass, isSeverityIconNeeded };\n","import { JSX, RenderableProps } from 'preact';\nimport { useCallback, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useAnimation, UseAnimationConfig } from '../hooks/UNSAFE_useAnimation';\nimport { useMessagesContext } from '../hooks/UNSAFE_useMessagesContext';\nimport { Transition, TransitionProps } from '../PRIVATE_TransitionGroup';\n\ntype State = 'entering' | 'exiting';\ntype AnimationStates = UseAnimationConfig<State, HTMLDivElement>['animationStates'];\ntype AnimationCallback = UseAnimationConfig<State, HTMLDivElement>['onAnimationEnd'];\ntype Props = RenderableProps<TransitionProps> & {\n  animationStates?: AnimationStates;\n  initialAnimationStyles?: JSX.HTMLAttributes<HTMLDivElement>['style'];\n};\n\nconst DEFAULT_ANIMATION_STATES = {};\n\n/**\n * A intermediary component that handles animation for the messages component.\n *\n * The expected flow is as follows:\n * 1. message removed from the data\n * 2. onExiting called and a callback is passed which needs to be called to complete the transition\n * 3. state set to \"exiting\" in this component\n * 4. triggers useAnimation to perform the exit animation\n * 5. onAnimationEnd is called after the animation, which invokes the callback provided earlier\n * 6. onExited is called (done when the callback mentioned above is called)\n * 7. message is removed from the UI\n *\n * @param param0 Props of the message component\n */\nexport function MessageTransition({\n  animationStates = DEFAULT_ANIMATION_STATES,\n  initialAnimationStyles,\n  onEntering,\n  onExiting,\n  ...transitionProps\n}: Props) {\n  const [state, setState] = useState<State>('entering');\n  const animationCallbackRef = useRef<() => void>();\n  const busyStateResolveRef = useRef<() => void>();\n  const { controller, nodeRef } = useAnimation(state, {\n    animationStates,\n    isAnimatedOnMount: true,\n    onAnimationEnd: useCallback<NonNullable<AnimationCallback>>(() => {\n      // resolve animation callbacks & busyStates\n      animationCallbackRef.current?.();\n      animationCallbackRef.current = undefined;\n      busyStateResolveRef.current?.();\n      busyStateResolveRef.current = undefined;\n    }, [])\n  });\n  const { addBusyState } = useMessagesContext();\n\n  const onEnteringCallback = useCallback<NonNullable<TransitionProps['onEntering']>>(\n    (node, callback, metadata) => {\n      // cancel any existing animation\n      if (animationCallbackRef.current) {\n        animationCallbackRef.current = undefined;\n        controller.cancel();\n      }\n\n      // resolve any existing busyState\n      busyStateResolveRef.current?.();\n      busyStateResolveRef.current = undefined;\n\n      onEntering?.(node, undefined, metadata);\n      // start the animation and set the callback & busyState\n      setState('entering');\n\n      // if there is no animation configured, resolve immediately\n      if (\n        animationStates['entering'] === undefined &&\n        animationStates['exiting => entering'] === undefined\n      ) {\n        callback?.();\n        return;\n      }\n      animationCallbackRef.current = callback;\n      busyStateResolveRef.current = addBusyState?.('messages animating');\n    },\n    [animationStates, controller, addBusyState, onEntering]\n  );\n\n  const onExitingCallback = useCallback<NonNullable<TransitionProps['onExiting']>>(\n    (node, callback, metadata) => {\n      // cancel any existing animation\n      if (animationCallbackRef.current) {\n        animationCallbackRef.current = undefined;\n        controller.cancel();\n      }\n\n      // resolve any existing busyState\n      busyStateResolveRef.current?.();\n      busyStateResolveRef.current = undefined;\n\n      onExiting?.(node, undefined, metadata);\n      // start the animation and set the callback & busyState\n      setState('exiting');\n\n      // if there is no animation configured, resolve immediately\n      if (\n        animationStates['exiting'] === undefined &&\n        animationStates['entering => exiting'] === undefined\n      ) {\n        callback?.();\n        return;\n      }\n      animationCallbackRef.current = callback;\n      busyStateResolveRef.current = addBusyState?.('messages animating');\n    },\n    [animationStates, controller, addBusyState, onExiting]\n  );\n\n  // if animation is interrupted, the busyState may be left hanging. So clear that on unmount\n  // Note: When using a class-based component inside a functional component, the timings of\n  // componentDidMount and useEffect might differ. So, in order to guarantee the registration\n  // of the cleanup function, use useLayoutEffect instead of useEffect. This way we can make sure\n  // the cleanup registers at all times.\n  useLayoutEffect(() => () => busyStateResolveRef.current?.(), []);\n\n  return (\n    <div ref={nodeRef} style={initialAnimationStyles}>\n      <Transition\n        {...transitionProps}\n        onEntering={onEnteringCallback}\n        onExiting={onExitingCallback}\n      />\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChild, ComponentProps, Fragment } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { TransitionGroup } from '../PRIVATE_TransitionGroup';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { MessageTransition } from './MessageTransition';\n\n/**\n * Metadata passed on to the Transition component\n */\ntype TransitionMetadata<K> = {\n  index: number;\n  key: K;\n};\n\n/**\n * Type of the render context passed on to render individual message\n */\ntype MessageRenderContext<Key, Data> = {\n  /**\n   * The index of the current message\n   */\n  index: number;\n\n  /**\n   * The message item with all the necessary data in it\n   */\n  item: Item<Key, Data>;\n};\n\ntype PickedPropsFromMessageTransition = Pick<\n  ComponentProps<typeof MessageTransition>,\n  'animationStates' | 'initialAnimationStyles'\n>;\n\n/**\n * Props for the Message Component\n */\ntype Props<Key, Data> = PickedPropsFromMessageTransition & {\n  /**\n   * A render function that renders individual child.\n   */\n  children?: (context: MessageRenderContext<Key, Data>) => ComponentChild;\n\n  /**\n   * Data for the messages. This data is used for rendering each message.\n   */\n  data: Item<Key, Data>[];\n\n  /**\n   * A callback function that gets called before a message is removed\n   */\n  onMessageWillRemove?: (key: Key, index: number, node?: Element) => void;\n};\n\n/**\n * The component that renders individual messages for the provided data.\n */\nexport function MessagesManager<K extends string | number = string | number, D = any>({\n  data,\n  animationStates,\n  children,\n  initialAnimationStyles,\n  onMessageWillRemove\n}: Props<K, D>) {\n  /**\n   * Handles when a message has finished to exit.\n   *\n   * @param node The corresponding message element\n   * @param callback A callback function to be called after the animation is complete\n   */\n  const handleExited = useCallback(\n    async (node?: Element, metadata?: TransitionMetadata<K>) => {\n      metadata && onMessageWillRemove?.(metadata.key, metadata.index, node);\n    },\n    [onMessageWillRemove]\n  );\n\n  return (\n    <TransitionGroup elementType={Fragment}>\n      {data.map((item, index) => (\n        <MessageTransition\n          animationStates={animationStates}\n          initialAnimationStyles={initialAnimationStyles}\n          key={item.key}\n          metadata={{ index, key: item.key }}\n          onExited={handleExited}>\n          {children?.({ index, item })}\n        </MessageTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n"],"names":["MessageConfirmationIcon","MessageErrorIcon","MessageInfoIcon","MessageWarningIcon","_jsx","Logger.error","Logger.warn","Logger.info","Logger.log"],"mappings":"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"}