{"version":3,"file":"Sheet-a6267b5f.js","sources":["../../src/UNSAFE_Sheet/useSheetSwipe.ts","../../src/UNSAFE_Sheet/Sheet.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef, useCallback } from 'preact/hooks';\n\n/*\n  threshold: Minimal threshold required before recognizing\n  tolerance: A tolerance value which allows the user to move their finger about a length measured in pixels.\n  This allows the swipe gesture to be triggered more easily since a User might not move their finger\n  in a straight line.\n*/\ntype SwipeOptions = {\n  threshold?: number;\n  maximumTime?: number;\n  tolerance?: number;\n  isDisabled?: boolean;\n};\n\ntype SwipeInfo = {\n  direction: 'down';\n};\n\ntype SwipeState = {\n  pointerDownId: number | null;\n  startTime: number | null;\n  prevpageX: number;\n  prevpageY: number;\n  elementScrollTop: number;\n};\n/*This \"private\" hook will live until we end up stating a final decision on useSwipe hook.\nFor that hook to work, element that use it has to set touch-action:none;, since pointer events\nare canceled once a touch action is going to be handled by the browser. This works for most\nof the components that don't scroll. But if the component scroll, there is a need for the browser to \nhandle scroll which is imposible with a hook just using pointer events.\n\nUpdate 11/6/23:\nNishad's team is going to confirm if other comps that will use useSwipe need mouse interactions. If they need it,\nwe can either have a flag to use pointer or touch events or two separated hooks. If they don't need mouse interactions,\nwe could start using useSwipe with touch events instead.\n*/\nexport function useSheetSwipe(\n  onSwipe: (e: SwipeInfo) => void,\n  { threshold = 10, maximumTime = 300, tolerance = 50, isDisabled = false }: SwipeOptions = {\n    threshold: 10,\n    maximumTime: 300,\n    tolerance: 50,\n    isDisabled: false\n  }\n): { swipeProps: Record<string, any> } {\n  const ref = useRef<SwipeState>({\n    pointerDownId: 0,\n    startTime: null,\n    prevpageX: 0,\n    prevpageY: 0,\n    elementScrollTop: 0\n  });\n\n  const clearSwipe = useCallback(() => {\n    ref.current = {\n      pointerDownId: null,\n      startTime: 0,\n      prevpageX: 0,\n      prevpageY: 0,\n      elementScrollTop: 0\n    };\n  }, []);\n\n  const onTouchStart = useCallback(\n    (e: TouchEvent) => {\n      const touchobj = e.changedTouches[0];\n      if (!ref.current.pointerDownId) {\n        ref.current = {\n          pointerDownId: touchobj.identifier,\n          startTime: e.timeStamp,\n          prevpageX: touchobj.pageX,\n          prevpageY: touchobj.pageY,\n          elementScrollTop: (e.currentTarget as HTMLElement).scrollTop\n        };\n      } else {\n        clearSwipe();\n      }\n    },\n    [clearSwipe]\n  );\n\n  const onTouchEnd = useCallback(\n    (ev: TouchEvent) => {\n      const touchobj = ev.changedTouches[0];\n      if (touchobj.identifier === ref.current.pointerDownId) {\n        if (ref.current.startTime && ev.timeStamp - ref.current.startTime < maximumTime) {\n          if (\n            touchobj.pageY - ref.current.prevpageY > threshold &&\n            Math.abs(touchobj.pageX - ref.current.prevpageX) <= tolerance &&\n            ref.current.elementScrollTop === 0\n          ) {\n            onSwipe?.({ direction: 'down' });\n          }\n        }\n      }\n      // state would be reset to its original state whether swipe is completed or cancelled\n      clearSwipe();\n    },\n    [threshold, onSwipe, clearSwipe, maximumTime, tolerance]\n  );\n\n  const swipeProps = isDisabled\n    ? {}\n    : {\n        /** event handlers to spread on the target element. */\n        onTouchStart,\n        onTouchEnd,\n        ontouchcancel: clearSwipe\n      };\n\n  return {\n    swipeProps\n  };\n}\n","import { JSX } from 'preact';\nimport { useCallback, useEffect, useMemo, useRef } from 'preact/hooks';\n\nimport { Modal } from '../UNSAFE_Modal';\nimport { WindowOverlay } from '../UNSAFE_WindowOverlay';\n//Temporal import.\nimport { useSheetSwipe } from './useSheetSwipe';\nimport { focusWithin } from '../utils/PRIVATE_tabbableUtils';\n\nimport { sheetMenuStyles } from './themes/SheetStyles.css';\nimport { mergeRefs } from '#utils/PRIVATE_refUtils';\nimport { AnimationStates, useAnimationStatus } from '#hooks/PRIVATE_useAnimationStatus';\nimport { SLIDE_DOWN_XLARGE, SLIDE_UP_XLARGE, DURATION_LARGE } from '#utils/PRIVATE_animationUtils';\n\n/*\n  pointerDismissed: Swipedown and tapScrim\n  keyboardDismissed: \"Escape\" | \"Tab\"\n*/\nexport type CloseDetail = { reason: 'pointerDismissed' | 'keyboardDismissed' };\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\n\ntype SheetProps = IntrinsicProps & {\n  onClose?: (detail: CloseDetail) => void;\n  isOpen?: boolean;\n  initialFocus?: 'none' | 'firstFocusable';\n};\n\nconst animationStates: AnimationStates = {\n  opening: {\n    ...SLIDE_UP_XLARGE,\n    options: {\n      duration: DURATION_LARGE\n    }\n  },\n  closing: {\n    ...SLIDE_DOWN_XLARGE,\n    options: {\n      duration: DURATION_LARGE\n    }\n  }\n};\n\nexport const Sheet = ({ children, onClose, isOpen = false, initialFocus = 'none' }: SheetProps) => {\n  const sheetRef = useRef<HTMLDivElement>(null);\n\n  // Initial focus going to be set after animation once opening animation is added\n  useEffect(() => {\n    if (isOpen && initialFocus === 'firstFocusable') {\n      const sheetElement = sheetRef.current;\n      if (sheetElement) {\n        focusWithin(sheetElement);\n      }\n    }\n  }, [isOpen, initialFocus]);\n  const handlePointerDismissed = useCallback(() => {\n    onClose?.({ reason: 'pointerDismissed' });\n  }, [onClose]);\n\n  // TODO: Use useSwipe when it works on components that could scroll. Important to notice all components that have a\n  // sheet will use this comp and this comp is going to use useSwipe. So comps that have their own impl (menu right now),\n  // will stop having its own implementation\n  const { swipeProps } = useSheetSwipe(handlePointerDismissed);\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      switch (event.code) {\n        case 'Tab':\n        case 'Escape':\n          onClose?.({ reason: 'keyboardDismissed' });\n        default:\n          break;\n      }\n    },\n    [onClose]\n  );\n  const { setAnimationElementRef, status } = useAnimationStatus<HTMLElement>({\n    isOpen,\n    isAnimatedOnMount: false,\n    animationStates\n  });\n\n  useEffect(() => {\n    if (status === 'opening') {\n      if (initialFocus === 'firstFocusable') {\n        const dropdownElement = sheetRef.current;\n        if (dropdownElement) {\n          focusWithin(dropdownElement);\n        }\n      }\n    }\n  }, [status, initialFocus]);\n\n  const stableRef = useMemo(\n    () => mergeRefs(setAnimationElementRef, sheetRef),\n    [setAnimationElementRef]\n  );\n\n  const isMounted = status !== 'unmounted';\n\n  return (\n    <>\n      {isMounted ? (\n        <Modal isOpen={isMounted} onBackdropClick={handlePointerDismissed}>\n          <WindowOverlay placement=\"bottom\">\n            <div\n              {...swipeProps}\n              ref={stableRef}\n              class={sheetMenuStyles.sheetMenuContainerWrapper}\n              style={{ maxHeight: `calc(100vh - ${TOP_OFFSET}px)` }}\n              onKeyDown={handleKeyDown}>\n              {children}\n            </div>\n          </WindowOverlay>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nconst TOP_OFFSET = 96;\n"],"names":["useRef","useCallback","SLIDE_UP_XLARGE","DURATION_LARGE","SLIDE_DOWN_XLARGE","useEffect","focusWithin","useAnimationStatus","useMemo","mergeRefs","_jsx","_Fragment","Modal","WindowOverlay","sheetMenuStyles"],"mappings":"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"}