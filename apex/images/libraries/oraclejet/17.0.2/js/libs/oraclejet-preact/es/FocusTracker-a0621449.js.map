{"version":3,"file":"FocusTracker-a0621449.js","sources":["../../src/PRIVATE_FocusTracker/FocusGuard.tsx","../../src/PRIVATE_FocusTracker/FocusTracker.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { styles } from './themes/FocusTrackerStyles.css';\n\ntype Props = {\n  onFocus: (event: FocusEvent) => void;\n};\n\n/**\n * Styled FocusTrap sub-component to render non-visible focus guards\n */\nexport const FocusGuard = forwardRef(\n  ({ onFocus }: Props, guardRef: ForwardedRef<HTMLDivElement>) => {\n    const classes = classNames([styles.guardStyle]);\n\n    return <div class={classes} onFocus={onFocus} ref={guardRef} tabIndex={0} />;\n  }\n);\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, Fragment } from 'preact';\nimport { useEffect, useRef } from 'preact/compat';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { baseStyle } from './themes/FocusTrackerStyles.css';\nimport {\n  FocusableElement,\n  getActiveElement,\n  allTabbableElements\n} from '../utils/PRIVATE_tabbableUtils';\nimport { FocusGuard } from './FocusGuard';\n\ntype Props = {\n  /**\n   * The children that focus tracking should be handled on.\n   */\n  children: ComponentChildren;\n\n  /**\n   * Sets whether focus is tracked and whether guards are present.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Optional callback to be notified that the tracking is starting (when mounted and changing isDisabled from true to false).\n   */\n  onStartTracking?: (detail: {\n    activeElement: FocusableElement;\n    hasFocusWithin: boolean;\n    tabbableElements: FocusableElement[];\n  }) => void;\n\n  /**\n   * Optional callback to be notified that the tracking is stopping (when unmounted and changing isDisabled from false to true).\n   */\n  onStopTracking?: (detail: {\n    hasFocusWithin: boolean;\n    lastActiveElement: FocusableElement | null;\n  }) => void;\n\n  /**\n   * Optional callback to to be notified when the start focus guard gains focus\n   */\n  onFocusStartEdge?: (detail: { tabbableElements: FocusableElement[] }) => void;\n\n  /**\n   * Optional callback to to be notified when the end focus guard gains focus\n   */\n  onFocusEndEdge?: (detail: { tabbableElements: FocusableElement[] }) => void;\n\n  /**\n   * Optional style class to be applied to the outer div of the tracker\n   */\n  styleClass?: string;\n};\n\n/**\n * Tracks focus within a DOM node.\n */\nexport const FocusTracker = ({\n  children,\n  onFocusStartEdge,\n  onFocusEndEdge,\n  onStartTracking,\n  onStopTracking,\n  isDisabled = false,\n  styleClass\n}: Props) => {\n  const trackerRef = useRef<HTMLDivElement>(null);\n  const startGuardRef = useRef<HTMLDivElement>(null);\n  const endGuardRef = useRef<HTMLDivElement>(null);\n  const lastActiveElementRef = useRef<FocusableElement | null>(null);\n  const onStartTrackingRef = useRef<Props['onStartTracking']>();\n  const onStopTrackingRef = useRef<Props['onStopTracking']>();\n\n  // classes to be set on the children wrapper\n  const classes = classNames([baseStyle, styleClass]);\n\n  // store onStartTracking in our own ref to avoid this callback being triggered if it is ever updated externally.\n  // for example, if we were not using a ref here and the component controlling this focus tracker passed in a\n  // new onStartTracking callback function for whatever reason, the useEffect that invokes this callback would be\n  // triggered at that time, and the new instance of this callback would be triggered as well.\n  useEffect(() => {\n    onStartTrackingRef.current = onStartTracking;\n  }, [onStartTracking]);\n\n  // store onStopTracking in our own ref to avoid this callback being triggered if it is ever updated externally.\n  // for example, if we were not using a ref here and the component controlling this focus tracker passed in a\n  // new onStopTracking callback function for whatever reason, the useEffect that invokes this callback would be\n  // triggered at that time, and the previous instance of this callback would be triggered as well.\n  useEffect(() => {\n    onStopTrackingRef.current = onStopTracking;\n  }, [onStopTracking]);\n\n  // helper to handle guard focus\n  const handleGuardFocus = (\n    event: FocusEvent,\n    trackerElement: HTMLDivElement,\n    focusCallbackFunc?: Props['onFocusStartEdge'] // same as Props['onFocusEndEdge']\n  ) => {\n    if (focusCallbackFunc != null) {\n      focusCallbackFunc({\n        tabbableElements: allTabbableElements(trackerElement)\n      });\n    }\n    // prevent scroll jump and bubbling this event up as a focus event\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  // notify focus on start guard\n  const handleOnFocusStartGuard = (event: FocusEvent) => {\n    if (trackerRef.current != null) {\n      handleGuardFocus(event, trackerRef.current, onFocusStartEdge);\n    }\n  };\n\n  // notify focus on end guard\n  const handleOnFocusEndGuard = (event: FocusEvent) => {\n    if (trackerRef.current != null) {\n      handleGuardFocus(event, trackerRef.current, onFocusEndEdge);\n    }\n  };\n\n  // handle focus on child or other descendant\n  const handleOnFocus = (event: FocusEvent) => {\n    lastActiveElementRef.current = event.target as FocusableElement;\n  };\n\n  // handle initial render or re-render when 'isDisabled' changes\n  useEffect(() => {\n    // determines if this focus tracker contains real browser focus\n    const _hasFocusWithin = () => {\n      if (trackerRef.current != null) {\n        return hasFocus([trackerRef.current, startGuardRef.current, endGuardRef.current]);\n      }\n      return false;\n    };\n\n    const trackerElement = trackerRef.current;\n    if (trackerElement != null && !isDisabled) {\n      if (onStartTrackingRef.current != null) {\n        onStartTrackingRef.current({\n          activeElement: getActiveElement(trackerElement),\n          hasFocusWithin: _hasFocusWithin(),\n          tabbableElements: allTabbableElements(trackerElement)\n        });\n      }\n\n      // the 'cleanup' function of a useEffect is run when unmounted as well as before the useEffect is run on a re-render\n      // 'isDisabled' is the only trigger so this should only run when unmounted and on isDisabled changes from false to true\n      return () => {\n        if (onStopTrackingRef.current != null) {\n          onStopTrackingRef.current({\n            hasFocusWithin: _hasFocusWithin(),\n            lastActiveElement: lastActiveElementRef.current\n          });\n        }\n      };\n    }\n    return;\n    // it is very important that this useEffect is ONLY dependent on isDisabled changes. otherwise, the\n    // start / stop tracking callbacks will be triggered whenever those other dependencies are updated.\n  }, [isDisabled]);\n\n  return (\n    <Fragment>\n      {!isDisabled && <FocusGuard onFocus={handleOnFocusStartGuard} ref={startGuardRef} />}\n      <div onFocus={!isDisabled ? handleOnFocus : undefined} ref={trackerRef} class={classes}>\n        {children}\n      </div>\n      {!isDisabled && <FocusGuard onFocus={handleOnFocusEndGuard} ref={endGuardRef} />}\n    </Fragment>\n  );\n};\n\n/**\n * Helper function used to help determine if real browser focus is currently contained in the\n * array of elements provided.\n */\nconst hasFocus = (elements: (FocusableElement | null)[]) => {\n  if (elements.length === 0) {\n    return false;\n  }\n  const activeElement = getActiveElement(elements[0] as Node);\n  return elements.some((el) => el?.contains(activeElement));\n};\n"],"names":["_jsx","_jsxs"],"mappings":"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"}