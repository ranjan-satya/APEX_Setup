{"version":3,"file":"List-9026206d.js","sources":["../../src/PRIVATE_List/ListRoles.ts","../../src/PRIVATE_List/ListItem.tsx","../../src/PRIVATE_List/SkeletonContainer.tsx","../../src/PRIVATE_List/Sparkle.tsx","../../src/PRIVATE_List/usePromotedSection.ts","../../src/PRIVATE_List/ListUtils.ts","../../src/PRIVATE_List/useSelectionAndNavigation.ts","../../src/PRIVATE_List/useFocusTabbableMode.ts","../../src/PRIVATE_List/List.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Roles } from '../UNSAFE_ListView';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\n/**\n * List Roles need to be kept in matching sets, this module encapsulates the sets\n *\n * @param ariaRole\n * @returns matching, valid set of roles\n */\n\nconst getListViewRoles = (\n  ariaRole: Roles\n): {\n  list: HTMLAttributesSignalExcluded['role'];\n  item: HTMLAttributesSignalExcluded['role'];\n  cell: HTMLAttributesSignalExcluded['role'];\n} => {\n  switch (ariaRole) {\n    case 'listbox':\n      return { list: 'listbox', item: 'presentation', cell: 'option' };\n    case 'treegrid':\n      return { list: 'treegrid', item: 'row', cell: 'gridcell' };\n    default:\n      return { list: 'grid', item: 'row', cell: 'gridcell' };\n  }\n};\n\nexport { getListViewRoles };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { useRef, useMemo } from 'preact/hooks';\nimport { memo } from 'preact/compat';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { TabbableModeContext } from '../hooks/UNSAFE_useTabbableMode';\nimport { SelectionMode, CurrentItemVariant, ListItemRendererContext } from '../UNSAFE_Collection';\nimport { FocusTrap } from '../UNSAFE_FocusTrap';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { Roles } from '../UNSAFE_ListView';\nimport { getListViewRoles } from './ListRoles';\nimport { useInteractionStyle } from '../hooks/UNSAFE_useInteractionStyle';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { flexitemInterpolations } from '../utils/UNSAFE_interpolations/flexitem';\nimport type { FlexitemProps } from '../utils/UNSAFE_interpolations/flexitem';\nimport { listItemStyles, listItemMultiVariantStyles } from './themes/ListStyles.css';\nimport { compareListItemContext } from '../utils/PRIVATE_collectionUtils';\n\nexport const ITEM_SELECTOR = '[data-oj-key]';\n\n/**\n * Props for the ListViewItem Component\n */\nexport type Props<K, D> = {\n  children: (context: ListItemRendererContext<K, D>) => ComponentChildren;\n  context: ListItemRendererContext<K, D>;\n  itemDepth?: number;\n  isFocused: boolean;\n  isFocusRingVisible: boolean;\n  isActive: boolean;\n  isGridlineVisible: boolean;\n  isSelected: boolean;\n  isTopGridlineVisible?: boolean;\n  isTabbable?: boolean;\n  role: Roles;\n  selectionMode: SelectionMode;\n  suggestion?: 'end' | true;\n  currentItemVariant?: CurrentItemVariant;\n};\n\n/**\n * The internal component used to render a single item in ListView.\n */\nexport function ListViewItem<K extends string | number, D>({\n  children,\n  context,\n  itemDepth,\n  isFocused,\n  isFocusRingVisible,\n  isActive,\n  isGridlineVisible,\n  isSelected,\n  isTopGridlineVisible = false,\n  isTabbable = false,\n  role,\n  selectionMode,\n  suggestion,\n  currentItemVariant\n}: Props<K, D>) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const roles = useMemo(() => getListViewRoles(role), [role]);\n  const itemKey = context.metadata.key;\n  const itemIndex = context.index;\n\n  // some roles come with related aria attributes which need to be set\n  const cellRoleAttributes =\n    roles.cell === 'option'\n      ? {\n          role: roles.cell,\n          'aria-posinset': itemIndex + 1,\n          'aria-setsize': -1\n        }\n      : {\n          role: roles.cell\n        };\n\n  // don't bubble Arrow Up and Down events to parent when in isTabbable mode\n  // this bubbling causes the outer CollectionFocus ring to change index while in the isTabbable mode.\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (isTabbable && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n      event.stopPropagation();\n    }\n  };\n\n  const { interactionProps, applyActiveStyle, applyHoverStyle, applyPseudoHoverStyle } =\n    useInteractionStyle();\n\n  const variantClasses = listItemMultiVariantStyles({\n    selectable: isSelectable(selectionMode, isSelected) ? 'isSelectable' : 'notSelectable',\n    selected: isSelected ? 'isSelected' : 'notSelected',\n    selectedSingle:\n      isSelected && selectionMode === 'single' ? 'isSelectedSingle' : 'notSelectedSingle',\n    needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',\n    pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',\n    active: applyActiveStyle || isActive ? 'isActive' : 'notActive',\n    focusHighlight:\n      currentItemVariant === 'highlight' && isFocused ? 'isFocusHighlight' : 'notFocusHighlight',\n    focusRingVisible:\n      isFocusRingVisible && isFocused ? 'isFocusRingVisible' : 'notFocusRingVisible',\n    gridlineTop: isTopGridlineVisible ? 'visible' : 'hidden',\n    gridlineBottom:\n      isGridlineVisible ||\n      (suggestion === 'end' && !isGridlineVisible && (!isSelected || selectionMode !== 'single'))\n        ? 'visible'\n        : 'hidden'\n  });\n  const classes = classNames([variantClasses]);\n  const styleInterpolations = mergeInterpolations<FlexitemProps>([\n    ...Object.values(flexitemInterpolations)\n  ]);\n  const { class: cls, ...cellStyles } = styleInterpolations({\n    flex: '1 1 auto',\n    alignSelf: 'center'\n  });\n  const cellClasses = classNames([\n    cls,\n    selectionMode === 'multiple' && listItemStyles.checkboxContainer\n  ]);\n\n  // todo: use translated text for selector\n  // note cannot put focus on gridcell div since JAWS will not read the aria-rowindex\n  // correctly, so unfortunately needed another div\n  return (\n    <div\n      aria-rowindex={role === 'grid' ? itemIndex + 1 : undefined}\n      aria-level={itemDepth}\n      data-oj-key={itemKey}\n      class={classes}\n      ref={rootRef}\n      role={roles.item}\n      {...(suggestion && { 'data-oj-suggestion': true })}\n      {...(typeof itemKey === 'number' && { 'data-oj-key-type': 'number' })}\n      {...interactionProps}>\n      <div\n        id={useId()}\n        style={cellStyles}\n        class={cellClasses}\n        aria-posinset={role === 'grid' ? undefined : itemIndex + 1}\n        aria-setsize={role === 'grid' ? undefined : -1}\n        onKeyDown={handleKeyDown}\n        aria-colindex={role === 'grid' ? 1 : undefined}\n        aria-selected={selectionMode !== 'none' ? isSelected : undefined}\n        {...cellRoleAttributes}>\n        <TabbableModeContext.Provider value={{ isTabbable }}>\n          <FocusTrap isDisabled={!isTabbable} restoreFocusRef={false}>\n            {children(context)}\n          </FocusTrap>\n        </TabbableModeContext.Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Helper method to determine whether item is selectable\n * @returns true if item is selectable (show hover effect), false otherwise\n */\nconst isSelectable = (selectionMode: SelectionMode, isItemSelected: boolean) => {\n  return selectionMode !== 'none' && (selectionMode === 'multiple' || !isItemSelected);\n};\n\nexport const MemoizeListViewItem = memo(ListViewItem, (prev: any, next: any) => {\n  if (prev && next) {\n    return (\n      prev.children === next.children &&\n      prev.isFocused === next.isFocused &&\n      prev.isFocusRingVisible === next.isFocusRingVisible &&\n      prev.isSelected === next.isSelected &&\n      prev.isTabbable === next.isTabbable &&\n      prev.isActive === next.isActive &&\n      prev.suggestion === next.suggestion &&\n      prev.isGridlineVisible === next.isGridlineVisible &&\n      prev.isTopGridlineVisible === next.isTopGridlineVisible &&\n      compareListItemContext(prev.context, next.context)\n    );\n  }\n  return false;\n});\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { skeletonStyles } from './themes/ListStyles.css';\n\ntype Props = {\n  /**\n   * Allows to pass and access the properties from child elements\n   **/\n  children?: (index: number) => ComponentChildren;\n  /**\n   * Allows to specify number of skeletons to be rendered on initial load\n   **/\n  minimumCount?: number;\n};\n\n/**\n * Allows to specify the time delay for rendering the component\n **/\nconst timerValue = 50;\n\n/**\n * SkeletonContainer renders 'minimumCount' number of skeletons\n * of the variant specified from its child element - Skeleton's prop after\n * 'timerValue' ms delay\n **/\nexport function SkeletonContainer({ children, minimumCount = 1 }: Props) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsVisible(true);\n    }, timerValue);\n  }, []);\n\n  const containerClasses = classNames([skeletonStyles.container]);\n  return isVisible && children ? (\n    <div class={containerClasses} role=\"presentation\">\n      {[...Array(minimumCount)].map((_element, index) => children(index))}\n    </div>\n  ) : null;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { globalImages } from '#/ImageVars.css';\nimport { sparkleStyles } from './themes/ListStyles.css';\nimport { useTheme } from '#/hooks/UNSAFE_useTheme';\n\nconst SPARKLE_STYLE_CLASS = 'oj-collection-sparkle';\n\n/**\n * A sparkle component for smart suggestion indicator in ListView\n * @param sparkleHeight the height of sparkle\n */\nexport function Sparkle({ sparkleHeight }: { sparkleHeight: number }) {\n  const { name } = useTheme();\n  if (sparkleHeight <= 0) {\n    return null;\n  }\n\n  const height = sparkleHeight + 'px';\n  const sparkleClasses = classNames([sparkleStyles.base]);\n  const containerClasses = classNames([\n    sparkleStyles.container,\n    SPARKLE_STYLE_CLASS,\n    // TODO: this component should create separate theme definitions to only show the image in redwood\n    name === 'redwood' && globalImages\n  ]);\n\n  return (\n    <div key=\"sparkle\" class={containerClasses}>\n      <div class={sparkleClasses} style={{ height }}></div>\n    </div>\n  );\n}\n","import { RefObject } from 'preact';\nimport { useState, useEffect, useMemo } from 'preact/hooks';\nimport { Props as ListViewProps } from '../UNSAFE_ListView';\nimport { PLACEHOLDER_STYLE_CLASS } from '../PRIVATE_VirtualizedCollection';\nimport { Metadata } from '../UNSAFE_Collection';\n\nexport const usePromotedSection = <K extends string | number, D>(\n  data: ListViewProps<K, D>['data'],\n  promotedSection: ListViewProps<K, D>['promotedSection'],\n  rootRef: RefObject<HTMLDivElement>\n) => {\n  // tracking sparkle height\n  const [sparkleHeight, setSparkleHeight] = useState<number>(0);\n\n  const suggestions = useMemo(\n    () => data && promotedSection && findSuggestions(data.data, promotedSection.count),\n    [data, promotedSection]\n  );\n\n  useEffect(() => {\n    // update sparkleHeight only when we have suggestions\n    // avoid unnecessary iterating through elements\n    if (suggestions) {\n      const placeholder = rootRef.current?.querySelector(\n        '.' + PLACEHOLDER_STYLE_CLASS\n      ) as HTMLElement;\n      let height = placeholder?.offsetHeight || 0;\n      const suggestionItems = rootRef.current?.querySelectorAll('[data-oj-suggestion]');\n      suggestionItems?.forEach((item) => (height += (item as HTMLElement).offsetHeight));\n      setSparkleHeight(height);\n    }\n  }, [rootRef, suggestions]);\n\n  return { sparkleHeight, suggestions };\n};\n\n/**\n * A helper function that finds the data with suggestions, and\n * returns the corresponding keys\n * @param dataState\n */\nconst findSuggestions = <K, D>(data: { data: D; metadata: Metadata<K> }[], count: number) => {\n  if (count === 0) {\n    return null;\n  }\n\n  const suggestionsData = data.slice(0, count);\n  return suggestionsData.reduce((suggestions, value, index) => {\n    const key = value.metadata.key;\n\n    if (index === count - 1) {\n      suggestions.set(key, 'end');\n    } else {\n      suggestions.set(key, true);\n    }\n\n    return suggestions;\n  }, new Map<K, 'end' | true>());\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { FlattenedDataState } from '../UNSAFE_Collection';\nimport { Keys } from '../utils/UNSAFE_keys';\n\n/**\n * Helper function to only include keys of leaf items.\n */\nexport const excludeGroup = <K, D>(data: FlattenedDataState<K, D>, keys: Keys<K>) => {\n  if (!keys.all) {\n    const groups = data.data\n      .filter((dataMetadata) => {\n        return !dataMetadata.metadata.isLeaf;\n      })\n      .map((dataMetadata) => {\n        return dataMetadata.metadata.key;\n      });\n    const leafOnly = Array.from(keys.keys.values()).filter((key: K) => {\n      return !groups.includes(key);\n    });\n    return { ...keys, keys: new Set(leafOnly) };\n  }\n  return keys;\n};\n\n/**\n * A helper function to make sure specified elem is visible in the specified container\n */\nexport const scrollToVisible = (elem: Element, scroller: Element, offset: number) => {\n  if (elem && scroller) {\n    if ((elem as any).scrollIntoViewIfNeeded) {\n      // for Safari, we'll need the non-standard scrollIntoViewIfNeeded\n      (elem as any).scrollIntoViewIfNeeded();\n    } else {\n      elem.scrollIntoView({ block: 'nearest' });\n    }\n    if (offset > 0) {\n      const scrollerBounds = scroller.getBoundingClientRect();\n      const elemBounds = elem.getBoundingClientRect();\n      const diff = scrollerBounds.top + offset - elemBounds.top;\n      if (diff > 0) {\n        scroller.scrollTop = scroller.scrollTop - diff;\n      }\n    }\n  }\n};\n","import { RefObject } from 'preact';\nimport { useEffect, useCallback, useRef, useMemo } from 'preact/hooks';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { Keys } from '../utils/UNSAFE_keys';\nimport { DataState, Metadata, Range, SelectionDetail } from '../UNSAFE_Collection';\nimport { getListViewRoles } from './ListRoles';\nimport { SelectionRangeDetail, useSelection } from '../hooks/PRIVATE_useSelection';\nimport { useCurrentKey } from '../hooks/PRIVATE_useCurrentKey';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { useCollectionGestureContext } from '../hooks/PRIVATE_useCollectionGestureContext';\nimport { useItemAction } from '../hooks/PRIVATE_useItemAction';\nimport { Props as ListViewProps } from '../UNSAFE_ListView';\nimport { getPrevNextKey, findElementByKey, keyExtractor } from '../utils/PRIVATE_collectionUtils';\nimport { ITEM_SELECTOR } from './ListItem';\nimport { scrollToVisible } from './ListUtils';\n\nexport const useSelectionAndNavigation = <K extends string | number, D>(\n  currentKey: ListViewProps<K, D>['currentKey'],\n  selectedKeys: Keys<K>,\n  selectionMode: ListViewProps<K, D>['selectionMode'] = 'none',\n  onCurrentKeyChange: ListViewProps<K, D>['onCurrentKeyChange'],\n  onSelectionChange: ListViewProps<K, D>['onSelectionChange'],\n  onItemAction: ListViewProps<K, D>['onItemAction'],\n  data: ListViewProps<K, D>['data'],\n  viewportConfig: ListViewProps<K, D>['viewportConfig'],\n  role: ListViewProps<K, D>['role'] = 'grid',\n  scrollToVisibleOffset: ListViewProps<K, D>['scrollToVisibleOffset'],\n  rootRef: RefObject<HTMLDivElement>,\n  pendingSelectionCallback: (detail: SelectionRangeDetail<K>, value: Range) => void\n) => {\n  const listRoles = useMemo(() => getListViewRoles(role), [role]);\n\n  // tracking the anchor key which is used for shift+click selection\n  const anchorKey = useRef<K | undefined>();\n\n  const { currentKeyProps } = useCurrentKey(\n    (element) => keyExtractor(element, ITEM_SELECTOR),\n    selectionMode !== 'multiple',\n    getPrevNextKey(rootRef.current, currentKey, true, ITEM_SELECTOR),\n    getPrevNextKey(rootRef.current, currentKey, false, ITEM_SELECTOR),\n    undefined,\n    undefined,\n    currentKey,\n    onCurrentKeyChange\n  );\n\n  const [showFocusRing, focusRingProps] = useCollectionFocusRing(rootRef, ['ArrowUp', 'ArrowDown']);\n\n  useEffect(() => {\n    if (currentKey != null && rootRef.current) {\n      const elem = findElementByKey(rootRef.current, currentKey, ITEM_SELECTOR);\n      if (elem) {\n        const activeDescendant = rootRef.current.getAttribute('aria-activedescendant');\n        const cell = elem.querySelector(`[role=${listRoles.cell}]`);\n        if (cell && activeDescendant !== cell.id) {\n          // update aria-activedescendant for screenreader\n          rootRef.current.setAttribute('aria-activedescendant', cell.id);\n\n          const scroller = viewportConfig?.scroller();\n          const offset = scrollToVisibleOffset ? scrollToVisibleOffset(rootRef.current) : 0;\n          // make sure item is visible\n          scrollToVisible(elem, scroller != null ? scroller : rootRef.current, offset);\n        }\n      }\n    }\n    // listen to data because the current item would re-render when the virtualizer\n    // is fetching data or updating the data, i.e. the id of current item would be updated,\n    // so the currentKey itself couldn't guarantee the root has latest aria-activedescendant\n  }, [currentKey, data, listRoles.cell, viewportConfig, scrollToVisibleOffset, rootRef]);\n\n  const handleSelectionChange = useCallback(\n    (detail: SelectionDetail<K>) => {\n      if (onSelectionChange) {\n        if (detail.value.all === false && detail.value.keys.size > 0) {\n          // during regular selection, the last key selected by a user gesture is the anchor key\n          anchorKey.current = Array.from(detail.value.keys.values()).pop();\n        }\n        onSelectionChange(detail);\n      }\n    },\n    [anchorKey, onSelectionChange]\n  );\n\n  const handleSelectionRangeChange = useCallback(\n    (detail: SelectionRangeDetail<K>) => {\n      if (data && onSelectionChange) {\n        const value = handleSelectionRange(detail, data);\n        if (Array.isArray(value)) {\n          if (detail.eventType === 'shiftSpace') {\n            // during range selection by shift+space, the first key selected by a user gesture is the anchor key\n            anchorKey.current = detail.value.start;\n          } else {\n            // during range selection by shift+click/arrow keys, the last key selected by a user gesture is the anchor key\n            anchorKey.current = detail.value.end;\n          }\n          onSelectionChange({ value: { all: false, keys: new Set(value) }, target: null });\n        } else {\n          pendingSelectionCallback(detail, value);\n        }\n      }\n    },\n    [data, onSelectionChange, pendingSelectionCallback]\n  );\n\n  const value = useCollectionGestureContext();\n\n  const { selectionProps } = useSelection(\n    (element: HTMLElement) => {\n      if (element === rootRef.current) {\n        return currentKey === undefined ? null : currentKey;\n      }\n      return keyExtractor(element, ITEM_SELECTOR) as K;\n    },\n    selectedKeys,\n    selectionMode,\n    false,\n    'replace',\n    value === 'embedded',\n    handleSelectionChange,\n    anchorKey.current,\n    currentKey,\n    (currentKey: K | undefined, isPrev: boolean) =>\n      getPrevNextKey(rootRef.current, currentKey, isPrev, ITEM_SELECTOR),\n    undefined,\n    (key: K) => {\n      if (rootRef.current) {\n        const elem = findElementByKey(rootRef.current, key, ITEM_SELECTOR);\n        if (elem) {\n          const scroller = viewportConfig?.scroller();\n          const offset = scrollToVisibleOffset ? scrollToVisibleOffset(rootRef.current) : 0;\n          scrollToVisible(elem, scroller != null ? scroller : rootRef.current, offset);\n        }\n      }\n    },\n    handleSelectionRangeChange\n  );\n\n  const itemActionProps = useItemAction(\n    currentKey,\n    data,\n    onItemAction,\n    ITEM_SELECTOR,\n    value === 'embedded'\n  );\n\n  return {\n    eventProps: mergeProps(currentKeyProps, focusRingProps, selectionProps, itemActionProps),\n    showFocusRing,\n    handleSelectionChange\n  };\n};\n\nexport const handleSelectionRange = <K, D>(\n  detail: SelectionRangeDetail<K>,\n  dataState: DataState<K, D>\n) => {\n  const keys = dataState.data.map((value: { data: D; metadata: Metadata<K> }) => {\n    return value.metadata.key;\n  });\n  const startIndex = keys.indexOf(detail.value.start);\n  const endIndex = keys.indexOf(detail.value.end);\n  const minIndex = Math.min(startIndex, endIndex);\n  const maxIndex = Math.max(startIndex, endIndex);\n  if (minIndex === -1) {\n    // return a range to fetch so we can find all the keys, maxIndex should not be -1\n    return { offset: 0, count: dataState.totalSize };\n  } else {\n    // range of keys are in the current viewport, return them\n    return keys.slice(minIndex, maxIndex + 1);\n  }\n};\n","import { RefObject } from 'preact';\nimport { useCallback, useRef } from 'preact/hooks';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { Props as ListViewProps } from '../UNSAFE_ListView';\nimport { getFirstVisibleKey, keyExtractor } from '../utils/PRIVATE_collectionUtils';\nimport { isKeyDefined } from '../utils/UNSAFE_keys';\nimport { ITEM_SELECTOR } from './ListItem';\nimport { useTabbableModeSet } from '../hooks/PRIVATE_useTabbableModeSet';\nimport { findElementByKey } from '../utils/PRIVATE_collectionUtils';\nimport { scrollToVisible } from './ListUtils';\n\nexport const useFocusTabbableMode = <K extends string | number, D>(\n  currentKey: ListViewProps<K, D>['currentKey'],\n  onCurrentKeyChange: ListViewProps<K, D>['onCurrentKeyChange'],\n  allowTabbableMode: ListViewProps<K, D>['allowTabbableMode'],\n  rootRef: RefObject<HTMLDivElement>,\n  viewportConfig: ListViewProps<K, D>['viewportConfig'],\n  scrollToVisibleOffset: ListViewProps<K, D>['scrollToVisibleOffset']\n) => {\n  const pendingCurrentKey = useRef<K>();\n\n  const [isCurrentTabbableKey, tabbableModeProps] = useTabbableModeSet(\n    rootRef,\n    (element) => {\n      // we don't want List to go into Tabbable mode when user clicks on expander\n      return isExpander(element) ? null : (keyExtractor(element, ITEM_SELECTOR) as K);\n    },\n    currentKey,\n    onCurrentKeyChange\n  );\n\n  const handleInitialFocus = useCallback(() => {\n    if (\n      rootRef.current &&\n      onCurrentKeyChange &&\n      (!allowTabbableMode || isCurrentTabbableKey(undefined))\n    ) {\n      const firstKey =\n        pendingCurrentKey.current || (getFirstVisibleKey(rootRef.current, ITEM_SELECTOR) as K);\n      if (isKeyDefined(firstKey)) {\n        onCurrentKeyChange({ value: firstKey });\n      }\n    }\n  }, [rootRef, onCurrentKeyChange, allowTabbableMode, isCurrentTabbableKey]);\n\n  const handleFocus = useCallback(\n    (event: FocusEvent) => {\n      if (isExpander(event.target as HTMLElement)) {\n        rootRef.current?.focus();\n        const key = keyExtractor(event.target as HTMLElement, ITEM_SELECTOR);\n        if (onCurrentKeyChange && isKeyDefined(key)) {\n          onCurrentKeyChange({ value: key as K });\n        }\n        return;\n      }\n      if (!isKeyDefined(currentKey)) {\n        onCurrentKeyChange && handleInitialFocus();\n      } else if (rootRef.current) {\n        // if currentKey is defined, make sure scroll the current item into view when listview regains focus\n        const elem = findElementByKey(rootRef.current, currentKey as K, ITEM_SELECTOR);\n        if (elem) {\n          const scroller = viewportConfig?.scroller();\n          const offset = scrollToVisibleOffset ? scrollToVisibleOffset(rootRef.current) : 0;\n          scrollToVisible(elem, scroller != null ? scroller : rootRef.current, offset);\n        }\n      }\n    },\n    [currentKey, handleInitialFocus, onCurrentKeyChange, rootRef]\n  );\n\n  /**\n   * Need to track pointer down element to set currentItem when initial focus happens\n   */\n  const handlePointerDown = useCallback((event: PointerEvent) => {\n    const key = keyExtractor(event.target as HTMLElement, ITEM_SELECTOR);\n    if (isKeyDefined(key)) {\n      pendingCurrentKey.current = key as K;\n    }\n  }, []);\n\n  return {\n    eventProps: mergeProps(allowTabbableMode ? tabbableModeProps : {}, {\n      onFocus: handleFocus,\n      onPointerDown: handlePointerDown\n    }),\n    isCurrentTabbableKey\n  };\n};\n\nconst isExpander = (elem: HTMLElement) => {\n  if (elem.parentElement && elem.parentElement.classList.contains('oj-listview-expander')) {\n    return true;\n  }\n  return false;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { RefObject } from 'preact';\nimport { useRef, useCallback, useState, useImperativeHandle } from 'preact/hooks';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { containsKey, Keys, isKeyDefined } from '../utils/UNSAFE_keys';\nimport { DataState, ItemContext, ListItemRendererContext, Range } from '../UNSAFE_Collection';\nimport { LoadMoreCollection, LOADMORE_STYLE_CLASS } from '../PRIVATE_LoadMoreCollection';\nimport { VirtualizedCollection } from '../PRIVATE_VirtualizedCollection';\nimport { ViewportConfig } from '../hooks/UNSAFE_useViewportIntersect';\nimport { ListViewItem, ITEM_SELECTOR, MemoizeListViewItem } from './ListItem';\n\nimport { SelectionRangeDetail } from '../hooks/PRIVATE_useSelection';\nimport { SkeletonContainer } from './SkeletonContainer';\nimport { Skeleton } from '../UNSAFE_Skeleton';\nimport { Flex } from '../UNSAFE_Flex';\nimport { Selector } from '../UNSAFE_Selector';\nimport { Props } from '../UNSAFE_ListView';\nimport { Sparkle } from './Sparkle';\nimport { listStyles } from './themes/ListStyles.css';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\nimport { usePromotedSection } from './usePromotedSection';\nimport { useSelectionAndNavigation, handleSelectionRange } from './useSelectionAndNavigation';\nimport { useFocusTabbableMode } from './useFocusTabbableMode';\nimport { Inset } from '../UNSAFE_Inset';\n// TODO: add this import due to issue JET-67485, need to update once Stable is introduced\nimport './themes/redwood/ListBaseTheme.css';\n\n/**\n * Component that renders items as a flat list.\n * In order to maximize performance, only items that are visible in the viewport are rendered.\n */\nexport function List<K extends string | number, D>({\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  allowTabbableMode = true,\n  children,\n  currentKey,\n  data,\n  gridlines,\n  loadingIndicator = defaultLoadingIndicator,\n  onCurrentKeyChange,\n  onLoadRange,\n  onSelectionChange,\n  onItemAction,\n  rangeExtractor,\n  role = 'grid',\n  selectedKeys = emptyKeys as Keys<K>,\n  selectionMode = 'none',\n  viewportConfig,\n  currentItemVariant = 'none',\n  promotedSection,\n  isVirtualized = false,\n  customItemRenderer,\n  scrollToVisibleOffset,\n  testId,\n  scrollerRef,\n  reorderProps,\n  contextMenuTriggerProps,\n  ...props\n}: Props<K, D>) {\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  // tracking pending selection key that is not in current data\n  const pendingSelection = useRef<{ detail: SelectionRangeDetail<K>; range: Range }>();\n\n  const [active, setActive] = useState<boolean>(false);\n\n  const showGridline = (index: number) => {\n    // show bottom gridlines for each item, and for the last item if specified\n    return (\n      gridlines?.item === 'visible' &&\n      (index + 1 !== data?.totalSize || gridlines?.bottom === 'visible')\n    );\n  };\n\n  const showGridlineTop = () => {\n    // show the top gridline for the first item\n    return gridlines?.item === 'visible' && gridlines?.top === 'visible';\n  };\n\n  const ariaMultiSelectable = selectionMode === 'none' ? undefined : selectionMode === 'multiple';\n  const ariaRowCount =\n    data === null ? undefined : data.sizePrecision === 'exact' ? data.totalSize : -1;\n\n  const classes = classNames([listStyles.base]);\n\n  const pendingSelectionCallback = useCallback(\n    (detail: SelectionRangeDetail<K>, value: Range) => {\n      if (data) {\n        pendingSelection.current = {\n          detail: detail,\n          range: { offset: data.offset, count: data.data.length }\n        };\n        onLoadRange(value);\n      }\n    },\n    [data, onLoadRange]\n  );\n  const { eventProps, showFocusRing, handleSelectionChange } = useSelectionAndNavigation(\n    currentKey,\n    selectedKeys,\n    selectionMode,\n    onCurrentKeyChange,\n    onSelectionChange,\n    onItemAction,\n    data,\n    viewportConfig,\n    role,\n    scrollToVisibleOffset,\n    rootRef,\n    pendingSelectionCallback\n  );\n\n  const { eventProps: focusTabbableProps, isCurrentTabbableKey } = useFocusTabbableMode(\n    currentKey,\n    onCurrentKeyChange,\n    allowTabbableMode,\n    rootRef,\n    viewportConfig,\n    scrollToVisibleOffset\n  );\n\n  if (data && pendingSelection.current !== undefined && onSelectionChange) {\n    const keys = handleSelectionRange(pendingSelection.current.detail, data);\n    if (Array.isArray(keys)) {\n      onSelectionChange({ value: { all: false, keys: new Set(keys) }, target: null });\n    }\n    const range = pendingSelection.current\n      ? pendingSelection.current.range\n      : { offset: data.offset, count: data.data.length };\n    data = adjustDataState(data, range);\n    pendingSelection.current = undefined;\n    onLoadRange(range);\n  }\n\n  const { sparkleHeight, suggestions } = usePromotedSection(data, promotedSection, rootRef);\n\n  // TODO: check suggestions before Sparkle would cause a scrolling issue\n  const sparkleIndicator = <Sparkle sparkleHeight={sparkleHeight}></Sparkle>;\n\n  // Collection generic is of this type\n  type DataStateData = DataState<K, D>['data'][number];\n\n  // returns an ListItemContext based on ItemContext (added metadata and selector)\n  // note the type for ItemContext, this is the context coming from Collection\n  const getItemContext = useCallback(\n    (context: ItemContext<DataStateData>) => {\n      const dataStateData = context.data;\n      const selectorRenderer =\n        selectionMode === 'multiple'\n          ? () => (\n              <Selector\n                onChange={handleSelectionChange}\n                rowKey={dataStateData.metadata.key}\n                selectedKeys={selectedKeys}></Selector>\n            )\n          : undefined;\n\n      return {\n        index: context.index,\n        data: dataStateData.data,\n        metadata: dataStateData.metadata,\n        selector: selectorRenderer\n      };\n    },\n    [selectionMode, selectedKeys, handleSelectionChange]\n  );\n\n  const ItemComponent = isVirtualized ? ListViewItem : MemoizeListViewItem;\n\n  const childrenComponent = (context: ItemContext<DataStateData>) => {\n    const listItemContext = getItemContext(context);\n    const suggestion = suggestions?.get(listItemContext.metadata.key);\n    const isTabbable = allowTabbableMode && isCurrentTabbableKey(listItemContext.metadata.key);\n    const isFocused = currentKey === listItemContext.metadata.key && !isTabbable;\n    const isActive = isFocused && active;\n    const isSelected = containsKey(selectedKeys, listItemContext.metadata.key);\n    const isFocusRingVisible = isFocused && showFocusRing;\n    const listItemFunc = (ctx: ListItemRendererContext<K, D>, otherProps?: any) => (\n      <ItemComponent\n        key={listItemContext.metadata.key}\n        context={ctx}\n        isFocused={isFocused}\n        isFocusRingVisible={isFocusRingVisible}\n        isActive={isActive}\n        isGridlineVisible={showGridline(listItemContext.index)}\n        isSelected={isSelected}\n        isTabbable={allowTabbableMode && isCurrentTabbableKey(listItemContext.metadata.key)}\n        role={role}\n        selectionMode={selectionMode}\n        currentItemVariant={currentItemVariant}\n        {...(suggestion && { suggestion })}\n        {...(listItemContext.index === 0 && { isTopGridlineVisible: showGridlineTop() })}\n        {...otherProps}>\n        {children}\n      </ItemComponent>\n    );\n\n    // if customItemRenderer is specified (ExpandableList and GroupedList)\n    // create a custom context with additional info including a function\n    // that helps create the default item component\n    if (customItemRenderer) {\n      const customRendererContext = {\n        listItemContext,\n        isFocused,\n        isFocusRingVisible,\n        isSelected,\n        isTabbable,\n        isActive,\n        defaultListItem: listItemFunc\n      };\n      return customItemRenderer(customRendererContext);\n    }\n    return listItemFunc(listItemContext);\n  };\n\n  viewportConfig = getViewportConfig(rootRef, viewportConfig);\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === ' ' && isKeyDefined(currentKey) && selectionMode !== 'none') {\n        setActive(true);\n      }\n    },\n    [currentKey, selectionMode, setActive]\n  );\n\n  const handleKeyUp = useCallback(() => {\n    setActive(false);\n  }, [setActive]);\n\n  useImperativeHandle(scrollerRef!, () => rootRef.current);\n\n  // if data is not specified, listview should show loading indicator\n  // todo: replace placeholder with actual SkeletonContainer component (Ash is working on)\n  const testIdProps = useTestId(testId);\n  return (\n    <div\n      {...mergeProps(\n        eventProps,\n        focusTabbableProps,\n        contextMenuTriggerProps || {},\n        reorderProps || {},\n        {\n          onKeyDown: handleKeyDown,\n          onKeyUp: handleKeyUp\n        },\n        props\n      )}\n      {...testIdProps}\n      role={role}\n      aria-rowcount={role === 'grid' ? ariaRowCount : undefined}\n      aria-colcount={role === 'grid' ? 1 : undefined}\n      ref={rootRef}\n      class={classes}\n      tabIndex={0}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n      aria-multiselectable={ariaMultiSelectable}>\n      {data == null ? (\n        loadingIndicator\n      ) : isVirtualized ? (\n        <VirtualizedCollection\n          data={data}\n          itemSelector={ITEM_SELECTOR}\n          loadMoreIndicator={defaultLoadMoreIndicator}\n          onLoadRange={onLoadRange}\n          rangeExtractor={rangeExtractor}\n          suggestions={sparkleIndicator}\n          viewportConfig={viewportConfig}>\n          {childrenComponent}\n        </VirtualizedCollection>\n      ) : (\n        <LoadMoreCollection\n          data={data.data}\n          loadMoreIndicator={defaultLoadMoreIndicator}\n          hasMore={data.sizePrecision === 'atLeast' && data.data.length <= data.totalSize}\n          onLoadMore={() => {\n            data && onLoadRange({ offset: 0, count: data.data.length + 25 });\n          }}\n          suggestions={sparkleIndicator}\n          viewportConfig={viewportConfig}>\n          {childrenComponent}\n        </LoadMoreCollection>\n      )}\n    </div>\n  );\n}\n\nconst getViewportConfig = (rootRef: RefObject<HTMLElement>, config?: ViewportConfig) => {\n  return (\n    config ?? {\n      scroller: () => {\n        return rootRef.current;\n      }\n    }\n  );\n};\n\nconst emptyKeys = { all: false, keys: new Set() };\n\nconst defaultLoadingIndicator = (\n  <SkeletonContainer minimumCount={25}>\n    {() => {\n      return (\n        <Inset variant=\"listview\">\n          <Flex height=\"6x\" align=\"center\">\n            <Skeleton height=\"4x\" />\n          </Flex>\n        </Inset>\n      );\n    }}\n  </SkeletonContainer>\n);\n\nconst defaultLoadMoreIndicator = (\n  <div class={LOADMORE_STYLE_CLASS}>\n    <SkeletonContainer minimumCount={3}>\n      {() => {\n        return (\n          <Inset variant=\"listview\">\n            <Flex height=\"6x\" align=\"center\">\n              <Skeleton height=\"4x\" />\n            </Flex>\n          </Inset>\n        );\n      }}\n    </SkeletonContainer>\n  </div>\n);\n\n/**\n * Adjust the DataState as needed if it contains more than needed for the specified range\n */\nconst adjustDataState = <K, D>(dataState: DataState<K, D>, range: Range | null) => {\n  if (range) {\n    // prevent range offset from being larger than the data state\n    const safeRangeOffset = Math.min(range.offset, dataState.offset + dataState.totalSize);\n    const diff = safeRangeOffset - dataState.offset;\n    if (diff > 0) {\n      dataState = {\n        offset: safeRangeOffset,\n        data: dataState.data.slice(diff, diff + range.count),\n        totalSize: dataState.totalSize,\n        sizePrecision: dataState.sizePrecision\n      };\n    }\n  }\n  return dataState;\n};\n"],"names":["_jsx"],"mappings":"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"}