{"version":3,"file":"refUtils-915b985d.js","sources":["../../src/utils/PRIVATE_refUtils/refUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Ref } from 'preact';\n\nexport function assignRef<T>(ref: Ref<T> | undefined, value: T | null) {\n  if (ref == null) return;\n\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\n\nexport function mergeRefs<T>(...refs: (Ref<T> | undefined)[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n"],"names":[],"mappings":";;;AASgB,SAAA,SAAS,CAAI,GAAuB,EAAE,KAAe,EAAA;IACnE,IAAI,GAAG,IAAI,IAAI;QAAE,OAAO;AAExB,IAAA,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;QAC7B,GAAG,CAAC,KAAK,CAAC,CAAC;QACX,OAAO;KACR;AAED,IAAA,IAAI;AACF,QAAA,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;KACrB;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,CAAA,qBAAA,EAAwB,KAAK,CAAa,UAAA,EAAA,GAAG,CAAG,CAAA,CAAA,CAAC,CAAC;KACnE;AACH,CAAC;AAEe,SAAA,SAAS,CAAI,GAAG,IAA4B,EAAA;IAC1D,OAAO,CAAC,IAAc,KAAI;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9C,KAAC,CAAC;AACJ;;;;;"}