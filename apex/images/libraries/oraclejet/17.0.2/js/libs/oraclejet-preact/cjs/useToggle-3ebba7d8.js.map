{"version":3,"file":"useToggle-3ebba7d8.js","sources":["../../src/hooks/UNSAFE_useToggle/useToggle.ts"],"sourcesContent":["import { useState, useMemo } from 'preact/hooks';\n\n/**\n * useToggle is a state toggle hook\n *\n * @param defaultValue\n * @returns\n */\n\nexport function useToggle(defaultValue = false) {\n  const [bool, setBool] = useState(defaultValue);\n  const toggleHandlers = useMemo(() => {\n    return {\n      toggle: () => setBool((x) => !x),\n      setTrue: () => setBool(true),\n      setFalse: () => setBool(false)\n    };\n  }, [setBool]);\n\n  return {\n    bool,\n    ...toggleHandlers\n  };\n}\n"],"names":["useState","useMemo"],"mappings":";;;;;AAEA;;;;;AAKG;AAEa,SAAA,SAAS,CAAC,YAAY,GAAG,KAAK,EAAA;IAC5C,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAGA,cAAQ,CAAC,YAAY,CAAC,CAAC;AAC/C,IAAA,MAAM,cAAc,GAAGC,aAAO,CAAC,MAAK;QAClC,OAAO;AACL,YAAA,MAAM,EAAE,MAAM,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAChC,YAAA,OAAO,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC;AAC5B,YAAA,QAAQ,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC;SAC/B,CAAC;AACJ,KAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,OAAO;QACL,IAAI;AACJ,QAAA,GAAG,cAAc;KAClB,CAAC;AACJ;;;;"}