{"version":3,"file":"listViewSelectionTests-ebf987d2.js","sources":["../../src/PRIVATE_List/__tests__/shared/listViewTests.tsx","../../src/PRIVATE_List/__tests__/shared/listViewSelectionTests.tsx"],"sourcesContent":["import { fireEvent, render, screen, waitFor } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { VNode } from 'preact';\n\nimport {\n  CurrentItemVariant,\n  ItemActionDetail,\n  Metadata,\n  SelectionMode\n} from '../../../UNSAFE_Collection';\nimport { RootEnvironmentProvider } from '../../../UNSAFE_Environment';\nimport type { RootEnvironment } from '../../../UNSAFE_Environment';\nimport { Gridlines, ListViewScrollPosition } from '../../../UNSAFE_ListView';\nimport { Keys } from '../../../utils/UNSAFE_keys';\nimport { matchTranslationBundle } from '../../../utils/UNSAFE_matchTranslationBundle';\nimport { CollectionGestureContext } from '../../../hooks/PRIVATE_useCollectionGestureContext';\nimport { MenuItem } from '../../../UNSAFE_Menu';\nimport translations from '../../../resources/nls/en/bundle';\n\nimport { populateData } from './listViewTestFixtures';\nimport type { Employee } from './listViewTestFixtures';\nimport {\n  getContents,\n  getItems,\n  getRoot,\n  mouseItemSelection,\n  fireDragAndDropEvent,\n  keyboardReorder\n} from './testHelpers';\nimport {\n  getAllMenuItemsByRole,\n  getMenuItemByRole,\n  getLabel\n} from '../../../UNSAFE_Menu/__tests__/menuTestsUtils';\nimport { xUnits } from '../../../UNSAFE_Theme/utils';\nimport { ListViewContextMenuConfig } from '../../../UNSAFE_ListView/List.types';\nimport { getClientHints } from '../../../utils/PRIVATE_clientHints';\n\n//TODO: JET-63873\nfunction getSparkle(grid: HTMLElement) {\n  return grid.querySelector('.oj-collection-sparkle')?.firstElementChild as HTMLElement;\n}\nexport type Props<K, D> = {\n  currentItemVariant?: CurrentItemVariant;\n  data: { data: Employee<K>; metadata: Metadata<K> }[];\n  gridlines?: Gridlines;\n  initialKey?: K;\n  onItemAction?: (detail: ItemActionDetail<K, D>) => void;\n  selectedKeys?: Keys<K>;\n  selectionMode?: SelectionMode;\n  onClick?: () => void;\n  scrollPositionOverride?: ListViewScrollPosition<K>;\n  isReorderEnabled?: boolean;\n  contextMenuConfig?: ListViewContextMenuConfig<K, D>;\n};\n\ntype TestComponentProps<K extends string | number, D> = (props: Props<K, D>) => VNode;\n\nexport const testRender = (TestComponent: TestComponentProps<any, any>) => {\n  it('initial render', async function () {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const items = await getItems();\n    expect(items.length).eq(25);\n  });\n\n  // skip this test in jest, only run it in karma mocha\n  if (typeof jest == typeof undefined) {\n    it('initial render with sparkle', async () => {\n      const data = populateData(100) as Employee<string>[];\n      let dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n        (data) => {\n          return { data: data, metadata: { key: data.id } };\n        }\n      );\n\n      // add suggestions\n      dataMetadata[3].metadata.suggestion = { enable: true };\n      dataMetadata[7].metadata.suggestion = { enable: true };\n      dataMetadata[9].metadata.suggestion = { enable: true };\n\n      const suggestions = dataMetadata.filter((d) => d.metadata.suggestion);\n      dataMetadata = dataMetadata.filter((d) => !d.metadata.suggestion);\n      dataMetadata.unshift(...suggestions);\n\n      render(<TestComponent data={dataMetadata}></TestComponent>);\n      const grid = await getRoot();\n      const sparkle = getSparkle(grid);\n      expect(sparkle !== undefined).eq(true);\n\n      const items = await getItems();\n      expect(items?.length).eq(25);\n      expect(items[0].dataset['ojSuggestion']).eq('true');\n      expect(items[1].dataset['ojSuggestion']).eq('true');\n      expect(items[2].dataset['ojSuggestion']).eq('true');\n\n      const sparkleHeight = items[0].offsetHeight + items[1].offsetHeight + items[2].offsetHeight;\n      expect(sparkleHeight).eq(sparkle.offsetHeight);\n    });\n  }\n};\n\nexport const testContextMenu = (TestComponent: TestComponentProps<string, Employee<any>>) => {\n  it(\"Jet context menu appears when there's no text selection\", async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent\n          data={dataMetadata}\n          contextMenuConfig={{\n            itemsRenderer: (context) => {\n              const data = context.data;\n              return (\n                <>\n                  <MenuItem label={`MenuItem${data ? data.id : ''}`}></MenuItem>\n                  <MenuItem label=\"MenuItem2\"></MenuItem>\n                  <MenuItem label=\"MenuItem3\"></MenuItem>\n                </>\n              );\n            }\n          }}></TestComponent>\n      </RootEnvironmentProvider>\n    );\n    const items = await getContents();\n    const grid = await getRoot();\n    const firstItem = items[0];\n\n    fireEvent.contextMenu(firstItem, {\n      clientX: 50,\n      clientY: 50,\n      currentTarget: grid\n    });\n\n    const menu = getMenuItemByRole('menu');\n    const menuItems = getAllMenuItemsByRole('menuitem');\n    //With this we check context menu context was set correctly\n    const menuItemGotByLabel = getLabel('MenuItemi0');\n\n    expect(menu).not.null;\n    expect(menuItems.length).equals(3);\n    expect(menuItemGotByLabel).not.null;\n  });\n\n  it('ContextMenu on Shift-F10', async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent\n          data={dataMetadata}\n          contextMenuConfig={{\n            itemsRenderer: (context) => {\n              const data = context.data;\n              return (\n                <>\n                  <MenuItem label={`MenuItem${data ? data.id : ''}`}></MenuItem>\n                  <MenuItem label=\"MenuItem2\"></MenuItem>\n                  <MenuItem label=\"MenuItem3\"></MenuItem>\n                </>\n              );\n            }\n          }}></TestComponent>\n      </RootEnvironmentProvider>\n    );\n    const grid = await getRoot();\n    const items = await getContents();\n    const firstItem = items[0];\n\n    //We do the necessary to have firstItem as current item\n    fireEvent.click(items[0]);\n    expect(grid.getAttribute('aria-activedescendant')).eq(firstItem.id);\n\n    fireEvent.keyDown(grid, { key: 'F10', shiftKey: true });\n\n    const menu = getMenuItemByRole('menu');\n    const menuItems = getAllMenuItemsByRole('menuitem');\n    //With this we check context menu context was set correctly\n    const menuItemGotByLabel = getLabel('MenuItemi0');\n\n    expect(menu).not.null;\n    expect(menuItems.length).equals(3);\n    expect(menuItemGotByLabel).not.null;\n  });\n\n  it(\"Jet context menu doesn't appear when there is text selection\", async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    render(\n      <RootEnvironmentProvider>\n        <TestComponent\n          data={dataMetadata}\n          contextMenuConfig={{\n            itemsRenderer: (context) => {\n              const data = context.data;\n              return (\n                <>\n                  <MenuItem label={`MenuItem${data ? data.id : ''}`}></MenuItem>\n                  <MenuItem label=\"MenuItem2\"></MenuItem>\n                  <MenuItem label=\"MenuItem3\"></MenuItem>\n                </>\n              );\n            }\n          }}></TestComponent>\n      </RootEnvironmentProvider>\n    );\n    const items = await getContents();\n    const grid = await getRoot();\n    const firstItem = items[0];\n\n    const elem = await screen.findByText(firstItem.textContent || '');\n\n    // Set text selection\n    await userEvent.pointer([\n      { target: elem, offset: 0, keys: '[MouseLeft>]' },\n      { offset: 5 },\n      { keys: '[/MouseLeft]' }\n    ]);\n\n    fireEvent.contextMenu(firstItem, {\n      clientX: 50,\n      clientY: 50,\n      currentTarget: grid\n    });\n\n    const menu = screen.queryByRole('menu');\n\n    expect(menu).null;\n  });\n\n  it('Ios context menu appears after 1500ms', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    render(\n      <RootEnvironmentProvider>\n        <TestComponent\n          data={dataMetadata}\n          contextMenuConfig={{\n            itemsRenderer: (context) => {\n              const data = context.data;\n              return (\n                <>\n                  <MenuItem label={`MenuItem${data ? data.id : ''}`}></MenuItem>\n                  <MenuItem label=\"MenuItem2\"></MenuItem>\n                  <MenuItem label=\"MenuItem3\"></MenuItem>\n                </>\n              );\n            }\n          }}></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    const firstItem = items[0];\n\n    if (typeof jest === 'undefined') {\n      const { deviceType, platform } = getClientHints();\n      const isMobile = deviceType === 'phone';\n      const isIos = platform === 'ios';\n\n      if (isMobile && isIos) {\n        const timeout = (ms: number) => {\n          return new Promise((resolve) => setTimeout(resolve, ms));\n        };\n        // Touch objects are created so we can replicate this in fake touch events\n        // This stuff is based on what useSwipe triggers and could change depending on the final decision\n        // on what events to trigger on useSwipe.\n        const touch1 = new Touch({\n          target: firstItem,\n          identifier: 0,\n          pageX: 386,\n          pageY: 224\n        });\n\n        if (firstItem) {\n          fireEvent.touchStart(firstItem, {\n            timeStamp: 10406,\n            currentTarget: firstItem,\n            touches: [touch1]\n          });\n        }\n        await timeout(1550);\n        const menu = getMenuItemByRole('menu');\n        const menuItems = getAllMenuItemsByRole('menuitem');\n        //With this we check context menu context was set correctly\n        const menuItemGotByLabel = getLabel('MenuItemi0');\n\n        expect(menu).not.null;\n        expect(menuItems.length).equals(3);\n        expect(menuItemGotByLabel).not.null;\n      }\n    }\n  });\n};\n\nexport const testAria = (TestComponent: TestComponentProps<any, any>) => {\n  it('aria structure and properties (select-none)', async function () {\n    const data = populateData(10) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const grid = await getRoot();\n    expect(grid.getAttribute('aria-rowcount')).eq('10');\n    expect(grid.getAttribute('aria-multiselectable')).eq(null);\n\n    const items = await getItems();\n    expect(items.length).eq(10);\n    expect(items[0].getAttribute('aria-rowindex')).eq('1');\n\n    const cells = await getContents();\n    expect(cells.length).eq(10);\n    expect(cells[0].getAttribute('aria-colindex')).eq('1');\n    expect(cells[0].getAttribute('aria-selected')).eq(null);\n  });\n\n  it('aria structure and properties (single-select)', async function () {\n    const data = populateData(10) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} selectionMode=\"single\"></TestComponent>);\n    const grid = await getRoot();\n    expect(grid.getAttribute('aria-rowcount')).eq('10');\n    expect(grid.getAttribute('aria-multiselectable')).eq('false');\n\n    const items = await getItems();\n    expect(items.length).eq(10);\n    expect(items[0].getAttribute('aria-rowindex')).eq('1');\n\n    const cells = await getContents();\n    expect(cells.length).eq(10);\n    expect(cells[0].getAttribute('aria-colindex')).eq('1');\n    expect(cells[0].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('aria structure and properties (multi-select)', async function () {\n    const data = populateData(10) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    expect(grid.getAttribute('aria-rowcount')).eq('10');\n    expect(grid.getAttribute('aria-multiselectable')).eq('true');\n\n    const items = await getItems();\n    expect(items.length).eq(10);\n    expect(items[0].getAttribute('aria-rowindex')).eq('1');\n\n    const cells = await getContents();\n    expect(cells.length).eq(10);\n    expect(cells[0].getAttribute('aria-colindex')).eq('1');\n    expect(cells[0].getAttribute('aria-selected')).eq('false');\n  });\n};\n\nexport const testKeys = (TestComponent: TestComponentProps<any, any>) => {\n  it('supports currentKey logic with numeric key', async () => {\n    const data = populateData(100, true) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const grid = await getRoot();\n    expect(grid.hasAttribute('aria-activedescendant')).eq(false);\n    const items = await getContents();\n    fireEvent.click(items[0]);\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[1].id);\n    fireEvent.keyDown(grid, { key: 'ArrowUp' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n  });\n\n  it('supports currentKey logic with string key', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const grid = await getRoot();\n    expect(grid.hasAttribute('aria-activedescendant')).eq(false);\n    const items = await getContents();\n    fireEvent.click(items[0]);\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[1].id);\n    fireEvent.keyDown(grid, { key: 'ArrowUp' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n  });\n\n  it('checking key type - string key', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const items = await getItems();\n    expect((items[0] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n    expect((items[1] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n    expect((items[2] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n  });\n\n  it('checking key type - numeric key', async () => {\n    const data = populateData(3, true) as Employee<number>[];\n    const dataMetadata: { data: Employee<number>; metadata: Metadata<number> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const items = await getItems();\n    expect((items[0] as HTMLElement).dataset['ojKeyType']).eq('number');\n    expect((items[1] as HTMLElement).dataset['ojKeyType']).eq('number');\n    expect((items[2] as HTMLElement).dataset['ojKeyType']).eq('number');\n  });\n};\n\nexport const testGridlines = (TestComponent: TestComponentProps<any, any>) => {\n  const isTopGridlineVisible = (item: HTMLElement) => {\n    const className = item.className;\n    return className.indexOf('gridlineTop_visible') > 0;\n  };\n\n  const isBottomGridlineVisible = (item: HTMLElement) => {\n    const className = item.className;\n    return className.indexOf('gridlineBottom_visible') > 0;\n  };\n\n  const isGridlineHidden = (item: HTMLElement) => {\n    return !isTopGridlineVisible(item) && !isBottomGridlineVisible(item);\n  };\n\n  it('gridlines - gridlines are hidden', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const items = await getItems();\n    expect(isGridlineHidden(items[0])).to.be.true;\n    expect(isGridlineHidden(items[1])).to.be.true;\n    expect(isGridlineHidden(items[2])).to.be.true;\n  });\n\n  it('gridlines - bottom gridlines are visible', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const visible = { item: 'visible' as const, bottom: 'visible' as const };\n    render(<TestComponent data={dataMetadata} gridlines={visible}></TestComponent>);\n    const items = await getItems();\n    expect(isBottomGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[1])).to.be.true;\n    expect(isBottomGridlineVisible(items[2])).to.be.true;\n  });\n\n  it('gridlines - bottom gridlines are visible except for the last list item', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const visibleExceptLast = { item: 'visible' as const };\n    render(<TestComponent data={dataMetadata} gridlines={visibleExceptLast}></TestComponent>);\n    const items = await getItems();\n    expect(isBottomGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[1])).to.be.true;\n    expect(isBottomGridlineVisible(items[2])).to.be.false;\n  });\n\n  it('gridlines - bottom gridlines are visible; The top gridlines of the first list item is visible', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const visibleWithFirst = {\n      item: 'visible' as const,\n      top: 'visible' as const,\n      bottom: 'visible' as const\n    };\n    render(<TestComponent data={dataMetadata} gridlines={visibleWithFirst}></TestComponent>);\n    const items = await getItems();\n    expect(isTopGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[1])).to.be.true;\n    expect(isBottomGridlineVisible(items[2])).to.be.true;\n  });\n\n  it('gridlines - bottom gridlines are visible except for the last list item. The top gridlines of the first list item is visible.', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const visibleWithFirstButNotLast = { item: 'visible' as const, top: 'visible' as const };\n    render(\n      <TestComponent data={dataMetadata} gridlines={visibleWithFirstButNotLast}></TestComponent>\n    );\n    const items = await getItems();\n    expect(isTopGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[0])).to.be.true;\n    expect(isBottomGridlineVisible(items[1])).to.be.true;\n    expect(isBottomGridlineVisible(items[2])).to.be.false;\n  });\n};\n\nexport const testItemAction = (TestComponent: TestComponentProps<any, any>) => {\n  const isMetadataEqual = (metadata1: Metadata<any>, metadata2: Metadata<any>) => {\n    return metadata1.key === metadata2.key;\n  };\n\n  const isFocusHighlight = (item: HTMLElement) => {\n    const className = item.className;\n    return (\n      className.indexOf('focusHighlight_isFocusHighlight') > 0 ||\n      className.indexOf('MultiVariantStyles_compound') > 0\n    );\n  };\n\n  it('ItemAction - test click on item', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    let count = 0;\n    const onItemAction = <K, D>(detail: ItemActionDetail<K, D>) => {\n      if (count === 0) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 1) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 2) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[2].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[2].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      }\n      count++;\n    };\n    render(<TestComponent data={dataMetadata} onItemAction={onItemAction}></TestComponent>);\n    const items = await getItems('row');\n    fireEvent.click(items[1]);\n    fireEvent.click(items[1]);\n    fireEvent.click(items[2]);\n    expect(count).eq(3);\n  });\n\n  it('ItemAction - test press enter on item', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    let count = 0;\n    const onItemAction = <K, D>(detail: ItemActionDetail<K, D>) => {\n      if (count === 1) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 2) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 3) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[2].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[2].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      }\n      count++;\n    };\n    render(<TestComponent data={dataMetadata} onItemAction={onItemAction}></TestComponent>);\n    const grid = await getRoot();\n    const items = await getItems('row');\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(items[1], { key: 'Enter' });\n    fireEvent.keyDown(items[1], { key: 'Enter' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(items[2], { key: 'Enter' });\n    expect(count).eq(4);\n  });\n\n  it('ItemAction - test press spacebar on item (Context value is embedded)', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    let count = 0;\n    const onItemAction = <K, D>(detail: ItemActionDetail<K, D>) => {\n      if (count === 1) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 2) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[1].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      } else if (count === 3) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[2].data);\n        expect(\n          isMetadataEqual(detail.context.metadata, dataMetadata[2].metadata),\n          'Context metadata is correct'\n        ).eq(true);\n      }\n      count++;\n    };\n    render(\n      <CollectionGestureContext.Provider value={'embedded'}>\n        <TestComponent data={dataMetadata} onItemAction={onItemAction}></TestComponent>\n      </CollectionGestureContext.Provider>\n    );\n    const grid = await getRoot();\n    const items = await getItems('row');\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(items[1], { key: ' ' });\n    fireEvent.keyDown(items[1], { key: ' ' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(items[2], { key: ' ' });\n    expect(count).eq(4);\n  });\n\n  it('ItemAction - test press spacebar on item (Context value is default)', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    let count = 0;\n    const onItemAction = <K, D>(detail: ItemActionDetail<K, D>) => {\n      if (count === 1) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(detail.context.metadata, 'Context metadata is correct').eq(dataMetadata[1].metadata);\n      } else if (count === 2) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[1].data);\n        expect(detail.context.metadata, 'Context metadata is correct').eq(dataMetadata[1].metadata);\n      } else if (count === 3) {\n        expect(detail.context.data, 'Context data is correct').eq(dataMetadata[2].data);\n        expect(detail.context.metadata, 'Context metadata is correct').eq(dataMetadata[2].metadata);\n      }\n      count++;\n    };\n    render(\n      <CollectionGestureContext.Provider value={'default'}>\n        <TestComponent data={dataMetadata} onItemAction={onItemAction}></TestComponent>\n      </CollectionGestureContext.Provider>\n    );\n    const grid = await getRoot();\n    const items = await getItems('row');\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(items[1], { key: ' ' });\n    fireEvent.keyDown(items[1], { key: ' ' });\n    expect(count).eq(1);\n  });\n\n  it('currentItemVariant - highlight', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: {\n      data: Employee<string>;\n      metadata: Metadata<string>;\n    }[] = data.map((data) => {\n      return { data: data, metadata: { key: data.id } };\n    });\n    render(\n      <TestComponent\n        data={dataMetadata}\n        initialKey={dataMetadata[1].metadata.key}\n        currentItemVariant=\"highlight\"></TestComponent>\n    );\n    const items = await getItems();\n    expect(isFocusHighlight(items[0])).to.be.false;\n\n    fireEvent.click(items[0]);\n    expect(isFocusHighlight(items[0])).to.be.true;\n  });\n\n  it('currentItemVariant - none', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: {\n      data: Employee<string>;\n      metadata: Metadata<string>;\n    }[] = data.map((data) => {\n      return { data: data, metadata: { key: data.id } };\n    });\n    render(\n      <TestComponent\n        data={dataMetadata}\n        initialKey={dataMetadata[1].metadata.key}\n        currentItemVariant=\"none\"></TestComponent>\n    );\n    const items = await getItems();\n    expect(isFocusHighlight(items[0])).to.be.false;\n\n    fireEvent.click(items[0]);\n    expect(isFocusHighlight(items[0])).to.be.false;\n  });\n};\n\nexport const testNavigation = (TestComponent: TestComponentProps<any, any>) => {\n  it('arrow keys', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata}></TestComponent>);\n    const grid = await getRoot();\n    expect(grid.hasAttribute('aria-activedescendant')).eq(false);\n    const items = await getContents();\n    fireEvent.click(items[0]);\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[1].id);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[2].id);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[2].id);\n    fireEvent.keyDown(grid, { key: 'ArrowUp' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[1].id);\n    fireEvent.keyDown(grid, { key: 'ArrowUp' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n    fireEvent.keyDown(grid, { key: 'ArrowUp' });\n    expect(grid.getAttribute('aria-activedescendant')).eq(items[0].id);\n  });\n\n  // test in karma mocha only since it involves scrolling\n  if (typeof jest === 'undefined') {\n    it('test scroll into view when listview regains focus', async () => {\n      const data = populateData(10) as Employee<string>[];\n      const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n        (data) => {\n          return { data: data, metadata: { key: data.id } };\n        }\n      );\n\n      // the initial current item is Employee 9\n      render(<TestComponent data={dataMetadata} initialKey={data[9].id}></TestComponent>);\n\n      const grid = await getRoot();\n      await waitFor(() => {\n        expect(grid.scrollTop).to.greaterThanOrEqual(280);\n      });\n\n      // scroll listview up until scrollTop is 0\n      grid.scrollTop = 0;\n      await waitFor(() => {\n        expect(grid.scrollTop).to.eq(0);\n      });\n\n      // tab into listview, should scroll Employee 9 into view\n      await userEvent.tab();\n      await waitFor(() => {\n        expect(grid.scrollTop).to.greaterThanOrEqual(280);\n      });\n    });\n  }\n};\n\nexport const testScrollPosition = (TestComponent: TestComponentProps<any, any>) => {\n  if (typeof jest === 'undefined') {\n    it('Scroll position', async () => {\n      const data = populateData(20) as Employee<string>[];\n      const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n        (data) => {\n          return { data: data, metadata: { key: data.id } };\n        }\n      );\n\n      render(\n        <div style={`height: ${xUnits(50)}; overflow: auto`}>\n          <TestComponent\n            data={dataMetadata}\n            scrollPositionOverride={{\n              key: data[4].id\n            }}></TestComponent>\n        </div>\n      );\n      const position = screen.getByText(data[4].id + ' 200 0');\n      expect(position).to.exist;\n    });\n  }\n};\n\nexport const testReorder = (TestComponent: TestComponentProps<any, any>) => {\n  it('reorder - fire Drag and Drop Event', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const { queryByTestId } = render(<TestComponent data={dataMetadata} isReorderEnabled={true} />);\n\n    let items = await getItems();\n    const count = items.length;\n    const firstItemDragIcon = queryByTestId(\n      `drag-icon-${items[0].dataset['ojKey']}`\n    ) as HTMLElement;\n    const thirdItemDragIcon = queryByTestId(\n      `drag-icon-${items[2].dataset['ojKey']}`\n    ) as HTMLElement;\n    const firstItem = items[0];\n\n    // drag the first item and drop on the third item\n    fireDragAndDropEvent(firstItemDragIcon, thirdItemDragIcon);\n    await waitFor(async () => {\n      items = await getItems();\n      const updatedThirdItem = items[2];\n      expect(firstItem).equals(updatedThirdItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  it('reorder - reorder the first item to down using keyboard', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} isReorderEnabled={true} />);\n\n    const list = await getRoot();\n    let items = await getItems();\n    const count = items.length;\n    const firstItem = items[0];\n\n    // reorder the first item up\n    mouseItemSelection(firstItem);\n    keyboardReorder(list, 'ArrowUp');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[0];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // reorder the first item down\n    keyboardReorder(list, 'ArrowDown');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[1];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // continuous reorder the first item down\n    keyboardReorder(list, 'ArrowDown');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[2];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  it('reorder - reorder the last item to up using keyboard', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(<TestComponent data={dataMetadata} isReorderEnabled={true} />);\n\n    const list = await getRoot();\n    let items = await getItems();\n    const count = items.length;\n    const startIndex = items.length - 1;\n    const lastItem = items[startIndex];\n\n    // reorder the last item down\n    mouseItemSelection(lastItem.firstElementChild as HTMLElement);\n    keyboardReorder(list, 'ArrowDown');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[startIndex];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // reorder the last item up\n    keyboardReorder(list, 'ArrowUp');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[startIndex - 1];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // continuous reorder the last item up\n    keyboardReorder(list, 'ArrowUp');\n    await waitFor(async () => {\n      items = await getItems();\n      const reorderedItem = items[startIndex - 2];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  if (typeof jest == typeof undefined) {\n    it('reorder - test instruction text', async () => {\n      const data = populateData(3) as Employee<string>[];\n      const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n        (data) => {\n          return { data: data, metadata: { key: data.id } };\n        }\n      );\n\n      // get instruction text\n      const { deviceType, platform } = getClientHints();\n      const keyPressed =\n        platform === 'windows' ? translations.accControlKey() : translations.accCommandKey();\n      const reorderInstructions =\n        deviceType === 'phone' || deviceType === 'tablet'\n          ? ''\n          : translations.accReorderInstructions({\n              keyPressed: keyPressed\n            });\n\n      // instruction text should exist when reorder is enabled\n      const { rerender } = render(<TestComponent data={dataMetadata} isReorderEnabled={true} />);\n      let instructionText = screen.queryByText(reorderInstructions);\n      expect(instructionText).not.to.be.null;\n\n      // instruction text should not exist when reorder is disabled\n      rerender(<TestComponent data={dataMetadata} />);\n      instructionText = screen.queryByText(reorderInstructions);\n      expect(instructionText).to.be.null;\n    });\n  }\n};\n","import { fireEvent, render, waitFor } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { VNode } from 'preact';\n\nimport { Metadata, SelectionMode } from '../../../UNSAFE_Collection';\nimport { RootEnvironmentProvider } from '../../../UNSAFE_Environment';\nimport type { RootEnvironment } from '../../../UNSAFE_Environment';\nimport { Gridlines } from '../../../UNSAFE_ListView';\nimport { Keys } from '../../../utils/UNSAFE_keys';\nimport { matchTranslationBundle } from '../../../utils/UNSAFE_matchTranslationBundle';\nimport { CollectionGestureContext } from '../../../hooks/PRIVATE_useCollectionGestureContext';\n\nimport { populateData } from './listViewTestFixtures';\nimport type { Employee } from './listViewTestFixtures';\nimport { getContents, getRoot, mouseCheckboxSelection, mouseItemSelection } from './testHelpers';\n\ntype Props<K> = {\n  data: { data: Employee<K>; metadata: Metadata<K> }[];\n  selectedKeys?: Keys<K>;\n  selectionMode?: SelectionMode;\n  gridlines?: Gridlines;\n  onClick?: () => void;\n};\n\ntype TestComponentProps<K extends string | number> = (props: Props<K>) => VNode;\n\nexport const testSelection = (TestComponent: TestComponentProps<any>) => {\n  it('select single - numeric key', async () => {\n    const data = populateData(10, true) as Employee<number>[];\n    const dataMetadata: { data: Employee<number>; metadata: Metadata<number> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    render(\n      <TestComponent\n        data={dataMetadata}\n        selectionMode=\"single\"\n        onClick={() => {\n          expect(false, 'Click event should not propagate').to.be.true;\n        }}></TestComponent>\n    );\n    const items = await getContents();\n\n    mouseItemSelection(items[3]);\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n\n    mouseItemSelection(items[5]);\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    mouseItemSelection(items[7]);\n    await waitFor(() => {\n      expect(items[7].getAttribute('aria-selected')).eq('true');\n    });\n  });\n\n  it('select multiple items using shift click', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    mouseItemSelection(items[2]);\n    mouseItemSelection(items[5], { shiftKey: true });\n    // console.log('here');\n    // console.log(list.debug());\n    await waitFor(() => {\n      //TODO: Add a reliable way to use waitFor correctly.JET-63874\n      /* eslint-disable */\n      expect(items[1].getAttribute('aria-selected')).eq('false');\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n      expect(items[6].getAttribute('aria-selected')).eq('false');\n      /* eslint-enable */\n    });\n  }, 3000);\n\n  it('select multiple items using shift space bar', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    fireEvent.keyUp(items[2], { key: ' ' });\n    fireEvent.keyUp(items[5], { key: ' ', shiftKey: true });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n    expect(items[5].getAttribute('aria-selected')).eq('true');\n    expect(items[6].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('selects multiple items when clicking on Selector checkboxes', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const selected: Keys<string> = { all: false, keys: new Set([data[2].id]) };\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent\n          data={dataMetadata}\n          selectionMode=\"multiple\"\n          selectedKeys={selected}></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    mouseCheckboxSelection(4);\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n  });\n\n  it('correctly modifies range selection when using SPACE to select', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    fireEvent.keyUp(items[2], { key: ' ' });\n    fireEvent.keyUp(items[5], { key: ' ', shiftKey: true });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n    expect(items[5].getAttribute('aria-selected')).eq('true');\n    expect(items[6].getAttribute('aria-selected')).eq('false');\n\n    // keyboard select to \"toggle\" one item off\n    fireEvent.keyUp(items[3], { key: ' ' });\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n\n    // keyboard select again to \"replace\" with single selection only\n    fireEvent.keyUp(items[3], { key: ' ' });\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('selects single items using space keypress', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    fireEvent.keyUp(items[2], { key: ' ' });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    fireEvent.keyUp(items[3], { key: ' ' });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  }, 3000);\n\n  it('selects single items using enter keypress (Context value is embedded)', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <CollectionGestureContext.Provider value={'embedded'}>\n          <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n        </CollectionGestureContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    fireEvent.keyUp(items[2], { key: 'Enter' });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    fireEvent.keyUp(items[3], { key: 'Enter' });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('selects single items using enter keypress (Context value is default)', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <CollectionGestureContext.Provider value={'default'}>\n          <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n        </CollectionGestureContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    fireEvent.keyUp(items[2], { key: 'Enter' });\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('select multiple items then click on a selected items', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    mouseItemSelection(items[2]);\n    mouseItemSelection(items[5], { shiftKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    mouseItemSelection(items[3]);\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('false');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('false');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('false');\n    });\n  });\n\n  it('select multiple items then shift click on a selected items', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    mouseItemSelection(items[2]);\n    mouseItemSelection(items[5], { shiftKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    mouseItemSelection(items[3], { shiftKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('false');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('false');\n    });\n  });\n\n  it('select multiple items then metaKey click on a selected items, to select and unselect', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n\n    mouseItemSelection(items[2]);\n    mouseItemSelection(items[5], { shiftKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    // first click to deselect\n    mouseItemSelection(items[3], { metaKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('false');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    // second click to reselect\n    mouseItemSelection(items[3], { metaKey: true });\n    await waitFor(() => {\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n    });\n    await waitFor(() => {\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n    });\n\n    // click outside of range should be additive too\n    mouseItemSelection(items[7], { metaKey: true });\n    await waitFor(() => {\n      /* eslint-disable */\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n      expect(items[4].getAttribute('aria-selected')).eq('true');\n      expect(items[5].getAttribute('aria-selected')).eq('true');\n      expect(items[6].getAttribute('aria-selected')).eq('false');\n      expect(items[7].getAttribute('aria-selected')).eq('true');\n      /* eslint-enable */\n    });\n  }, 3000);\n\n  it('supports multi-select (and deselect) via keyboard arrow keys', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // select items 1-3\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n\n    // deselect 2 and 3 via up-arrow\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // continue up past initial anchor, to select items 0 and 1\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('supports extending mouse initiated range select via arrow keys', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // select items 2-5 via click\n    mouseItemSelection(items[2]);\n    mouseItemSelection(items[5], { shiftKey: true });\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n    expect(items[5].getAttribute('aria-selected')).eq('true');\n    expect(items[6].getAttribute('aria-selected')).eq('false');\n    expect(items[7].getAttribute('aria-selected')).eq('false');\n\n    // now extend by two more rows\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n    expect(items[5].getAttribute('aria-selected')).eq('true');\n    expect(items[6].getAttribute('aria-selected')).eq('true');\n    expect(items[7].getAttribute('aria-selected')).eq('true');\n\n    // now deselect those via up-arrow\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n    expect(items[5].getAttribute('aria-selected')).eq('true');\n    expect(items[6].getAttribute('aria-selected')).eq('false');\n    expect(items[7].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('supports range selection from current item to shift+click item', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 3rd item\n    fireEvent.click(items[2], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('supports range selection from current item to shift+arrow items', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('supports range selection from current item, shift+click and then shift+click', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 4th item\n    fireEvent.click(items[3], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+click and then shift+arrow  ', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + arrow to the 4th item\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+click and then shift+space', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the 4th item\n    fireEvent.keyUp(items[3], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+arrow and then shift+click  ', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 4th item\n    fireEvent.click(items[3], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+arrow and then shift+arrow  ', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow to the 3rd item, then shift + arrow to the 4th item\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+arrow and then shift+space', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowDown', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the 4th item\n    fireEvent.keyUp(items[3], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection from current item, shift+space and then shift+space', async () => {\n    const data = populateData(4) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow down to the 3rd item, then shift + space the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('supports range selection shift+space and then shift+space', async () => {\n    const data = populateData(5) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    mouseItemSelection(items[0]);\n\n    // shift + space to select the 2nd item\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection and deselect selected item by shift+space', async () => {\n    const data = populateData(3) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    mouseItemSelection(items[0]);\n\n    // shift + space to select the 2nd item\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n\n    fireEvent.keyUp(items[1], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection backward shift+space and then shift+space', async () => {\n    const data = populateData(5) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection backward shift+click and then shift+space', async () => {\n    const data = populateData(5) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + click to select the 1st item\n    mouseItemSelection(items[0], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('supports range selection backward shift+arrow and then shift+space', async () => {\n    const data = populateData(5) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    render(\n      <RootEnvironmentProvider environment={env}>\n        <TestComponent data={dataMetadata} selectionMode=\"multiple\"></TestComponent>\n      </RootEnvironmentProvider>\n    );\n\n    const grid = await getRoot();\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + arrow to select the 1st item\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowUp', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n};\n"],"names":["_jsx","__variableDynamicImportRuntime0__","_jsxs","_Fragment","__variableDynamicImportRuntime1__","__variableDynamicImportRuntime2__","translations"],"mappings":"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"}