{"version":3,"file":"Popup-8889a781.js","sources":["../../src/UNSAFE_Popup/Popup.tsx"],"sourcesContent":["import { JSX, RefObject } from 'preact';\nimport { useState, useEffect, useLayoutEffect, useMemo, useRef, useCallback } from 'preact/hooks';\nimport { Floating, Offset, Placement, Coords, FlipOptions, ShiftOptions } from '../UNSAFE_Floating';\nimport {\n  FocusableElement,\n  focusOn,\n  focusWithin,\n  getActiveElement\n} from '../utils/PRIVATE_tabbableUtils';\nimport { mergeRefs } from '../utils/PRIVATE_refUtils';\nimport { FocusTrap } from '../UNSAFE_FocusTrap';\nimport { Layer } from '../UNSAFE_Layer';\nimport { Modal } from '../UNSAFE_Modal';\nimport { WindowOverlay, WindowOverlayPlacement } from '../UNSAFE_WindowOverlay';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { usePopupAnimation } from './usePopupAnimation';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\n\n// Style imports\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { popupVars } from './themes/PopupContract.css';\nimport { getVarName } from '../utils/UNSAFE_stringUtils';\nimport { Property } from 'csstype';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { PopupRedwoodTheme } from './themes/redwood/PopupTheme';\nimport { dimensionInterpolations, DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\n\nexport type PopupPlacement = Placement | WindowOverlayPlacement;\nexport type OnCloseDetail = {\n  reason: 'escapeKey';\n};\nexport type InitialFocus = 'auto' | 'none' | 'popup' | 'firstFocusable';\nexport type Tail = 'none' | 'simple';\nexport type Modality = 'modal' | 'modeless';\n\ntype Props = IntrinsicProps &\n  DimensionProps &\n  TestIdProps & {\n    /**\n     * Specifies whether the Popup is open.\n     */\n    isOpen: boolean;\n    /**\n     * Specifies Popup's anchor. Popup is placed relatively to its anchor.\n     */\n    anchorRef?: RefObject<Element | Coords>;\n    /**\n     * Specifies Popup's launcher. After Popup closes, it returns focus to the launcher.\n     */\n    launcherRef?: RefObject<HTMLElement>;\n    /**\n     * Specifies placement of the Popup relative to the anchor.\n     */\n    placement?: PopupPlacement;\n    /**\n     * Specifies displacement of the Popup from the anchor element placement along the specified axes.\n     * The offset object consists of mainAxis and crossAxis properties. The direction in which these properties\n     * are applied depends on the current value of the position property.\n     *\n     * The <code>mainAxis</code> property represents the distance between the Popup and the anchor.\n     * The <code>crossAxis</code> property represents the deviation in the opposite axis to the main axis - the skidding between the Popup and the anchor.\n     */\n    offset?: Offset;\n    /**\n     * Specifies modality of the Popup.\n     */\n    modality?: Modality;\n    /**\n     * Specifies whether a floating Popup changes placement to the opposite side to be kept in view when a collision is detected.\n     *\n     * The flipOptions object consists of mainAxis and crossAxis properties.\n     * The <code>mainAxis</code> runs along the side of the Popup element.\n     * The <code>crossAxis</code> runs along the alignment of the Popup element.\n     */\n    flipOptions?: FlipOptions;\n    /**\n     * Specifies whether a floating Popup shifts along axis to be kept in view when a collision is detected.\n     * Note that if both 'flip' and 'shift' are enabled on respective axis, the flip will take precedence.\n     *\n     * The shiftOptions object consists of mainAxis and crossAxis properties.\n     * The <code>mainAxis</code> runs along the side of the Popup element.\n     * The <code>crossAxis</code> runs along the alignment of the Popup element.\n     */\n    shiftOptions?: ShiftOptions;\n    /**\n     * Specifies if the Popup sets focus to its content when initially open.\n     * A value of none prevents the popup from setting focus when open.\n     *\n     * <code>auto</code> in modeless mode resolves to none.\n     * <code>none</code> prevents the popup from setting focus when open.\n     * <code>popup</code> sets focus to the root popup container (good choice for touch platforms).\n     * <code>firstFocusable</code> defines that a popup should set focus to the first focusable element within the popup's content.\n     */\n    initialFocus?: InitialFocus;\n    /**\n     * Specifies callback triggered when a user clicks outside Popup.\n     */\n    onClickOutside?: (event: MouseEvent) => void;\n    /**\n     * Specifies callback triggered when a user tries to close a Popup through UI interaction.\n     * The parent should listen to this event and close the Popup. If the parent fails to remove\n     * the Popup, then no change will be done in the UI by the component.\n     */\n    onClose?: (detail: OnCloseDetail) => void;\n    /**\n     * Specifies callback triggered when initial focus is set or when Popup receives it via F6 key.\n     */\n    onFocusSet?: () => void;\n    /**\n     * Specifies Popup's tail. Simple tail is an arrow pointing to Popup's anchor.\n     */\n    tail?: Tail;\n    /**\n     * Specifies callback triggered after the animation ends.\n     */\n    onTransitionEnd?: (value: boolean) => void;\n    /**\n     * Specifies the ARIA role type. Depending on how the popup is used in the page, the page developer should choose from the following:\n     * <code>tooltip</code> defines contextual popup that displays a description for an element. This is added automatically if not already specified.\n     * <code>dialog</code> defines an application window that is designed to interrupt the current processing of an application in order to prompt the user to enter information or require a response.\n     * <code>alertdialog</code> defines type of dialog that contains an alert message, where initial focus goes to an element within the dialog.\n     */\n    role?: HTMLAttributesSignalExcluded['role'];\n    /**\n     * Specifies guidance for screen readers.\n     */\n    'aria-label'?: string;\n    /**\n     * Specifies ID of an element used for guidance for screen readers.\n     */\n    'aria-labelledby'?: string;\n    /**\n     * Specifies ID of an element (or space separated IDs of multiple elements) that\n     * describes the Drawer.\n     */\n    'aria-describedby'?: string;\n  };\n\n/**\n * A popup temporarily 'pops up' content in the foreground.\n */\nexport const Popup = forwardRef(\n  (\n    {\n      anchorRef,\n      launcherRef,\n      children,\n      isOpen = false,\n      modality = 'modeless',\n      offset = { mainAxis: 0, crossAxis: 0 },\n      flipOptions = { mainAxis: true, crossAxis: true },\n      shiftOptions = { mainAxis: false, crossAxis: false },\n      onClickOutside,\n      onClose,\n      initialFocus = 'auto',\n      placement = anchorRef ? 'top' : 'center',\n      tail = 'none',\n      onTransitionEnd,\n      onFocusSet,\n      role = modality === 'modeless' ? 'tooltip' : 'dialog',\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      testId,\n      ...props\n    }: Props,\n    ref: ForwardedRef<HTMLElement | null>\n  ) => {\n    const localLauncherRef = useRef<HTMLElement | null>(null);\n    const [popupBgColor, setPopupBgColor] = useState<Property.BackgroundColor>();\n\n    const contentWrapperRef = useRef<HTMLDivElement | null>(null);\n\n    // testId support\n    const testIdProps = useTestId(testId);\n\n    // We can not merge outsideClick to onClose event with {reason: 'outsideClick'} payload\n    // The reason is that we allow outsideClick/autodismiss in modeless mode and\n    // we need to detect outsideClick which is\n    useOutsideClick({\n      isDisabled: !(isOpen && contentWrapperRef.current),\n      ref: contentWrapperRef,\n      handler: (event) => {\n        onClickOutside?.(event);\n      }\n    });\n\n    function launcherKeyDownCallback(event: KeyboardEvent): void {\n      if (\n        localLauncherRef.current === getActiveElement() &&\n        event.code === 'F6' &&\n        modality === 'modeless'\n      ) {\n        // Prevent default F6 handlers.\n        // F6 is a standard Chrome address bar shortcut on Windows.\n        event.preventDefault();\n        event.stopPropagation();\n\n        focusWithin(contentWrapperRef.current as HTMLElement);\n        onFocusSet?.();\n      }\n    }\n\n    const _onTransitionEnd = (isOpen: boolean) => {\n      if (isOpen) {\n        setInitialFocus();\n        onTransitionEnd?.(true);\n      } else {\n        onTransitionEnd?.(false);\n      }\n    };\n\n    // Animation\n    const { setAnimationElementRef, status, onPosition } = usePopupAnimation({\n      isOpen,\n      isAnimatedOnMount: true,\n      onTransitionEnd: _onTransitionEnd,\n      placement: placement\n    });\n    const stableRef = useMemo(\n      () => mergeRefs(setAnimationElementRef, ref),\n      [setAnimationElementRef, ref]\n    );\n\n    const returnFocus = useCallback((): void => {\n      // Try to return focus to 1.launcher or 2.anchor\n      const launcherEl = localLauncherRef.current;\n      const anchorEl = anchorRef?.current;\n\n      if (launcherEl) {\n        focusOn(launcherEl);\n        // Checking instanceof to avoid Coords type that can not be focused\n      } else if (anchorEl && anchorEl instanceof Element) {\n        focusOn(anchorEl as FocusableElement);\n      }\n    }, [localLauncherRef, anchorRef?.current]);\n\n    useEffect(() => {\n      // Init closing\n      if (!isOpen && status === 'opening') {\n        // Only actively return focus to the launcher or anchor if the popup contained focus.\n        // Otherwise, focus is already elsewhere on the page and should not be forced back\n        // because that could reopen the popup again, which essentially prevents the user from\n        // moving focus out of the launcher.\n        if (contentWrapperRef.current?.contains(getActiveElement())) {\n          returnFocus();\n        }\n      }\n    }, [isOpen, status, returnFocus]);\n\n    // Initialize launcher\n    useEffect(() => {\n      if (isOpen) {\n        if (!launcherRef?.current) {\n          // 1. If launcher is not defined, most frequent scenario is,\n          // that element, that has focus before opening a popup is considered launcher\n          localLauncherRef.current = getActiveElement() as HTMLElement;\n        } else if (launcherRef.current instanceof Element) {\n          // 2. launcherRef element was provided.\n          // Verify, if it exists in DOM, otherwise use the last active element\n          localLauncherRef.current = document.body.contains(launcherRef.current)\n            ? launcherRef.current\n            : (getActiveElement() as HTMLElement);\n        } else {\n          localLauncherRef.current = getActiveElement() as HTMLElement;\n        }\n        // Register F6 key handler to enter the Popup\n        localLauncherRef.current?.addEventListener('keydown', launcherKeyDownCallback);\n      }\n      return () => {\n        // Deregister F6 key handler\n        localLauncherRef.current?.removeEventListener('keydown', launcherKeyDownCallback);\n      };\n    }, [isOpen, launcherRef]);\n    // Note: unlike oj-c-popup we do not default anchorRef to launcherRef in Preact Popup\n    // If anchorRef is undefined, we use WindowOverlay as anchor\n\n    const setInitialFocus = () => {\n      let derivedInitialFocus = initialFocus;\n      if (initialFocus === 'auto') {\n        if (modality === 'modal') {\n          // modal mode - set focus to first focusable\n          derivedInitialFocus = 'firstFocusable';\n        } else {\n          // modeless mode - do not steal focus by default\n          derivedInitialFocus = 'none';\n        }\n      }\n\n      // Case: 'popup'\n      // Focus on Popup container\n      if (derivedInitialFocus === 'popup') {\n        focusOn(contentWrapperRef.current as HTMLElement);\n        onFocusSet?.();\n        onTransitionEnd?.(false);\n      }\n\n      // Case: 'firstFocusable'\n      // Focus on first tabbable in the Popup container or container itself if there is none\n      if (derivedInitialFocus === 'firstFocusable') {\n        focusWithin(contentWrapperRef.current as HTMLElement);\n        onFocusSet?.();\n      }\n    };\n\n    const getMainAxisOffset = (offset?: Offset) => {\n      let calcOffset = 0;\n      if (offset) {\n        // @ts-ignore as OffsetFunction is going to be removed\n        // Property 'mainAxis' does not exist on type 'OffsetFunction'.\n        calcOffset = typeof offset === 'number' ? offset : offset.mainAxis || 0;\n        if (tail === 'simple') {\n          calcOffset += 5;\n        }\n      }\n      return calcOffset;\n    };\n\n    const getCrossAxisOffset = (offset?: Offset) => {\n      if (!offset) {\n        return 0;\n      } else {\n        // @ts-ignore as OffsetFunction is going to be removed\n        // Property 'crossAxis' does not exist on type 'OffsetFunction'.\n        return typeof offset === 'number' ? 0 : offset.crossAxis || 0;\n      }\n    };\n\n    const finalOffset = {\n      mainAxis: getMainAxisOffset(offset),\n      crossAxis: getCrossAxisOffset(offset)\n    };\n\n    const handlePopupKeyDown = (event: KeyboardEvent) => {\n      const currentlyFocusedEl = getActiveElement();\n      const wrapperEl = contentWrapperRef.current;\n      const launcherEl = localLauncherRef.current;\n      if (wrapperEl === currentlyFocusedEl || wrapperEl?.contains(currentlyFocusedEl)) {\n        switch (event.code) {\n          case 'Escape': {\n            // Trigger onClose event with outside click detail\n            onClose?.({ reason: 'escapeKey' });\n            break;\n          }\n          case 'F6':\n            // Prevent default F6 handlers.\n            // F6 is a standard Chrome address bar shortcut on Windows.\n            event.preventDefault();\n            event.stopPropagation();\n\n            // Focus launcher\n            if (launcherEl && modality === 'modeless') {\n              focusOn(launcherEl);\n            }\n            break;\n        }\n      }\n    };\n\n    useLayoutEffect(() => {\n      if (\n        status === 'unmounted' ||\n        contentWrapperRef.current == null ||\n        popupBgColor != null ||\n        tail === 'none'\n      )\n        return;\n\n      const backgroundColorVar = getVarName(popupVars.backgroundColor);\n      const computedStyle = getComputedStyle(contentWrapperRef.current!);\n      setPopupBgColor(computedStyle.getPropertyValue(backgroundColorVar));\n    }, [status, contentWrapperRef, popupBgColor, tail]);\n\n    // Styles\n    const { baseTheme, classes } = useComponentTheme(PopupRedwoodTheme);\n    const isMounted = status !== 'unmounted';\n\n    const interpolations = [...Object.values(dimensionInterpolations)];\n    const styleInterpolations = mergeInterpolations<DimensionProps>(interpolations);\n    const { ...styles } = styleInterpolations(props);\n\n    const renderPopup = () => {\n      return (\n        <div\n          ref={contentWrapperRef}\n          tabIndex={-1}\n          role={role}\n          className={classNames([baseTheme, classes])}\n          style={styles}\n          onKeyDown={handlePopupKeyDown}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-describedby={ariaDescribedBy}\n          {...testIdProps}>\n          {/*Setting restoreFocusRef to false because otherwise FocusTrap is stealing the focus back when :*/}\n          {/*we click outside of modeless Popup (that keeps being open).*/}\n          <FocusTrap restoreFocusRef={false}>{children}</FocusTrap>\n        </div>\n      );\n    };\n\n    const renderFloatingOrOverlayPopup = () => {\n      if (!anchorRef || !anchorRef.current) {\n        return (\n          <WindowOverlay placement={placement as WindowOverlayPlacement} offset={finalOffset}>\n            <div ref={stableRef}>{renderPopup()}</div>\n          </WindowOverlay>\n        );\n      } else {\n        return (\n          <Floating\n            ref={stableRef}\n            backgroundColor={popupBgColor}\n            anchorRef={anchorRef}\n            placement={placement as Placement}\n            offsetValue={finalOffset}\n            flipOptions={flipOptions}\n            shiftOptions={shiftOptions}\n            tail={tail}\n            onPosition={onPosition}>\n            {renderPopup()}\n          </Floating>\n        );\n      }\n    };\n\n    if (isMounted) {\n      if (modality === 'modal') {\n        return <Modal isOpen={isMounted}>{renderFloatingOrOverlayPopup()}</Modal>;\n      } else {\n        return <Layer>{renderFloatingOrOverlayPopup()}</Layer>;\n      }\n    } else return null;\n  }\n);\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AA+IA;;AAEG;AACU,MAAA,KAAK,GAAG,UAAU,CAC7B,CACE,EACE,SAAS,EACT,WAAW,EACX,QAAQ,EACR,MAAM,GAAG,KAAK,EACd,QAAQ,GAAG,UAAU,EACrB,MAAM,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EACtC,WAAW,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EACjD,YAAY,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EACpD,cAAc,EACd,OAAO,EACP,YAAY,GAAG,MAAM,EACrB,SAAS,GAAG,SAAS,GAAG,KAAK,GAAG,QAAQ,EACxC,IAAI,GAAG,MAAM,EACb,eAAe,EACf,UAAU,EACV,IAAI,GAAG,QAAQ,KAAK,UAAU,GAAG,SAAS,GAAG,QAAQ,EACrD,YAAY,EAAE,SAAS,EACvB,iBAAiB,EAAE,cAAc,EACjC,kBAAkB,EAAE,eAAe,EACnC,MAAM,EACN,GAAG,KAAK,EACF,EACR,GAAqC,KACnC;AACF,IAAA,MAAM,gBAAgB,GAAG,MAAM,CAAqB,IAAI,CAAC,CAAC;IAC1D,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,EAA4B,CAAC;AAE7E,IAAA,MAAM,iBAAiB,GAAG,MAAM,CAAwB,IAAI,CAAC,CAAC;;AAG9D,IAAA,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;;;;AAKtC,IAAA,eAAe,CAAC;QACd,UAAU,EAAE,EAAE,MAAM,IAAI,iBAAiB,CAAC,OAAO,CAAC;AAClD,QAAA,GAAG,EAAE,iBAAiB;AACtB,QAAA,OAAO,EAAE,CAAC,KAAK,KAAI;AACjB,YAAA,cAAc,GAAG,KAAK,CAAC,CAAC;SACzB;AACF,KAAA,CAAC,CAAC;IAEH,SAAS,uBAAuB,CAAC,KAAoB,EAAA;AACnD,QAAA,IACE,gBAAgB,CAAC,OAAO,KAAK,gBAAgB,EAAE;YAC/C,KAAK,CAAC,IAAI,KAAK,IAAI;YACnB,QAAQ,KAAK,UAAU,EACvB;;;YAGA,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,YAAA,WAAW,CAAC,iBAAiB,CAAC,OAAsB,CAAC,CAAC;YACtD,UAAU,IAAI,CAAC;SAChB;KACF;AAED,IAAA,MAAM,gBAAgB,GAAG,CAAC,MAAe,KAAI;QAC3C,IAAI,MAAM,EAAE;AACV,YAAA,eAAe,EAAE,CAAC;AAClB,YAAA,eAAe,GAAG,IAAI,CAAC,CAAC;SACzB;aAAM;AACL,YAAA,eAAe,GAAG,KAAK,CAAC,CAAC;SAC1B;AACH,KAAC,CAAC;;IAGF,MAAM,EAAE,sBAAsB,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,iBAAiB,CAAC;QACvE,MAAM;AACN,QAAA,iBAAiB,EAAE,IAAI;AACvB,QAAA,eAAe,EAAE,gBAAgB;AACjC,QAAA,SAAS,EAAE,SAAS;AACrB,KAAA,CAAC,CAAC;IACH,MAAM,SAAS,GAAG,OAAO,CACvB,MAAM,SAAS,CAAC,sBAAsB,EAAE,GAAG,CAAC,EAC5C,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAC9B,CAAC;AAEF,IAAA,MAAM,WAAW,GAAG,WAAW,CAAC,MAAW;;AAEzC,QAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,CAAC;AAC5C,QAAA,MAAM,QAAQ,GAAG,SAAS,EAAE,OAAO,CAAC;QAEpC,IAAI,UAAU,EAAE;YACd,OAAO,CAAC,UAAU,CAAC,CAAC;;SAErB;AAAM,aAAA,IAAI,QAAQ,IAAI,QAAQ,YAAY,OAAO,EAAE;YAClD,OAAO,CAAC,QAA4B,CAAC,CAAC;SACvC;KACF,EAAE,CAAC,gBAAgB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;IAE3C,SAAS,CAAC,MAAK;;AAEb,QAAA,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;;;;;YAKnC,IAAI,iBAAiB,CAAC,OAAO,EAAE,QAAQ,CAAC,gBAAgB,EAAE,CAAC,EAAE;AAC3D,gBAAA,WAAW,EAAE,CAAC;aACf;SACF;KACF,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;;IAGlC,SAAS,CAAC,MAAK;QACb,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE;;;AAGzB,gBAAA,gBAAgB,CAAC,OAAO,GAAG,gBAAgB,EAAiB,CAAC;aAC9D;AAAM,iBAAA,IAAI,WAAW,CAAC,OAAO,YAAY,OAAO,EAAE;;;AAGjD,gBAAA,gBAAgB,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;sBAClE,WAAW,CAAC,OAAO;sBAClB,gBAAgB,EAAkB,CAAC;aACzC;iBAAM;AACL,gBAAA,gBAAgB,CAAC,OAAO,GAAG,gBAAgB,EAAiB,CAAC;aAC9D;;YAED,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;SAChF;AACD,QAAA,OAAO,MAAK;;YAEV,gBAAgB,CAAC,OAAO,EAAE,mBAAmB,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;AACpF,SAAC,CAAC;AACJ,KAAC,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;;;IAI1B,MAAM,eAAe,GAAG,MAAK;QAC3B,IAAI,mBAAmB,GAAG,YAAY,CAAC;AACvC,QAAA,IAAI,YAAY,KAAK,MAAM,EAAE;AAC3B,YAAA,IAAI,QAAQ,KAAK,OAAO,EAAE;;gBAExB,mBAAmB,GAAG,gBAAgB,CAAC;aACxC;iBAAM;;gBAEL,mBAAmB,GAAG,MAAM,CAAC;aAC9B;SACF;;;AAID,QAAA,IAAI,mBAAmB,KAAK,OAAO,EAAE;AACnC,YAAA,OAAO,CAAC,iBAAiB,CAAC,OAAsB,CAAC,CAAC;YAClD,UAAU,IAAI,CAAC;AACf,YAAA,eAAe,GAAG,KAAK,CAAC,CAAC;SAC1B;;;AAID,QAAA,IAAI,mBAAmB,KAAK,gBAAgB,EAAE;AAC5C,YAAA,WAAW,CAAC,iBAAiB,CAAC,OAAsB,CAAC,CAAC;YACtD,UAAU,IAAI,CAAC;SAChB;AACH,KAAC,CAAC;AAEF,IAAA,MAAM,iBAAiB,GAAG,CAAC,MAAe,KAAI;QAC5C,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,MAAM,EAAE;;;AAGV,YAAA,UAAU,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC;AACxE,YAAA,IAAI,IAAI,KAAK,QAAQ,EAAE;gBACrB,UAAU,IAAI,CAAC,CAAC;aACjB;SACF;AACD,QAAA,OAAO,UAAU,CAAC;AACpB,KAAC,CAAC;AAEF,IAAA,MAAM,kBAAkB,GAAG,CAAC,MAAe,KAAI;QAC7C,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,OAAO,CAAC,CAAC;SACV;aAAM;;;AAGL,YAAA,OAAO,OAAO,MAAM,KAAK,QAAQ,GAAG,CAAC,GAAG,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC;SAC/D;AACH,KAAC,CAAC;AAEF,IAAA,MAAM,WAAW,GAAG;AAClB,QAAA,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC;AACnC,QAAA,SAAS,EAAE,kBAAkB,CAAC,MAAM,CAAC;KACtC,CAAC;AAEF,IAAA,MAAM,kBAAkB,GAAG,CAAC,KAAoB,KAAI;AAClD,QAAA,MAAM,kBAAkB,GAAG,gBAAgB,EAAE,CAAC;AAC9C,QAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC;AAC5C,QAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,CAAC;QAC5C,IAAI,SAAS,KAAK,kBAAkB,IAAI,SAAS,EAAE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;AAC/E,YAAA,QAAQ,KAAK,CAAC,IAAI;gBAChB,KAAK,QAAQ,EAAE;;oBAEb,OAAO,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;oBACnC,MAAM;iBACP;AACD,gBAAA,KAAK,IAAI;;;oBAGP,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;;AAGxB,oBAAA,IAAI,UAAU,IAAI,QAAQ,KAAK,UAAU,EAAE;wBACzC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACrB;oBACD,MAAM;aACT;SACF;AACH,KAAC,CAAC;IAEF,eAAe,CAAC,MAAK;QACnB,IACE,MAAM,KAAK,WAAW;YACtB,iBAAiB,CAAC,OAAO,IAAI,IAAI;AACjC,YAAA,YAAY,IAAI,IAAI;AACpB,YAAA,IAAI,KAAK,MAAM;YAEf,OAAO;QAET,MAAM,kBAAkB,GAAG,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjE,MAAM,aAAa,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,OAAQ,CAAC,CAAC;QACnE,eAAe,CAAC,aAAa,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC;KACrE,EAAE,CAAC,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;;IAGpD,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;AACpE,IAAA,MAAM,SAAS,GAAG,MAAM,KAAK,WAAW,CAAC;IAEzC,MAAM,cAAc,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAAC;AACnE,IAAA,MAAM,mBAAmB,GAAG,mBAAmB,CAAiB,cAAc,CAAC,CAAC;IAChF,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAEjD,MAAM,WAAW,GAAG,MAAK;QACvB,QACEA,GACE,CAAA,KAAA,EAAA,EAAA,GAAG,EAAE,iBAAiB,EACtB,QAAQ,EAAE,CAAC,CAAC,EACZ,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,EAC3C,KAAK,EAAE,MAAM,EACb,SAAS,EAAE,kBAAkB,gBACjB,SAAS,EAAA,iBAAA,EACJ,cAAc,EAAA,kBAAA,EACb,eAAe,EAAA,GAC7B,WAAW,EAGf,QAAA,EAAAA,GAAA,CAAC,SAAS,EAAA,EAAC,eAAe,EAAE,KAAK,EAAA,QAAA,EAAG,QAAQ,EAAA,CAAa,EACrD,CAAA,EACN;AACJ,KAAC,CAAC;IAEF,MAAM,4BAA4B,GAAG,MAAK;QACxC,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACpC,QACEA,IAAC,aAAa,EAAA,EAAC,SAAS,EAAE,SAAmC,EAAE,MAAM,EAAE,WAAW,YAChFA,GAAK,CAAA,KAAA,EAAA,EAAA,GAAG,EAAE,SAAS,EAAA,QAAA,EAAG,WAAW,EAAE,EAAA,CAAO,EAC5B,CAAA,EAChB;SACH;aAAM;YACL,QACEA,IAAC,QAAQ,EAAA,EACP,GAAG,EAAE,SAAS,EACd,eAAe,EAAE,YAAY,EAC7B,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,SAAsB,EACjC,WAAW,EAAE,WAAW,EACxB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,EAC1B,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,EAAA,QAAA,EACrB,WAAW,EAAE,EAAA,CACL,EACX;SACH;AACH,KAAC,CAAC;IAEF,IAAI,SAAS,EAAE;AACb,QAAA,IAAI,QAAQ,KAAK,OAAO,EAAE;YACxB,OAAOA,GAAA,CAAC,KAAK,EAAA,EAAC,MAAM,EAAE,SAAS,EAAG,QAAA,EAAA,4BAA4B,EAAE,EAAA,CAAS,CAAC;SAC3E;aAAM;AACL,YAAA,OAAOA,IAAC,KAAK,EAAA,EAAA,QAAA,EAAE,4BAA4B,EAAE,GAAS,CAAC;SACxD;KACF;;AAAM,QAAA,OAAO,IAAI,CAAC;AACrB,CAAC;;;;"}