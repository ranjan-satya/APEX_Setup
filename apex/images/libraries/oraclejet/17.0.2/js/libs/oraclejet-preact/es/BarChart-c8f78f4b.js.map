{"version":3,"file":"BarChart-c8f78f4b.js","sources":["../../src/UNSAFE_BarChart/utils/barSeriesUtils.ts","../../src/UNSAFE_BarChart/Bar.tsx","../../src/UNSAFE_BarChart/utils/barItemUtils.ts","../../src/UNSAFE_BarChart/utils/barLayoutUtils.ts","../../src/UNSAFE_BarChart/utils/barItemLabelUtils.ts","../../src/UNSAFE_BarChart/BarChartStackLabel.tsx","../../src/UNSAFE_BarChart/BarLabel.tsx","../../src/UNSAFE_BarChart/BarGroup.tsx","../../src/UNSAFE_BarChart/utils/barNavUtils.ts","../../src/UNSAFE_BarChart/BarChart.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nconst IDEAL_DATA_ITEM_GAP = 2;\nconst DEFAULT_BAR_GAP_RATIO = 0.25;\n\n/**\n * The function that calculates the barWidth and offset from group center for each series.\n * @param groupWidth The width of the group.\n * @param noOfSeries The number of series present in the chart.\n * @param barGapRatio The ratio of gap to groupWidth.\n * @param dataItemGaps The ratio that determines the gap between the bars.\n */\nexport function getBarGapsInfo(\n  seriesIndex: number,\n  groupWidth: number,\n  barGapRatio: number,\n  numOfSeries: number,\n  dataItemGaps: number,\n  isStacked: boolean,\n  isRtl: boolean\n) {\n  const numSeries = isStacked ? 1 : numOfSeries;\n  const itemsGaps = IDEAL_DATA_ITEM_GAP * dataItemGaps;\n  const barWidth = (groupWidth * (1 - barGapRatio) - (numSeries - 1) * itemsGaps) / numSeries;\n  if (isStacked) {\n    return { barWidth, offset: (-1 * barWidth) / 2, itemsGaps };\n  }\n  const center = groupWidth / 2;\n  const seriesStart =\n    groupWidth * (barGapRatio / 2) + seriesIndex * (barWidth + IDEAL_DATA_ITEM_GAP * dataItemGaps);\n  const offset = isRtl ? center - seriesStart - barWidth : seriesStart - center;\n\n  return { barWidth, offset, itemsGaps };\n}\n\n/**\n * Returns the bar gap ratio.\n * @param isStacked Whether the chart is a stacked bar chart.\n * @param startIndex The viewport start index.\n * @param endIndex The viewport end index.\n */\nexport function getBarGapRatio(isStacked: boolean, startIndex: number, endIndex: number) {\n  const noOfGroups = endIndex - startIndex + 1;\n  // logic from legacy\n  return isStacked ? 0.37 + 0.26 / noOfGroups : DEFAULT_BAR_GAP_RATIO;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { styles } from '../PRIVATE_Chart/themes/ChartStyles.css';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype BarProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  isFocused: boolean;\n  isDimmed: boolean;\n  activeId?: string;\n  isPointerEnabled: boolean;\n  fill: ColorProps['color'];\n  stroke?: ColorProps['color'];\n  strokeWidth?: number;\n  seriesIndex: number;\n  groupIndex: number;\n  'aria-label'?: string;\n};\n\nconst HOVERED_INNER_INSET = 1.5;\nconst SELECTED_INNER_INSET = 2.5;\n\n/**\n * The rect representing the bar item.\n * @param props\n * @returns\n */\nexport function Bar(props: BarProps) {\n  const isInteractive = props.isSelected || props.isFocused;\n\n  if (isInteractive) {\n    return <InteractiveBar {...props} />;\n  }\n\n  return (\n    <rect\n      x={props.x}\n      y={props.y}\n      data-oj-series-index={props.seriesIndex}\n      data-oj-group-index={props.groupIndex}\n      data-oj-object=\"bar\"\n      aria-label={props['aria-label']}\n      role={props['aria-label'] ? 'img' : undefined}\n      id={props.activeId}\n      style={{\n        width: props.width,\n        height: props.height,\n        fill: props.fill,\n        stroke: props.stroke,\n        strokeWidth: props.strokeWidth\n      }}\n      class={classNames([\n        props.isPointerEnabled ? styles.cursorEnable : undefined,\n        props.isDimmed ? styles.dimmed : undefined\n      ])}\n    />\n  );\n}\n\n/**\n * The selected or hovered selected bar.\n */\nexport function InteractiveBar(props: BarProps) {\n  const { x, y, width, height, fill, isSelected, isFocused } = props;\n  const inset = isSelected ? SELECTED_INNER_INSET : HOVERED_INNER_INSET;\n  return (\n    <g\n      id={props.activeId}\n      data-oj-object=\"bar\"\n      data-oj-series-index={props.seriesIndex}\n      data-oj-group-index={props.groupIndex}\n      className={props.isDimmed ? styles.dimmed : ''}\n      role={props['aria-label'] ? 'img' : undefined}\n      aria-label={props['aria-label']}>\n      <rect\n        x={x}\n        y={y}\n        class={classNames([isSelected ? styles.selectedBorder : ''])}\n        style={{\n          width: width,\n          height: height,\n          fill: !isSelected && isFocused ? fill : undefined\n        }}></rect>\n      <rect\n        x={x + inset}\n        y={y + inset}\n        class={classNames([\n          styles.contrastBorder,\n          props.isPointerEnabled ? styles.cursorEnable : undefined\n        ])}\n        style={{\n          width: width - 2 * inset,\n          height: height - 2 * inset,\n          fill: fill\n        }}></rect>\n    </g>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ColorProps } from '../../utils/UNSAFE_interpolations/colors';\nimport { BarItemData, BarSeriesData } from '../barChart.types';\n\nexport function getBarProps<K, D>(\n  item: BarItemData<K>,\n  series: BarSeriesData<K, D>,\n  seriesColor: ColorProps['color']\n) {\n  const fill = item.color || series.color || seriesColor;\n  const stroke = item.borderColor || series.borderColor;\n  return { fill, stroke };\n}\n\n/**\n * Returns the coordinate of bar rect.\n * @param x1 The bar start coordinate in x axis.\n * @param x2 The bar end coordinate in x axis.\n * @param endCoord The coordinate of bar top in y axis.\n * @param baselineCoord The coordinate of bar base in y axis.\n * @param isHoriz Whether the chart is horizontal chart.\n * @returns\n */\nexport function getRectCoord(\n  x1: number,\n  x2: number,\n  endCoord: number,\n  baselineCoord: number,\n  isHoriz: boolean\n) {\n  let x: number;\n  let y: number;\n  let width: number;\n  let height: number;\n\n  let x_1 = x1;\n  let x_2 = x2;\n\n  // Bar width has to be at least 1px to prevent disappearing bars\n  let barWidth = x2 - x1;\n  if (barWidth < 1) {\n    x_1 = Math.floor(x_1);\n    x_2 = x_1 + 1;\n    barWidth = 1;\n  }\n\n  if (!isHoriz) {\n    x = x_1;\n    y = endCoord > baselineCoord ? baselineCoord : endCoord;\n    width = Math.abs(x_2 - x_1);\n    height = Math.abs(baselineCoord - endCoord);\n  } else {\n    y = x_1;\n    x = endCoord > baselineCoord ? baselineCoord : endCoord;\n    width = Math.abs(baselineCoord - endCoord);\n    height = Math.abs(x_2 - x_1);\n  }\n\n  return { x, y, width, height };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getBarGapsInfo } from './barSeriesUtils';\nimport { getRectCoord } from './barItemUtils';\nimport { BarSeriesData } from '../barChart.types';\nimport { ChartItemData, Scale, Group } from '../../utils/UNSAFE_visTypes/chart';\n\n/**\n * Returns the base and end coordinate of the bar.\n * @param value The value of the bar item.\n * @param yScale The yscale.\n * @param isStacked Whether the bar chart is stacked or not.\n * @param isLog Whether the y axis is in log scale.\n * @param itemsGaps The gap between data item.\n * @param negCummulativeValue The negative cummulative value of the group.\n * @param posCummulativeValue The positive cummulative value of the group.\n * @returns\n */\nexport function getBaseAndEndCoord(\n  value: number,\n  yScale: Scale,\n  isStacked: boolean,\n  isLog: boolean,\n  itemsGaps: number,\n  negCummulativeValue: number,\n  posCummulativeValue: number\n) {\n  let baselineCoord;\n  let endCoord;\n  if (isStacked) {\n    baselineCoord = yScale.transform(value < 0 ? negCummulativeValue : posCummulativeValue);\n    negCummulativeValue += value < 0 ? value : 0;\n    posCummulativeValue += value > 0 ? value : 0;\n    endCoord = yScale.transform(value < 0 ? negCummulativeValue : posCummulativeValue);\n\n    baselineCoord += endCoord > baselineCoord ? itemsGaps : -itemsGaps;\n  } else {\n    baselineCoord = isLog ? yScale.range()[0] : yScale.transform(0);\n    endCoord = yScale.transform(value);\n  }\n  return { baselineCoord, endCoord };\n}\n\nexport function getBarPosition<K extends string | number, D extends ChartItemData<K>>(\n  series: BarSeriesData<K, D>[],\n  groups: Group[],\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  xScale: Scale,\n  yScale: Scale,\n  hiddenIds: Set<number | string> | undefined,\n  dataItemGaps: number,\n  groupWidth: number,\n  barGapRatio: number,\n  isLog: boolean,\n  isStacked: boolean,\n  isRtl: boolean,\n  isHoriz: boolean,\n  timeAxisType?: 'mixedFrequency' | 'enabled' | 'skipGaps'\n) {\n  return (seriesIndex: number, groupIndex: number) => {\n    const numOfSeries = series.length;\n    let posCumulativeValue = 0;\n    let negCumulativeValue = 0;\n    for (let index = 0; index < numOfSeries; index += 1) {\n      const item = getDataItem(index, groupIndex);\n      let xVal = groupIndex;\n      if (timeAxisType) {\n        const val =\n          timeAxisType === 'mixedFrequency'\n            ? getDataItem(seriesIndex, groupIndex)?.x\n            : groups[groupIndex].id;\n        xVal = new Date(val!).getTime();\n      }\n      if (!item || hiddenIds?.has(item.id) || (isLog && item.value <= 0)) {\n        continue;\n      }\n      const groupCenter = xScale.transform(xVal);\n      const { barWidth, offset, itemsGaps } = getBarGapsInfo(\n        index,\n        groupWidth,\n        barGapRatio,\n        numOfSeries,\n        dataItemGaps,\n        isStacked,\n        isRtl\n      );\n      const x1 = groupCenter + offset;\n      const x2 = x1 + barWidth;\n\n      const { baselineCoord, endCoord } = getBaseAndEndCoord(\n        item.value,\n        yScale,\n        isStacked,\n        isLog,\n        itemsGaps,\n        negCumulativeValue,\n        posCumulativeValue\n      );\n      negCumulativeValue += item.value < 0 ? item.value : 0;\n      posCumulativeValue += item.value > 0 ? item.value : 0;\n\n      if (seriesIndex === index) {\n        return getRectCoord(x1, x2, endCoord, baselineCoord, isHoriz);\n      }\n    }\n    return;\n  };\n}\n\n/**\n * Returns the center coordinate of the bar item.\n * @param value\n * @param yScale\n * @param isStacked\n * @param isLog\n * @param dataItemGaps\n * @param negCummValue\n * @param posCummValue\n * @returns\n */\nexport function getBarCenterCoordinate(\n  value: number,\n  yScale: Scale,\n  isStacked: boolean,\n  isLog: boolean,\n  dataItemGaps: number,\n  negCummValue: number,\n  posCummValue: number\n) {\n  const { baselineCoord, endCoord } = getBaseAndEndCoord(\n    value,\n    yScale,\n    isStacked,\n    isLog,\n    dataItemGaps,\n    negCummValue,\n    posCummValue\n  );\n  return (baselineCoord + endCoord) / 2;\n}\n\nexport function getSeriesOffsetAndWidth(\n  groupWidth: number,\n  barGapRatio: number,\n  numOfSeries: number,\n  dataItemGaps: number,\n  isStacked: boolean,\n  isRtl: boolean\n) {\n  return (seriesIndex: number) => {\n    const { offset, barWidth } = getBarGapsInfo(\n      seriesIndex,\n      groupWidth,\n      barGapRatio,\n      numOfSeries,\n      dataItemGaps,\n      isStacked,\n      isRtl\n    );\n    return { offset, dataWidth: barWidth };\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension } from '../../utils/UNSAFE_visTypes/common';\n\nconst LABEL_OFFSET = 2;\n\nfunction getValueCoord(isHoriz: boolean, isRtl: boolean, isNegative: boolean, barDims: Dimension) {\n  if (isHoriz) {\n    return (isNegative && !isRtl) || (!isNegative && isRtl) ? barDims.x : barDims.x + barDims.width;\n  }\n  return isNegative ? barDims.height + barDims.y : barDims.y;\n}\n\nexport function getLabelProps(\n  isHoriz: boolean,\n  isRtl: boolean,\n  isNegative: boolean,\n  barDims: Dimension,\n  dataLabelPosition: 'insideBarEdge' | 'outsideBarEdge' | 'center',\n  labelDims?: Dimension\n) {\n  if (!labelDims) {\n    return {};\n  }\n\n  const valueCoord = getValueCoord(isHoriz, isRtl, isNegative, barDims);\n\n  if (dataLabelPosition === 'insideBarEdge') {\n    return {\n      y: isHoriz\n        ? barDims.y + barDims.height / 2\n        : valueCoord + (isNegative ? -1 : 1) * (labelDims.height / 2 + LABEL_OFFSET + 2),\n      x: isHoriz\n        ? valueCoord -\n          ((isNegative && !isRtl) || (!isNegative && isRtl) ? -1 : 1) *\n            (labelDims.width / 2 + LABEL_OFFSET)\n        : barDims.x + barDims.width / 2\n    };\n  }\n\n  if (dataLabelPosition === 'outsideBarEdge') {\n    return {\n      y: isHoriz\n        ? barDims.y + barDims.height / 2\n        : valueCoord - (isNegative ? -1 : 1) * (labelDims.height / 2 + LABEL_OFFSET),\n      x: isHoriz\n        ? valueCoord +\n          ((isNegative && !isRtl) || (!isNegative && isRtl) ? -1 : 1) *\n            (labelDims.width / 2 + LABEL_OFFSET)\n        : barDims.x + barDims.width / 2\n    };\n  }\n\n  return {\n    x: barDims.x + barDims.width / 2,\n    y: barDims.y + barDims.height / 2\n  };\n}\n\nexport function canFitLabel(\n  isHoriz: boolean,\n  labelDims: Dimension,\n  barDims: Dimension,\n  labelPos: 'insideBarEdge' | 'outsideBarEdge' | 'center'\n) {\n  if (isHoriz) {\n    if (labelDims.height > barDims.height) {\n      return false;\n    }\n    if (labelPos != 'outsideBarEdge') {\n      return labelDims.width < barDims.width;\n    }\n    return true;\n  }\n\n  if (labelDims.width > barDims.width) {\n    return false;\n  }\n\n  if (labelPos != 'outsideBarEdge') {\n    return labelDims.height < barDims.height;\n  }\n  return true;\n}\n\nexport const getStackLabelProps = (\n  groupCenterCoord: number,\n  valueCoord: number,\n  isNegative: boolean,\n  isHoriz: boolean,\n  isRtl: boolean,\n  labelDims: Dimension\n) => {\n  return {\n    y: isHoriz\n      ? groupCenterCoord\n      : valueCoord - (isNegative ? -1 : 1) * (labelDims.height / 2 + LABEL_OFFSET),\n    x: isHoriz\n      ? valueCoord +\n        ((isNegative && !isRtl) || (!isNegative && isRtl) ? -1 : 1) *\n          (labelDims.width / 2 + LABEL_OFFSET)\n      : groupCenterCoord\n  };\n};\n","import { Scale, Group } from '#utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\nimport { styles } from '#PRIVATE_Chart/themes/ChartStyles.css';\nimport { VisTextStyle } from '#utils/UNSAFE_visUtils';\nimport { BarChartProps, BarItemData } from './barChart.types';\nimport { getStackLabelProps } from './utils/barItemLabelUtils';\nimport { Font } from '#hooks/PRIVATE_useTextDimensions/textDimensionsUtils';\n\ntype Props<K, D extends BarItemData<K>> = {\n  groupCenter: number;\n  labelStyle?: VisTextStyle;\n  yScale: Scale;\n  defaultFontSize: string;\n  getStackLabel: NonNullable<BarChartProps<K, D>['getStackLabel']>;\n  group: Group;\n  isRtl: boolean;\n  posValue: number;\n  negValue: number;\n  posItemsData: D[];\n  isHoriz: boolean;\n  negItemsData: D[];\n  getTextDimensions: (text: string, font: Font) => Dimension;\n};\n\nexport function StackLabels<K, D extends BarItemData<K>>({\n  groupCenter,\n  getStackLabel,\n  group,\n  posValue,\n  negValue,\n  posItemsData,\n  yScale,\n  isHoriz,\n  isRtl,\n  negItemsData,\n  defaultFontSize,\n  labelStyle,\n  getTextDimensions\n}: Props<K, D>) {\n  const positiveStackLabel = getStackLabel({\n    group,\n    value: posValue,\n    data: posItemsData\n  });\n\n  // default style used for text dims calc. should match with styles.stackLabelStyle\n  const stackLabelStyle = { fontSize: defaultFontSize, fontWeight: 'bold', ...labelStyle };\n\n  const negativeStackLabel =\n    negValue < 0\n      ? getStackLabel?.({\n          group,\n          value: negValue,\n          data: negItemsData\n        })\n      : '';\n\n  const posProps = getStackLabelProps(\n    groupCenter,\n    yScale.transform(posValue),\n    false,\n    isHoriz,\n    isRtl,\n    getTextDimensions(positiveStackLabel, stackLabelStyle)\n  );\n  const negProps = getStackLabelProps(\n    groupCenter,\n    yScale.transform(negValue),\n    true,\n    isHoriz,\n    isRtl,\n    getTextDimensions(negativeStackLabel, stackLabelStyle)\n  );\n\n  return (\n    <>\n      <text class={styles.stackLabelStyle} style={stackLabelStyle} {...posProps}>\n        {positiveStackLabel}\n      </text>\n      <text class={styles.stackLabelStyle} style={stackLabelStyle} {...negProps}>\n        {negativeStackLabel}\n      </text>\n    </>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\nimport { Font } from '#hooks/PRIVATE_useTextDimensions';\nimport { BarItemData } from './barChart.types';\nimport { styles } from '#PRIVATE_Chart/themes/ChartStyles.css';\nimport { canFitLabel, getLabelProps } from './utils/barItemLabelUtils';\nimport { VNode } from 'preact';\nimport { getContrastingTextColor } from '#utils/PRIVATE_colorUtils/colorUtils';\n\ntype Props<K> = {\n  item: BarItemData<K>;\n  seriesColor?: string;\n  isStacked: boolean;\n  defaultFontSize: string;\n  isHoriz: boolean;\n  barDim: Dimension;\n  getTextDimensions?: (text: string, style: Font) => Dimension;\n  isRtl: boolean;\n};\n\nexport function BarLabel<K>({\n  item,\n  seriesColor,\n  isStacked,\n  defaultFontSize,\n  barDim,\n  isRtl,\n  isHoriz,\n  getTextDimensions\n}: Props<K>) {\n  let label: VNode | null = null;\n  const position =\n    !item.labelPosition || (item.labelPosition === 'outsideBarEdge' && isStacked)\n      ? 'center'\n      : item.labelPosition;\n  const labelString = item.label;\n  const color = item.color || seriesColor;\n  const needsContrastColor = isStacked || !(position === 'outsideBarEdge');\n\n  if (\n    position != 'none' &&\n    labelString &&\n    getTextDimensions &&\n    !(isStacked && position === 'outsideBarEdge')\n  ) {\n    const labelStyle = {\n      fontSize: defaultFontSize,\n      fill: needsContrastColor ? getContrastingTextColor(color!) : undefined,\n      ...item.labelStyle\n    };\n    const labelDims = getTextDimensions(labelString, labelStyle);\n    const canFit = canFitLabel(isHoriz, labelDims, barDim, position || 'center');\n    label = canFit ? (\n      <text\n        class={styles.dataLabelStyle}\n        style={labelStyle}\n        {...getLabelProps(\n          isHoriz,\n          isRtl,\n          item.value < 0,\n          barDim,\n          position || 'center',\n          getTextDimensions?.(labelString, labelStyle)\n        )}>\n        {labelString}\n      </text>\n    ) : null;\n  }\n\n  return label;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Bar } from './Bar';\nimport { BarItemData, BarSeriesData, StackLabelContext } from './barChart.types';\nimport { getBarProps, getRectCoord } from './utils/barItemUtils';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { getBarGapsInfo } from './utils/barSeriesUtils';\nimport { getBaseAndEndCoord } from './utils/barLayoutUtils';\nimport { getMixedFreqGroupCenter } from '../utils/PRIVATE_chartUtils/layoutUtils';\nimport { Info, Scale, Group } from '../utils/UNSAFE_visTypes/chart';\nimport { Dimension } from '../utils/UNSAFE_visTypes/common';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { getItemAriaLabel } from '../utils/PRIVATE_chartUtils/accUtils';\nimport { VisTextStyle, supportsMobileScreenReader } from '../utils/UNSAFE_visUtils';\nimport { Font } from '../hooks/PRIVATE_useTextDimensions';\nimport { StackLabels } from './BarChartStackLabel';\nimport { BarLabel } from './BarLabel';\n\ntype BarGroupProps<K, D> = {\n  yScale: Scale;\n  xScale: Scale;\n  colors: ColorProps['color'][];\n  series: BarSeriesData<K, D>[];\n  group: Group;\n  timeAxisType?: 'enabled' | 'skipGaps' | 'mixedFrequency';\n  focusedItemInfo?: Info;\n  hoveredItemInfo?: Info;\n  isSelectionEnabled: boolean;\n  selectedIds?: Set<K>;\n  hiddenIds?: Set<K>;\n  highlightedIds?: Set<K>;\n  groupIndex: number;\n  barGapRatio: number;\n  dataItemGaps: number;\n  groupWidth: number;\n  isStacked: boolean;\n  activeId?: string;\n  orientation: 'horizontal' | 'vertical';\n  isDrillEnabled: boolean;\n  isLog: boolean;\n  isRtl: boolean;\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined;\n  isPointInsideMarquee: ((id: K, point: { x: number; y: number }) => boolean) | undefined;\n  getTextDimensions?: (text: string, style: Font) => Dimension;\n  defaultFontSize: string;\n  stacklabelStyle?: VisTextStyle;\n  getStackLabel?: (context: StackLabelContext<D>) => string;\n};\n\nexport function BarGroup<K extends string | number, D extends BarItemData<K>>({\n  yScale,\n  xScale,\n  colors,\n  series,\n  groupIndex,\n  hiddenIds,\n  barGapRatio,\n  dataItemGaps,\n  groupWidth,\n  highlightedIds,\n  selectedIds,\n  isPointInsideMarquee,\n  orientation,\n  isLog,\n  activeId,\n  getDataItem,\n  isRtl,\n  isStacked,\n  isSelectionEnabled,\n  focusedItemInfo,\n  hoveredItemInfo,\n  isDrillEnabled,\n  group,\n  timeAxisType,\n  getTextDimensions,\n  defaultFontSize,\n  stacklabelStyle,\n  getStackLabel\n}: BarGroupProps<K, D>) {\n  const isHoriz = orientation === 'horizontal';\n  const items = [];\n  const numSeries = series.length;\n\n  let posCumulativeValue = isLog ? yScale.domain()[0] : 0;\n  let negCumulativeValue = 0;\n\n  const positiveValueItems: D[] = [];\n  const negativeValueItems: D[] = [];\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const isStackLabelRendered = isStacked && !!getStackLabel && timeAxisType != 'mixedFrequency';\n\n  let groupCenter =\n    timeAxisType != 'mixedFrequency'\n      ? xScale.transform(timeAxisType != undefined ? new Date(group.id).getTime() : groupIndex)\n      : undefined;\n\n  for (let seriesIndex = 0; seriesIndex < numSeries; seriesIndex += 1) {\n    const item = getDataItem(seriesIndex, groupIndex);\n    if (!item || hiddenIds?.has(item.id) || (isLog && item.value <= 0)) {\n      continue;\n    }\n\n    if (timeAxisType === 'mixedFrequency') {\n      groupCenter = getMixedFreqGroupCenter<K, D>(xScale, item);\n    }\n\n    const isFocused =\n      focusedItemInfo?.groupIndex === groupIndex &&\n      focusedItemInfo?.seriesIndex === seriesIndex &&\n      focusedItemInfo?.isFocusVisible;\n    const isHovered =\n      hoveredItemInfo?.groupIndex === groupIndex &&\n      hoveredItemInfo?.seriesIndex === seriesIndex &&\n      hoveredItemInfo?.isCurrent;\n    const isFocusVisible = !!isFocused || (!!isHovered && isSelectionEnabled);\n    const isActive = (isFocused && focusedItemInfo.isCurrent) || isHovered;\n    const isHighlighted = highlightedIds === undefined || highlightedIds.has(item.id);\n\n    const isDrillable = item.drilling === 'on' || (item.drilling != 'off' && isDrillEnabled);\n\n    const { barWidth, offset, itemsGaps } = getBarGapsInfo(\n      seriesIndex,\n      groupWidth,\n      barGapRatio,\n      numSeries,\n      dataItemGaps,\n      isStacked,\n      isRtl\n    );\n    const x1 = groupCenter! + offset;\n    const x2 = x1 + barWidth;\n\n    const { baselineCoord, endCoord } = getBaseAndEndCoord(\n      item.value,\n      yScale,\n      isStacked,\n      isLog,\n      itemsGaps,\n      negCumulativeValue,\n      posCumulativeValue\n    );\n\n    negCumulativeValue += item.value < 0 ? item.value : 0;\n    posCumulativeValue += item.value > 0 ? item.value : 0;\n\n    if (isStackLabelRendered) {\n      if (item.value >= 0) {\n        positiveValueItems.push(item);\n      } else {\n        negativeValueItems.push(item);\n      }\n    }\n\n    const barprops = getBarProps(item, series[seriesIndex], colors?.[seriesIndex]);\n    const rectParam = getRectCoord(x1, x2, endCoord, baselineCoord, isHoriz);\n    const isSelected = isPointInsideMarquee\n      ? isPointInsideMarquee?.(item.id, {\n          x: rectParam.x + rectParam.width / 2,\n          y: rectParam.y\n        })\n      : selectedIds?.has(item.id!);\n\n    const ariaLabel =\n      supportsMobileScreenReader || isActive\n        ? getItemAriaLabel(\n            translations,\n            series[seriesIndex].name || series[seriesIndex].id.toString(),\n            group.name || group.id,\n            item.value,\n            isSelectionEnabled,\n            !!isSelected,\n            isDrillable,\n            item.accessibleLabel\n          )\n        : '';\n\n    items.push(\n      <>\n        <Bar\n          {...rectParam}\n          {...barprops}\n          seriesIndex={seriesIndex}\n          groupIndex={groupIndex}\n          isFocused={isFocusVisible}\n          activeId={isActive ? activeId : ''}\n          aria-label={ariaLabel}\n          isDimmed={!isHighlighted}\n          isSelected={!!isSelected}\n          isPointerEnabled={isDrillable || isSelectionEnabled}\n          key={`${groupIndex};${seriesIndex}`}\n        />\n        <BarLabel\n          item={item}\n          isRtl={isRtl}\n          seriesColor={colors[seriesIndex % 12]}\n          isStacked={isStacked}\n          defaultFontSize={defaultFontSize}\n          barDim={rectParam}\n          isHoriz={isHoriz}\n          getTextDimensions={getTextDimensions}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {items}\n      {isStackLabelRendered && getTextDimensions && (\n        <StackLabels\n          group={group}\n          isRtl={isRtl}\n          yScale={yScale}\n          getStackLabel={getStackLabel}\n          defaultFontSize={defaultFontSize}\n          getTextDimensions={getTextDimensions}\n          posItemsData={positiveValueItems}\n          negItemsData={negativeValueItems}\n          isHoriz={isHoriz}\n          groupCenter={groupCenter!}\n          labelStyle={stacklabelStyle}\n          posValue={posCumulativeValue}\n          negValue={negCumulativeValue}\n        />\n      )}\n    </>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ChartItemData, Info, ItemInfo } from '../../utils/UNSAFE_visTypes/chart';\nimport {\n  getNextItemInGroup,\n  getNextItemInSeries,\n  getPrevItemInGroup,\n  getPrevItemInSeries\n} from '../../utils/PRIVATE_chartUtils/navUtils';\n\ntype isItemNavigableType = (seriesIndex: number, groupIndex: number) => boolean;\n\n/**\n * Get next item in unstacked bar chart.\n * @param info\n * @param viewportEndIndex\n * @param numSeries\n * @param isNavigable\n * @returns\n */\nexport function getNextItem(\n  info: ItemInfo,\n  viewportEndIndex: number,\n  numSeries: number,\n  isNavigable: isItemNavigableType\n): ItemInfo {\n  const nextItemInGroup = getNextItemInGroup(info, numSeries, isNavigable);\n  if (nextItemInGroup) return nextItemInGroup;\n\n  if (info.groupIndex < viewportEndIndex) {\n    let nextItem = { seriesIndex: 0, groupIndex: info.groupIndex + 1 };\n    if (isNavigable(nextItem.seriesIndex, nextItem.groupIndex)) return nextItem;\n    nextItem = getNextItem(nextItem, viewportEndIndex, numSeries, isNavigable);\n    if (nextItem) return nextItem;\n  }\n  return info;\n}\n\n/**\n * Get prev item in unstacked bar chart.\n * @param info\n * @param viewportStartIndex\n * @param numSeries\n * @param isNavigable\n * @returns\n */\nexport function getPreviousItem(\n  info: ItemInfo,\n  viewportStartIndex: number,\n  numSeries: number,\n  isNavigable: (seriesIndex: number, groupIndex: number) => boolean\n) {\n  const prevItemInGroup = getPrevItemInGroup(info, isNavigable);\n  if (prevItemInGroup) return prevItemInGroup;\n\n  if (info.groupIndex > viewportStartIndex) {\n    let prevItem = { groupIndex: info.groupIndex - 1, seriesIndex: numSeries - 1 };\n    if (isNavigable(prevItem.seriesIndex, prevItem.groupIndex)) return prevItem;\n    prevItem = getPreviousItem(prevItem, viewportStartIndex, numSeries, isNavigable);\n    if (prevItem) return prevItem;\n  }\n  return info;\n}\n\nexport function getBarChartNavUtil<K, D extends ChartItemData<K>>(\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined,\n  numSeries: number,\n  viewportStartIndex: number,\n  viewportEndIndex: number,\n  isStacked: boolean,\n  isRtl: boolean\n) {\n  const isItemNavigable = (seriesIndex: number, groupIndex: number) => {\n    const barItem = getDataItem(seriesIndex, groupIndex);\n    return Boolean(barItem);\n  };\n\n  const getNextChartItem = (\n    itemInfo: Info,\n    arrow: 'ArrowLeft' | 'ArrowRight' | 'ArrowDown' | 'ArrowUp'\n  ): Info => {\n    if (!isStacked && (arrow === 'ArrowDown' || arrow === 'ArrowUp')) {\n      return itemInfo;\n    }\n    let newInfo: Info | undefined;\n    // TODO: this is just to keep typescript happy.\n    // figure out consistent typing while doing type cleanup.\n    const info = {\n      groupIndex: itemInfo.groupIndex!,\n      seriesIndex: itemInfo.seriesIndex!\n    };\n\n    if (info.groupIndex! < viewportStartIndex) {\n      info.groupIndex = viewportStartIndex;\n      return info;\n    } else if (info.groupIndex! > viewportEndIndex) {\n      info.groupIndex = viewportEndIndex;\n      return info;\n    }\n\n    if (isStacked) {\n      if (arrow === 'ArrowLeft') {\n        newInfo = isRtl\n          ? getNextItemInSeries(info, viewportEndIndex, isItemNavigable)\n          : getPrevItemInSeries(info, viewportStartIndex, isItemNavigable);\n      } else if (arrow === 'ArrowRight') {\n        newInfo = isRtl\n          ? getPrevItemInSeries(info, viewportStartIndex, isItemNavigable)\n          : getNextItemInSeries(info, viewportEndIndex, isItemNavigable);\n      } else if (arrow === 'ArrowDown') {\n        newInfo = getPrevItemInGroup(info, isItemNavigable);\n      } else {\n        newInfo = getNextItemInGroup(info, numSeries, isItemNavigable);\n      }\n    } else {\n      if (arrow === 'ArrowRight') {\n        newInfo = isRtl\n          ? getPreviousItem(info, viewportStartIndex, numSeries, isItemNavigable)\n          : getNextItem(info, viewportEndIndex, numSeries, isItemNavigable);\n      } else if (arrow === 'ArrowLeft') {\n        newInfo = isRtl\n          ? getNextItem(info, viewportEndIndex, numSeries, isItemNavigable)\n          : getPreviousItem(info, viewportStartIndex, numSeries, isItemNavigable);\n      }\n    }\n    return newInfo || info;\n  };\n\n  return getNextChartItem;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { BarChartProps, BarItemData } from './barChart.types';\nimport { getBarGapRatio } from './utils/barSeriesUtils';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { BarGroup } from './BarGroup';\nimport { findNearestDataPoint } from '../utils/PRIVATE_chartUtils/layoutUtils';\nimport {\n  getBarCenterCoordinate,\n  getBarPosition,\n  getSeriesOffsetAndWidth\n} from './utils/barLayoutUtils';\nimport { getBarChartNavUtil } from './utils/barNavUtils';\nimport { Chart } from '../PRIVATE_Chart';\nimport { TimeAxisProps, Scale } from '../utils/UNSAFE_visTypes/chart';\nimport { getItemColor, getMarkerType } from '../utils/PRIVATE_chartUtils/dataStyleUtils';\n\n/* bar chart start and end axis offset */\nconst AXIS_OFFSET = 0.5;\n\n/**\n * A Bar chart displays information graphically using rectangular bars with heights or lengths proportional to the values that they represent,\n * making relationships among the data easier to understand.\n */\nexport function BarChart<K extends string | number, D extends BarItemData<K>>({\n  width,\n  height,\n  selectedIds = [],\n  hiddenIds = [],\n  highlightedIds,\n  hideAndShowBehavior = 'none',\n  orientation = 'vertical',\n  yAxis,\n  series,\n  groups,\n  isStacked = false,\n  getDataItem,\n  selectionMode = 'none',\n  drilling = 'off',\n  dataItemGaps = 0.5,\n  ...props\n}: BarChartProps<K, D>) {\n  const { direction } = useUser();\n  const isRtl = direction === 'rtl';\n  const hiddenSet = new Set(hiddenIds);\n  const isHoriz = orientation === 'horizontal';\n  const timeAxisType = (props.xAxis as TimeAxisProps)?.timeAxisType;\n  const selectedSet = new Set(selectedIds);\n  const highlightedSet = new Set(highlightedIds);\n  const getGapRatio = (startIndex: number, endIndex: number) => {\n    return getBarGapRatio(isStacked, startIndex, endIndex);\n  };\n  const getNextChartItemFunc = (startIndex: number, endIndex: number) => {\n    return getBarChartNavUtil(getDataItem, series.length, startIndex, endIndex, isStacked, isRtl);\n  };\n  const getDataItemPos = (xScale: Scale, yScale: Scale, groupWidth: number, gapRatio: number) => {\n    return getBarPosition(\n      series,\n      groups,\n      getDataItem,\n      xScale,\n      yScale,\n      hiddenSet,\n      dataItemGaps,\n      groupWidth,\n      gapRatio,\n      yAxis?.scale === 'log',\n      isStacked,\n      isRtl,\n      isHoriz,\n      timeAxisType\n    );\n  };\n\n  const findNearest = (xScale: Scale, yScale: Scale, groupWidth: number, gapRatio: number) => {\n    const getSeriesDataInfo = getSeriesOffsetAndWidth(\n      groupWidth,\n      gapRatio,\n      series.length,\n      dataItemGaps,\n      isStacked,\n      isRtl\n    );\n    return findNearestDataPoint(\n      series,\n      groups,\n      xScale,\n      yScale,\n      getDataItem,\n      isStacked,\n      getSeriesDataInfo,\n      getBarCenterCoordinate,\n      yAxis?.scale === 'log',\n      dataItemGaps,\n      hiddenSet,\n      timeAxisType\n    );\n  };\n\n  const getMarkerColorAndType = (seriesIndex: number, groupIndex: number) => {\n    return {\n      color: getItemColor<K, D>(seriesIndex, groupIndex, series, getDataItem),\n      type: getMarkerType<K>(seriesIndex, groupIndex, 'bar', getDataItem)\n    };\n  };\n\n  return (\n    <Chart\n      width={width}\n      height={height}\n      selectedIds={selectedSet}\n      hiddenIds={hiddenIds}\n      hideAndShowBehavior={hideAndShowBehavior}\n      orientation={orientation}\n      yAxis={yAxis}\n      series={series}\n      groups={groups}\n      isStacked={isStacked}\n      getDataItem={getDataItem}\n      selectionMode={selectionMode}\n      drilling={drilling}\n      renderGridLinesInFront={false}\n      findNearest={findNearest}\n      getDataItemPos={getDataItemPos}\n      getNavUtil={getNextChartItemFunc}\n      getGapRatio={getGapRatio}\n      getMarkerInfo={getMarkerColorAndType}\n      isRtl={isRtl}\n      offset={AXIS_OFFSET}\n      {...props}>\n      {({\n        xStartIndex,\n        xEndIndex,\n        xScale,\n        yScale,\n        gapRatio,\n        activeId,\n        focusedItemInfo,\n        hoveredItemInfo,\n        groupWidth,\n        isPointInsideMarquee,\n        getTextDimensions,\n        defaultFontSize,\n        colors\n      }) => {\n        return (\n          <>\n            {groups.slice(xStartIndex, xEndIndex + 1).map((_, index) => (\n              <BarGroup\n                yScale={yScale}\n                xScale={xScale}\n                groupIndex={index + xStartIndex}\n                selectedIds={selectedSet}\n                hiddenIds={hiddenSet}\n                highlightedIds={highlightedIds ? highlightedSet : highlightedIds}\n                isDrillEnabled={drilling === 'on'}\n                series={series}\n                barGapRatio={gapRatio}\n                dataItemGaps={dataItemGaps}\n                isPointInsideMarquee={isPointInsideMarquee}\n                isStacked={isStacked}\n                groupWidth={groupWidth}\n                group={groups[index]}\n                timeAxisType={(props.xAxis as TimeAxisProps)?.timeAxisType}\n                colors={colors}\n                activeId={activeId}\n                isLog={yAxis?.scale === 'log'}\n                orientation={orientation}\n                getDataItem={getDataItem}\n                isSelectionEnabled={selectionMode != 'none'}\n                isRtl={isRtl}\n                focusedItemInfo={focusedItemInfo}\n                hoveredItemInfo={hoveredItemInfo}\n                getTextDimensions={getTextDimensions}\n                defaultFontSize={defaultFontSize}\n                getStackLabel={props.getStackLabel}\n              />\n            ))}\n          </>\n        );\n      }}\n    </Chart>\n  );\n}\n"],"names":["_jsx","_jsxs","_Fragment","_createElement"],"mappings":"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"}