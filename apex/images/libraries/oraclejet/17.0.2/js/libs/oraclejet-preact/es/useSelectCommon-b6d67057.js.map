{"version":3,"file":"useSelectCommon-b6d67057.js","sources":["../../src/PRIVATE_SelectCommon/itemTextUtils.ts","../../src/PRIVATE_SelectCommon/DefaultList.tsx","../../src/PRIVATE_SelectCommon/eventUtils.ts","../../src/PRIVATE_SelectCommon/Dropdown.tsx","../../src/PRIVATE_SelectCommon/DropdownArrow.tsx","../../src/PRIVATE_SelectCommon/DropdownList.tsx","../../src/PRIVATE_SelectCommon/DropdownUserAssistance.tsx","../../src/PRIVATE_SelectCommon/EmptyResults.tsx","../../src/PRIVATE_SelectCommon/LinkItem.tsx","../../src/PRIVATE_SelectCommon/MobileDropdown.tsx","../../src/PRIVATE_SelectCommon/SelectMobileDropdown.tsx","../../src/PRIVATE_SelectCommon/SelectMobileFieldInput.tsx","../../src/PRIVATE_SelectCommon/selectUtils.ts","../../src/PRIVATE_SelectCommon/useSelectCommon.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { error } from '../utils/UNSAFE_logger';\nimport { ItemTextFunctionType, ItemTextType } from '../utils/UNSAFE_selectUtils';\n\nexport function renderItemText<K, D>(item: Item<K, D>, itemText: ItemTextType<K, D>) {\n  // if item-text is a string and the data has the specified field, return it;\n  // otherwise log an error\n  if (typeof itemText === 'string') {\n    if ((item.data as any)?.hasOwnProperty(itemText)) {\n      const retData = item.data[itemText];\n      return String(retData);\n    }\n    error('SelectMultiple: itemText specifies field that does not exist: ' + itemText);\n    // return undefined if the field doesn't exist\n    return undefined;\n  }\n  // if item-text is a function, call it to create a display label\n  return (itemText as ItemTextFunctionType<K, D>)(item);\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, ComponentProps } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\nimport {\n  CurrentKeyDetail,\n  DataState,\n  ItemActionDetail,\n  ListItemRendererContext,\n  Metadata,\n  SelectionDetail\n} from '../UNSAFE_Collection';\nimport { HighlightText } from '../UNSAFE_HighlightText';\nimport { List, SkeletonContainer } from '../PRIVATE_List';\nimport { Flex } from '../UNSAFE_Flex';\nimport { ListItemText } from '#UNSAFE_ListItemLayout';\nimport { Skeleton } from '../UNSAFE_Skeleton';\nimport { Keys } from '../utils/UNSAFE_keys';\nimport { ItemTextType } from '../utils/UNSAFE_selectUtils';\nimport { renderItemText } from './itemTextUtils';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n\ntype PickedPropsFromList = Pick<\n  ComponentProps<typeof List>,\n  'aria-label' | 'currentItemVariant' | 'selectionMode'\n>;\n\n// pick the props from the ListItemContext instead of extending it directly so that we\n// don't automatically expose any new props that may be added to it\ntype PickedPropsFromListItemContext<K, D> = Pick<\n  ListItemRendererContext<K, D>,\n  'data' | 'index' | 'selector'\n>;\ntype ItemRendererSelectionDetail<K> = {\n  value: Set<K>;\n  target: EventTarget | null;\n};\ntype ItemRendererMetadata<K> = Pick<Metadata<K>, 'key' | 'suggestion'>;\ntype ItemRendererProps<K, D> = PickedPropsFromListItemContext<K, D> & {\n  metadata: ItemRendererMetadata<K>;\n  searchText?: string;\n  selectedKeys?: Set<K>;\n  onSelectionChange: (detail: ItemRendererSelectionDetail<K>) => void;\n};\n\ntype Props<K extends string | number, D extends Record<string, any>> = PickedPropsFromList & {\n  itemRenderer?: (itemRendererProps: ItemRendererProps<K, D>) => ComponentChildren;\n  itemText: ItemTextType<K, D>;\n  // props from List that we constrain or unconstrain\n  currentKey?: K;\n  data?: DataState<K, D> | null;\n  onCurrentKeyChange?: (detail: CurrentKeyDetail<K>) => void;\n  onItemAction?: (detail: ItemActionDetail<K, D>) => void;\n  onLoadRange?: ComponentProps<typeof List>['onLoadRange'];\n  onSelectionChange?: (detail: SelectionDetail<K>) => void;\n  searchText?: string;\n  selectedKeys?: Set<K>;\n};\n\nconst noOp = () => {};\n\nexport function DefaultList<K extends string | number, D extends Record<string, any>>({\n  'aria-label': ariaLabel,\n  currentItemVariant,\n  currentKey,\n  data,\n  itemRenderer,\n  itemText,\n  onCurrentKeyChange,\n  onItemAction,\n  onLoadRange = noOp,\n  onSelectionChange,\n  searchText,\n  selectedKeys,\n  selectionMode\n}: Props<K, D>) {\n  const listItemRenderer = useCallback(\n    (listItemContext: ListItemRendererContext<K, D>) => {\n      // specify the listItemContext props that we want to expose individually instead of\n      // spreading the whole object so that we don't automatically include any new props that\n      // may be added to it\n      const itemRendererProps: ItemRendererProps<K, D> = {\n        data: listItemContext.data,\n        index: listItemContext.index,\n        metadata: listItemContext.metadata,\n        selector: listItemContext.selector,\n        searchText,\n        selectedKeys,\n        onSelectionChange: ({ target, value }) => {\n          onSelectionChange?.({\n            target,\n            value: { all: false, keys: value }\n          });\n        }\n      };\n      const itemContext = {\n        data: listItemContext.data,\n        key: listItemContext.metadata.key,\n        metadata: listItemContext.metadata\n      };\n      return itemRenderer ? (\n        itemRenderer(itemRendererProps)\n      ) : (\n        <Flex align=\"center\">\n          {listItemContext.selector && (\n            <div class={dropdownStyles.selectorWrapper}>{listItemContext.selector()}</div>\n          )}\n          <div\n            class={\n              selectionMode === 'single'\n                ? dropdownStyles.singleSelectItem\n                : dropdownStyles.multiSelectItem\n            }>\n            <ListItemText variant=\"primary\">\n              <HighlightText matchText={searchText}>\n                {renderItemText(itemContext, itemText) as string}\n              </HighlightText>\n            </ListItemText>\n          </div>\n        </Flex>\n      );\n    },\n    [itemRenderer, itemText, onSelectionChange, searchText, selectedKeys, selectionMode]\n  );\n\n  const keys = useMemo(() => {\n    return { all: false, keys: selectedKeys ?? new Set<K>() };\n  }, [selectedKeys]) as Keys<K>;\n\n  return (\n    <List<K, D>\n      aria-label={ariaLabel}\n      allowTabbableMode={false}\n      currentItemVariant={currentItemVariant}\n      currentKey={currentKey}\n      data={data ?? null}\n      loadingIndicator={loadingIndicator}\n      onCurrentKeyChange={onCurrentKeyChange}\n      onItemAction={onItemAction}\n      onLoadRange={onLoadRange}\n      onSelectionChange={onSelectionChange}\n      role=\"listbox\"\n      selectedKeys={keys}\n      selectionMode={selectionMode}>\n      {(context: ListItemRendererContext<K, D>) => listItemRenderer(context)}\n    </List>\n  );\n}\n\n/**\n * Custom 3 Skeleton loader for select multiple\n * TODO: to remove this once  is solved\n */\nconst loadingIndicator = (\n  <SkeletonContainer minimumCount={3}>\n    {() => {\n      return (\n        <Flex height=\"12x\" align=\"center\">\n          <Skeleton height=\"4x\" />\n        </Flex>\n      );\n    }}\n  </SkeletonContainer>\n);\n","export const isSimpleClick = (event: MouseEvent) => {\n  return event.button === 0 && !event.ctrlKey;\n};\n\nexport const preventDefault = (event: Event) => {\n  event.preventDefault();\n};\n\nexport const preventDefaultForCurrentTarget = (event: MouseEvent) => {\n  if (event.currentTarget === event.target) {\n    event.preventDefault();\n  }\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, ComponentProps } from 'preact';\nimport { MutableRef, useCallback, useState } from 'preact/hooks';\nimport { Floating, PositionData } from '../UNSAFE_Floating';\nimport { Layer } from '../UNSAFE_Layer';\nimport { isControlOrFunctionKey, KEYS } from '../utils/PRIVATE_keyboardUtils';\nimport { preventDefaultForCurrentTarget } from './eventUtils';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n//Once Dropdown is consumed this will be removed\nimport { useOutsideMousedown } from '../hooks/PRIVATE_useOutsideMousedown';\n\ntype FloatingProps = ComponentProps<typeof Floating>;\n\ntype Props = {\n  anchorRef: MutableRef<HTMLElement | null>;\n  children?: ComponentChildren;\n  dropdownRef: MutableRef<HTMLElement | null>;\n  id?: string;\n  isOpen?: boolean;\n  onAutoDismiss?: (event?: Event) => void;\n  onPosition?: FloatingProps['onPosition'];\n};\n\nconst DEFAULT_PLACEMENT = 'bottom-start';\n\n//TODO: Start consuming PRIVATE_Dropdown. JET-62565\nexport function Dropdown({\n  anchorRef,\n  children,\n  dropdownRef,\n  id,\n  isOpen,\n  onAutoDismiss,\n  onPosition\n}: Props) {\n  const [placement, setPlacement] = useState<FloatingProps['placement']>(DEFAULT_PLACEMENT);\n\n  const [prevIsOpen, setPrevIsOpen] = useState(isOpen);\n\n  if (prevIsOpen !== isOpen) {\n    // reset the placement to the default when the dropdown closes, not opens, so that it doesn't\n    // initially open in the previous position and then move to the default position on the\n    // rerender after the state is updated\n    if (!isOpen) {\n      setPlacement(DEFAULT_PLACEMENT);\n    }\n  }\n\n  const handlePosition = useCallback(\n    (positionData: PositionData) => {\n      // update the placement so that the dropdown stays where it is until there is a collision,\n      // i.e. it no longer fits, instead of letting it try to move back to the default position\n      // on every render\n      setPlacement(positionData.placement);\n\n      // call the callback that was passed in through props\n      onPosition?.(positionData);\n    },\n    [onPosition, setPlacement]\n  );\n\n  const handleAutoDismiss = useCallback(\n    (event: Event) => {\n      onAutoDismiss?.(event);\n    },\n    [onAutoDismiss]\n  );\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.defaultPrevented || isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.ESC:\n        case KEYS.TAB:\n          handleAutoDismiss(event);\n          break;\n      }\n    },\n    [handleAutoDismiss]\n  );\n\n  // use the mousedown event to be consistent with legacy JET and so that we're hiding the dropdown\n  // on the same event where focus will transfer\n  useOutsideMousedown({\n    isDisabled: !isOpen,\n    ref: [anchorRef, dropdownRef],\n    handler: handleAutoDismiss\n  });\n\n  // TODO: get dropdown y (mainAxis) offset from --oj-c-PRIVATE-DO-NOT-USE-private-core-global-dropdown-offset\n  const offsetValue = { mainAxis: 4, crossAxis: 0 };\n\n  const inlineStyle = isOpen\n    ? {\n        minWidth: `${anchorRef.current?.offsetWidth}px`\n      }\n    : {};\n\n  if (prevIsOpen !== isOpen) {\n    setPrevIsOpen(isOpen);\n  }\n\n  return !isOpen ? null : (\n    <Layer logicalParentRef={anchorRef}>\n      <Floating\n        anchorRef={anchorRef}\n        sizeOptions={{\n          isMaxHeightAdjusted: true,\n          maxHeightCeiling: 400\n        }}\n        ref={dropdownRef}\n        placement={placement}\n        offsetValue={offsetValue}\n        onPosition={handlePosition}>\n        <div\n          class={dropdownStyles.base}\n          id={id}\n          style={inlineStyle}\n          onKeyDown={handleKeyDown}\n          onMouseDown={preventDefaultForCurrentTarget}>\n          {children}\n        </div>\n      </Floating>\n    </Layer>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback } from 'preact/hooks';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { DropdownArrowIcon } from '../PRIVATE_ThemedIcons/DropdownArrowIcon';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\nimport { useComponentTheme } from '#hooks/UNSAFE_useComponentTheme';\nimport { ButtonLabelLayoutRedwoodTheme } from '#UNSAFE_ButtonLabelLayout/themes/redwood/ButtonLabelLayoutTheme';\nimport type { ButtonLabelLayoutVariantOptions } from '#UNSAFE_ButtonLabelLayout/themes/ButtonLabelLayoutStyles.css';\nimport { TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\nimport { BaseButtonRedwoodTheme } from '#UNSAFE_BaseButton/themes/redwood/BaseButtonTheme';\n\ntype Props = TestIdProps & {\n  isDisabled?: boolean;\n  onClick?: () => void;\n};\n\nconst noop = () => {};\n\nexport function DropdownArrow({ isDisabled = false, onClick, testId }: Props) {\n  const { classes } = useComponentTheme<ButtonLabelLayoutVariantOptions>(\n    ButtonLabelLayoutRedwoodTheme,\n    { size: 'sm' }\n  );\n  const { baseTheme } = useComponentTheme(BaseButtonRedwoodTheme);\n\n  const preventDefault = useCallback((event: Event) => {\n    event.preventDefault();\n  }, []);\n  const { pressProps } = usePress(onClick ?? noop, { isDisabled });\n\n  // TODO: JET-67410 replace this with a icon button\n  const styleClasses = classNames([\n    classes,\n    baseTheme,\n    dropdownStyles.arrow.base,\n    isDisabled ? dropdownStyles.arrow.disabled : dropdownStyles.arrow.enabled\n  ]);\n\n  const testIdProps = useTestId(testId);\n\n  return (\n    <span\n      aria-hidden=\"true\"\n      class={styleClasses}\n      tabIndex={-1}\n      onMouseDown={preventDefault}\n      {...testIdProps}\n      {...pressProps}>\n      <DropdownArrowIcon />\n    </span>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { CollectionGestureContext } from '../hooks/PRIVATE_useCollectionGestureContext';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { preventDefaultForCurrentTarget } from './eventUtils';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n\ntype Props = {\n  children?: ComponentChildren;\n  hasTopGap?: boolean;\n  hasBottomGap?: boolean;\n  isLoading?: boolean;\n};\n\nexport function DropdownList({\n  children,\n  hasTopGap = true,\n  hasBottomGap = true,\n  isLoading = false\n}: Props) {\n  const styleClasses = classNames([\n    dropdownStyles.list.base,\n    hasTopGap && dropdownStyles.list.topGap,\n    hasBottomGap && dropdownStyles.list.bottomGap,\n    isLoading && dropdownStyles.list.loading\n  ]);\n  return (\n    <CollectionGestureContext.Provider value={'embedded'}>\n      <div class={styleClasses} onMouseDown={preventDefaultForCurrentTarget}>\n        {children}\n      </div>\n    </CollectionGestureContext.Provider>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { FormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { InlineUserAssistance } from '../UNSAFE_UserAssistance';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n\ntype InlineUserAssistanceProps = Pick<\n  ComponentProps<typeof InlineUserAssistance>,\n  | 'assistiveText'\n  | 'fieldLabel'\n  | 'helpSourceLink'\n  | 'helpSourceText'\n  | 'id'\n  | 'userAssistanceDensity'\n>;\n\nexport function DropdownUserAssistance(props: InlineUserAssistanceProps) {\n  // Prevent the focus from transferring when the user clicks on an empty/non-clickable area\n  // of the user assistance\n  const handleMouseDown = useCallback((event: MouseEvent) => {\n    // Don't call preventDefault when the user clicks on the help source link, so that the\n    // focus is allowed to transfer in that case.\n    if ((event.target as Element)?.tagName !== 'A') {\n      event.preventDefault();\n    }\n  }, []);\n\n  return (\n    <FormFieldContext.Provider value={{ isFocused: true }}>\n      <div class={dropdownStyles.userAssistance} onMouseDown={handleMouseDown}>\n        <InlineUserAssistance {...props} />\n      </div>\n    </FormFieldContext.Provider>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { preventDefaultForCurrentTarget } from './eventUtils';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n\nexport function EmptyResults() {\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  // call preventDefault for mousedown on this div so that focus does not transfer from\n  // the input\n  return (\n    <div class={dropdownStyles.results.extraItem} onMouseDown={preventDefaultForCurrentTarget}>\n      {translations.select_noMatchesFound()}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback } from 'preact/hooks';\nimport { Link } from '#UNSAFE_Link';\nimport { useFocusWithin } from '#hooks/UNSAFE_useFocusWithin';\nimport { useHover } from '#hooks/UNSAFE_useHover';\nimport { classNames } from '#utils/UNSAFE_classNames';\nimport { dropdownStyles } from './themes/dropdownStyles.css';\n\ntype Props = {\n  /**\n   * Child content of the item.\n   */\n  children: string;\n  /**\n   * Specifies whether to highlight the item.\n   */\n  isHighlighted?: boolean;\n  /**\n   * Callback invoked when the user triggers the link, for example by clicking or pressing Enter.\n   */\n  onAction?: () => void;\n};\n\n/**\n * This component renders a link that looks like a list item in a Select* component dropdown.\n * It fires an action when the user triggers it, and is intended to be used for launching\n * external application UI from within the dropdown, for example to provide advanced search or\n * add to list functionality.\n * The LinkItem would typically be shown in a fixed position above or below the list itself.\n */\nconst LinkItem = ({ children, isHighlighted, onAction }: Props) => {\n  const { isHover, hoverProps } = useHover();\n  const { isFocused, focusProps } = useFocusWithin();\n\n  const handleClick = useCallback(\n    (e: Event) => {\n      // prevent the link from actually navigating by preventing default and returning false\n      e.preventDefault();\n      onAction?.();\n      return false;\n    },\n    [onAction]\n  );\n\n  const rootClasses = classNames([isFocused ? dropdownStyles.results.linkItemFocus : undefined]);\n\n  const linkClasses = classNames([\n    dropdownStyles.results.extraItem,\n    isHover || isFocused || isHighlighted ? dropdownStyles.results.linkItemHighlight : undefined\n  ]);\n\n  return (\n    <div class={rootClasses} {...focusProps}>\n      <Link href=\"#\" onClick={handleClick}>\n        <div class={linkClasses} {...hoverProps}>\n          {children}\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport { LinkItem };\n","import { ComponentChildren } from 'preact';\nimport { Flex } from '../UNSAFE_Flex';\nimport { Layer } from '../UNSAFE_Layer';\nimport { WindowOverlay } from '../UNSAFE_WindowOverlay';\nimport { mobileDropdownStyles } from './themes/mobileDropdownStyles.css';\n\ntype Props = {\n  /**\n   * The dropdown content\n   */\n  children?: ComponentChildren;\n\n  /**\n   * The id for the top level element\n   */\n  id?: string;\n\n  /**\n   * Specifies whether the dropdown is being shown\n   */\n  isOpen?: boolean;\n};\n\nexport function MobileDropdown({ children, id, isOpen }: Props) {\n  return !isOpen ? null : (\n    <Layer>\n      <WindowOverlay>\n        <div id={id} class={mobileDropdownStyles.base} role=\"dialog\" aria-modal=\"true\">\n          <Flex width=\"100%\" height=\"100%\" maxHeight=\"100%\" direction=\"column\">\n            {children}\n          </Flex>\n        </div>\n      </WindowOverlay>\n    </Layer>\n  );\n}\n","import { ComponentChildren, ComponentProps } from 'preact';\nimport { Separator } from '../UNSAFE_Separator';\nimport { MobileDropdown } from './MobileDropdown';\nimport { selectMobileDropdownStyles } from './themes/selectMobileDropdownStyles.css';\n\ntype MobileDropdownProps = ComponentProps<typeof MobileDropdown>;\ntype PassThroughMobileDropdownProps = Pick<MobileDropdownProps, 'id' | 'isOpen'>;\n\ntype Props = PassThroughMobileDropdownProps & {\n  /**\n   * The main dropdown content\n   */\n  children?: ComponentChildren;\n\n  /**\n   * The components to be placed in the end of the dropdown\n   */\n  footer?: ComponentChildren;\n\n  /**\n   * The components to be placed in the beginning of the dropdown\n   */\n  header?: ComponentChildren;\n\n  /**\n   * Specifies whether to have a separator between header and content\n   */\n  hasHeaderSeparator?: boolean;\n};\n\nexport function SelectMobileDropdown({\n  children,\n  footer,\n  hasHeaderSeparator = true,\n  header,\n  id,\n  isOpen\n}: Props) {\n  return (\n    <MobileDropdown id={id} isOpen={isOpen}>\n      {header}\n      {hasHeaderSeparator && <Separator />}\n      {/* TODO: Add overflow support to View and use it here */}\n      {/*  */}\n      <div class={selectMobileDropdownStyles.content}>{children}</div>\n      <Separator />\n      {footer}\n    </MobileDropdown>\n  );\n}\n","import { Ref } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport {\n  AriaAttributesSignalExcluded,\n  HTMLAttributesSignalExcluded\n} from '../utils/UNSAFE_attributeUtils';\nimport { TextProps, textInterpolations } from '../utils/UNSAFE_interpolations/text';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TextFieldInputVariantOptions } from '../UNSAFE_TextField/themes/TextFieldInputStyles.css';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { selectMobileFieldInputStyles } from './themes/SelectMobileFieldInputStyles.css';\nimport { isInputPlaceholderShown } from '../UNSAFE_TextField/TextFieldUtils';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { Text } from '../UNSAFE_Text';\nimport { useAccessibleContext } from '../hooks/UNSAFE_useAccessibleContext';\nimport { merge } from '../utils/UNSAFE_stringUtils';\nimport { TextFieldInputRedwoodTheme } from '../UNSAFE_TextField/themes/redwood/TextFieldInputTheme';\n\ntype AriaProps = Pick<\n  AriaAttributesSignalExcluded,\n  | 'aria-controls'\n  | 'aria-describedby'\n  | 'aria-expanded'\n  | 'aria-invalid'\n  | 'aria-label'\n  | 'aria-labelledby'\n>;\n\ntype EventProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onBlur' | 'onFocus'>;\n\ntype Props = AriaProps &\n  EventProps &\n  TextProps & {\n    displayValue?: string;\n    hasEmptyLabel?: boolean;\n    hasInsideLabel?: boolean;\n    isRequired?: boolean;\n    placeholder?: string;\n    variant?: 'default' | 'embedded';\n  };\n\nconst interpolations = [...Object.values(textInterpolations)];\nconst styleInterpolations = mergeInterpolations<Props>(interpolations);\n\n/**\n * This component is used for rendering the main field in mobile phones. This is a bit different from the\n * normal main field (TextFieldInput) that we use for desktop & tablet devices in the way that\n * a user will not be able to edit the value of this field. But, one can still have other functionalities\n * of having a placeholder, tab in & out of it, and other such functionalities of an enabled field.\n *\n * This also differs from ReadonlyTextFieldInput in the following ways:\n * 1. This will be rendered as div as well, but has a role of combobox set on it\n * 2. This will not be read as readonly input by the screen readers\n * 3. This has the stylings much similar to the TextFieldInput component\n * 4. This supports the use of placeholder and shows it when there is no value present\n * 5. This supports having the variant property and styles accordingly\n *\n * As such, this is very similar to the TextFieldInput except that this does not allow user input.\n * Note: we cannot use TextFieldInput with readonly set on it; even though it might provide us the\n * behavior we need, it will make the field as readonly and screen readers read the same about this\n * field. This will be an incorrect representation contextually as one can still edit the value by opening\n * the dropdown and changing the selection.\n */\nexport const SelectMobileFieldInput = forwardRef(\n  (\n    {\n      'aria-controls': ariaControls,\n      'aria-describedby': ariaDescribedBy,\n      'aria-expanded': ariaExpanded,\n      'aria-invalid': ariaInvalid,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      displayValue,\n      hasEmptyLabel,\n      hasInsideLabel = false,\n      isRequired,\n      onBlur,\n      onFocus,\n      placeholder,\n      textAlign,\n      variant = 'default'\n    }: Props,\n    ref?: Ref<HTMLDivElement>\n  ) => {\n    // consume required contexts\n    const { isDisabled, isFocused, hasValue = false } = useFormFieldContext();\n    const { isTabbable, tabbableModeProps } = useTabbableMode();\n\n    // setup properties\n    const myPlaceholder = isInputPlaceholderShown(hasInsideLabel, hasValue, isFocused)\n      ? placeholder\n      : undefined;\n\n    // Add unsafe API for specifying an external label which is added to ariaLabelledBy on the input,\n    // only when labelEdge is 'none' and label is ''. Since ariaLabelledBy takes precedence over all other\n    // kinds of labels, this helps to ensure we don't override a meaningful label.\n    const { UNSAFE_ariaLabelledBy } = useAccessibleContext();\n    const mergedAriaLabelledBy = hasEmptyLabel\n      ? merge([ariaLabelledBy, UNSAFE_ariaLabelledBy])\n      : ariaLabelledBy;\n\n    // setup style classes\n    const { class: styleInterpolationClasses } = styleInterpolations({ textAlign });\n    const { classes: themeClasses } = useComponentTheme<TextFieldInputVariantOptions>(\n      TextFieldInputRedwoodTheme,\n      {\n        type: 'notPassword',\n        styleVariant: variant,\n        textarea: 'notTextArea',\n        input: 'isInput',\n        prefix: 'noPrefix',\n        suffix: 'noSuffix',\n        startContent: 'noStartContent',\n        endContent: 'hasEndContent',\n        insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n        value: hasValue ? 'hasValue' : 'noValue',\n        focused: isFocused ? 'isFocused' : 'notFocused',\n        disabled: isDisabled ? 'isDisabled' : 'notDisabled'\n      }\n    );\n    const rootDivStyleClasses = classNames([\n      selectMobileFieldInputStyles.base,\n      styleInterpolationClasses,\n      themeClasses\n    ]);\n\n    return (\n      <div\n        aria-autocomplete=\"list\"\n        aria-controls={ariaControls}\n        aria-describedby={ariaDescribedBy}\n        aria-expanded={ariaExpanded}\n        aria-invalid={ariaInvalid}\n        aria-label={ariaLabel}\n        aria-labelledby={mergedAriaLabelledBy}\n        aria-required={isRequired ? 'true' : undefined}\n        class={rootDivStyleClasses}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        ref={ref}\n        role=\"combobox\"\n        {...(isTabbable && tabbableModeProps)}>\n        <div class={selectMobileFieldInputStyles.content}>\n          <Text variant={displayValue ? 'inherit' : 'secondary'}>\n            {displayValue || myPlaceholder}\n          </Text>\n        </div>\n      </div>\n    );\n  }\n);\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\nimport { DataState } from '../UNSAFE_Collection';\n\n/**\n * Helper function to determine whether the current device is a mobile device\n * @returns true if running on a mobile device, false otherwise\n */\nexport function isMobile() {\n  const deviceType = getClientHints().deviceType;\n  return deviceType === 'phone' || deviceType === 'tablet';\n}\n\n/**\n * Helper function to determine whether the current device is a phone\n * @returns true if running on a phone, false otherwise\n */\nexport function isPhone() {\n  return getClientHints().deviceType === 'phone';\n}\n\n/**\n * Helper function to determine whether the current device is a tablet\n * @returns true if running on a tablet, false otherwise\n */\nexport function isTablet() {\n  return getClientHints().deviceType === 'tablet';\n}\n\nexport function isBeforeDataFetch<K, D>(data: DataState<K, D>) {\n  return data.sizePrecision === 'atLeast' && data.totalSize === 0;\n}\n\nexport function isSearchTextEmptyOrUndefined(searchText?: string) {\n  return searchText === undefined || searchText.length === 0;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Ref, useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { CurrentKeyDetail, DataState } from '../UNSAFE_Collection';\nimport { PositionData } from '../UNSAFE_Floating';\nimport { allTabbableElements } from '../utils/PRIVATE_tabbableUtils';\nimport { ValueUpdateDetail } from '../utils/UNSAFE_valueUpdateDetail';\nimport { isControlOrFunctionKey, KEYS } from '../utils/PRIVATE_keyboardUtils';\nimport { isSimpleClick } from './eventUtils';\n\ntype UseSelectCommonProps<K, D> = {\n  data?: DataState<K, D> | null;\n  inputRef: Ref<HTMLElement>;\n  isFocused?: boolean;\n  onFilter?: ({ searchText }: { searchText?: string }) => void;\n};\n\n/**\n * Hook that manages state and behavior for a Select* component.  This hook creates state\n * variables and event listeners, returning properties to apply to components internally\n * rendered by a Select* component, as well as state information.\n *\n * @param data Specifies data for the dropdown list.\n * @param inputRef Ref to the input element.\n * @param isFocused Specifies whether the component has focus.\n * @param onFilter Callback function to trigger loading data for the dropdown list,\n * which may or may not be filtered by user entered text.\n *\n * @returns Component state and event listeners.\n */\nexport function useSelectCommon<K, D>({\n  data,\n  inputRef,\n  isFocused,\n  onFilter\n}: UseSelectCommonProps<K, D>) {\n  const mainFieldRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isDropdownAbove, setDropdownAbove] = useState(false);\n  const [currentRow, setCurrentRow] = useState<{ rowKey?: K }>({\n    rowKey: undefined\n  });\n  const [isUserFiltering, setUserFiltering] = useState(false);\n  const [userInput, setUserInput] = useState<string>();\n  const [searchText, setSearchText] = useState<string>();\n\n  const [prevIsDropdownOpen, setPrevIsDropdownOpen] = useState(isDropdownOpen);\n  const [prevIsFocused, setPrevIsFocused] = useState(isFocused);\n  const [prevIsUserFiltering, setPrevIsUserFiltering] = useState(isUserFiltering);\n\n  const onMouseDown = useCallback(\n    (event: MouseEvent) => {\n      // const target = event.target as HTMLElement;\n      if (event.defaultPrevented || !isSimpleClick(event)) {\n        return;\n      }\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      }\n      // this is needed to focus the input when clicking on the inside label when there is no\n      // value;  otherwise the component looks focused but doesn't actually have physical focus\n      setTimeout(function () {\n        inputRef.current?.focus();\n      }, 0);\n    },\n    [inputRef, isDropdownOpen]\n  );\n\n  const handleDropdownArrowClick = useCallback(() => {\n    setDropdownOpen(!isDropdownOpen);\n\n    // focus the input so that if the user Tabs afterwards, it loses focus and the dropdown closes\n    inputRef.current?.focus();\n  }, [inputRef, isDropdownOpen]);\n\n  const handleDropdownAutoDismiss = useCallback(\n    (event?: Event) => {\n      if (isDropdownOpen) {\n        setDropdownOpen(false);\n\n        switch (event?.type) {\n          case 'keydown':\n            const keyboardEvent = event as KeyboardEvent;\n            switch (keyboardEvent.code) {\n              case KEYS.ESC:\n                // focus the input when the user cancels out of the dropdown\n                inputRef.current?.focus();\n                break;\n              default:\n                break;\n            }\n            break;\n          case 'mousedown':\n            // if focus is in the dropdown, focus the input before the dropdown is hidden so that\n            // focus will transfer correctly when the target is not focusable;\n            // otherwise the text cursor appears in the input again\n            if (dropdownRef.current?.contains(document.activeElement)) {\n              inputRef.current?.focus();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    [inputRef, isDropdownOpen]\n  );\n\n  const handleDropdownPosition = useCallback((data: PositionData) => {\n    setDropdownAbove(data.placement.startsWith('top'));\n  }, []);\n\n  const getDropdownTabbableElems = useCallback(() => {\n    return isDropdownOpen && dropdownRef.current\n      ? allTabbableElements(dropdownRef.current)\n      : undefined;\n  }, [isDropdownOpen]);\n\n  const handleUpDownArrowKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      } else {\n        // JET-64909 - focus / 'current' dropped when arrow keying during loading\n        // Transfer physical focus into the dropdown only if the data is present and the dropdown\n        // has rendered the data. Otherwise, keep the focus in the field.\n        if (data != null) {\n          const tabbableElems = getDropdownTabbableElems();\n          tabbableElems?.[0]?.focus();\n\n          // if there is no current item set, make the first item current\n          if (currentRow.rowKey === undefined) {\n            setCurrentRow({ rowKey: data.data[0]?.metadata?.key });\n          }\n        }\n      }\n\n      // prevent the page from scrolling\n      event.preventDefault();\n    },\n    [currentRow, data, getDropdownTabbableElems, isDropdownOpen]\n  );\n\n  const handleMainFieldKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      // const target = event.target as HTMLElement;\n      // ignore control key and function key\n      if (isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.PAGE_UP:\n        case KEYS.PAGE_DOWN:\n          // prevent the page from scrolling\n          event.preventDefault();\n\n          return;\n\n        case KEYS.UP:\n        case KEYS.DOWN:\n          // prevent the page from scrolling\n          event.preventDefault();\n          break;\n\n        case KEYS.ESC:\n          if (isDropdownOpen) {\n            setDropdownOpen(false);\n\n            event.preventDefault();\n\n            // JET-53183 - core pack compat: stop propagation of handled events\n            // we don't want a parent collection component to stop editing the row when we close\n            // the dropdown\n            event.stopPropagation();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [isDropdownOpen]\n  );\n\n  const handleMainFieldKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      // ignore control key and function key\n      if (isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.UP:\n        case KEYS.DOWN:\n          handleUpDownArrowKeys(event);\n          break;\n\n        default:\n          break;\n      }\n    },\n    [handleUpDownArrowKeys]\n  );\n\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      }\n      setUserFiltering(true);\n      setUserInput(detail.value);\n      const str = detail.value;\n      setSearchText(str);\n      onFilter?.({ searchText: str });\n    },\n    [isDropdownOpen, onFilter]\n  );\n\n  const onCurrentKeyChange = useCallback((detail: CurrentKeyDetail<K>) => {\n    setCurrentRow({ rowKey: detail.value });\n  }, []);\n\n  const stopFiltering = useCallback(() => {\n    setUserFiltering(false);\n    setUserInput('');\n    setSearchText('');\n  }, []);\n\n  // the user is not actively filtering if the dropdown is closed and the component doesn't\n  // have focus\n  if (\n    prevIsDropdownOpen !== isDropdownOpen ||\n    prevIsFocused !== isFocused ||\n    prevIsUserFiltering !== isUserFiltering\n  ) {\n    if (!isDropdownOpen && !isFocused && isUserFiltering) {\n      stopFiltering();\n    }\n  }\n\n  // need to call onFilter with undefined searchText when the dropdown opens and the\n  // user is NOT filtering\n  useEffect(() => {\n    if (isDropdownOpen && !isUserFiltering) {\n      onFilter?.({ searchText: undefined });\n    }\n  }, [isDropdownOpen, isUserFiltering, onFilter]);\n\n  // when the dropdown closes, reset the isDropdownAbove flag\n  if (prevIsDropdownOpen !== isDropdownOpen) {\n    if (!isDropdownOpen) {\n      setDropdownAbove(false);\n    }\n    setPrevIsDropdownOpen(isDropdownOpen);\n  }\n\n  if (prevIsFocused !== isFocused) {\n    setPrevIsFocused(isFocused);\n  }\n  if (prevIsUserFiltering !== isUserFiltering) {\n    setPrevIsUserFiltering(isUserFiltering);\n  }\n\n  return {\n    currentRow,\n    dropdownRef,\n    getDropdownTabbableElems,\n    handleDropdownArrowClick,\n    handleDropdownAutoDismiss,\n    handleDropdownPosition,\n    handleInput,\n    handleMainFieldKeyDown,\n    handleMainFieldKeyUp,\n    handleUpDownArrowKeys,\n    isDropdownAbove,\n    isDropdownOpen,\n    // the field should remain to look focused while the dropdown is open,\n    // in case physical focus is in the dropdown\n    isFocused: isFocused || isDropdownOpen,\n    isUserFiltering,\n    mainFieldRef,\n    onCurrentKeyChange,\n    onMouseDown,\n    searchText,\n    setCurrentRow,\n    setDropdownOpen,\n    setUserInput,\n    stopFiltering,\n    userInput\n  };\n}\n"],"names":["_jsxs","_jsx","DropdownArrowIcon"],"mappings":"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"}