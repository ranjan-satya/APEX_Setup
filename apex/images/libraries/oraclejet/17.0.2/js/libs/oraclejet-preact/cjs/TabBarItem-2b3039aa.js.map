{"version":3,"file":"TabBarItem-2b3039aa.js","sources":["../../src/UNSAFE_TabBarCommon/useTabBarItemTooltip.ts","../../src/UNSAFE_TabBarCommon/BaseTabBarItem.tsx","../../src/UNSAFE_TabBarCommon/TabBarItem.tsx"],"sourcesContent":["import { ComponentChild } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { useTooltipControlled } from '../hooks/UNSAFE_useTooltip';\n\ntype Props = {\n  label: string;\n  isDisabled: boolean;\n};\n\nexport const useTabBarItemTooltip = ({\n  label,\n  isDisabled\n}: Props): {\n  tooltipContent: ComponentChild;\n  tooltipEventHandlerProps: Record<string, any>;\n  onLogicalFocus: (elem: HTMLElement) => void;\n  onLogicalBlur: () => void;\n} => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const { tooltipProps, tooltipContent } = useTooltipControlled({\n    isOpen: isOpen,\n    isDisabled,\n    focusStrategy: 'logical',\n    text: label,\n    onToggle: ({ value }) => {\n      setOpen(value);\n    }\n  });\n  const { onLogicalFocus, onLogicalBlur, ...tooltipEventHandlerProps } = tooltipProps;\n\n  return { tooltipContent, tooltipEventHandlerProps, onLogicalFocus, onLogicalBlur };\n};\n","import { ComponentChildren, ComponentChild } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { Text } from '../UNSAFE_Text';\nimport { Flex } from '../UNSAFE_Flex';\nimport { useTabBarContext } from './useTabBarContext';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\nimport { flexitemInterpolations } from '../utils/UNSAFE_interpolations/flexitem';\nimport { dimensionInterpolations } from '../utils/UNSAFE_interpolations/dimensions';\nimport type { FlexitemProps } from '../utils/UNSAFE_interpolations/flexitem';\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport type { BoxAlignmentProps } from '../utils/UNSAFE_interpolations/boxalignment';\nimport { boxAlignmentInterpolations } from '../utils/UNSAFE_interpolations/boxalignment';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { TabBarItemVariantOptions } from './themes/TabBarItemStyles.css';\nimport { TabBarItemRedwoodTheme } from './themes/redwood/TabBarItemTheme';\nimport { Badge } from '../UNSAFE_Badge';\nimport { useConveyorBeltItem } from '../UNSAFE_ConveyorBelt/useConveyorBeltItem';\nimport { WarningS } from '../UNSAFE_RedwoodIcons/WarningS';\nimport { ErrorS } from '../UNSAFE_RedwoodIcons/ErrorS';\nimport { InformationS } from '../UNSAFE_RedwoodIcons/InformationS';\nimport { SuccessS } from '../UNSAFE_RedwoodIcons/SuccessS';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useTabBarItemTooltip } from './useTabBarItemTooltip';\nimport { tabBarItemVars } from './themes/TabBarItemContract.css';\ntype Severity = 'warning' | 'info' | 'none' | 'error' | 'confirmation';\n\ntype AriaProps = {\n  /**\n   * Accepts the tabpanel element's ID associated with the tab item\n   **/\n  'aria-controls'?: string;\n  /**\n   * Used by an item that renders an interactive popup\n   */\n  'aria-haspopup'?: boolean;\n};\n\nexport type BaseTabBarItemProps<K extends string | number> = {\n  /**\n   * Key of the TabBarItem\n   */\n  itemKey: K;\n  /**\n   * Label of the TabBarItem. For icon only display this label is the content\n   * for aria-label and tooltip text of the Tab.\n   */\n  label: string;\n  /**\n   * The icon before the label in non-stack case, icon above the label in\n   * stacked case or the stand alone icon when no label is specified.\n   */\n  icon?: ComponentChild;\n  /**\n   * The content to be rendered inside the Badge component.\n   */\n  badge?: string;\n  /**\n   * The content to be rendered inside the Text component as a metadata,\n   * that appears after the label in non stack case only.\n   */\n  metadata?: string;\n  /**\n   * The status icon to be rendered after the label in non stack case only.\n   */\n  severity?: Severity;\n  /**\n   * The content to be rendered for remove icon\n   */\n  removeIcon?: ComponentChildren;\n  /**\n   * The control for enabling and disabling focusRing\n   */\n  showFocusRingOverride?: boolean;\n  /**\n   * The control for enabling and disabling selection indicator\n   */\n  selectionOverride?: boolean;\n  /**\n   * The control for overriding display value.\n   */\n  displayOverride?: string;\n} & AriaProps;\n\nexport function BaseTabBarItem<K extends string | number>({\n  itemKey,\n  label,\n  icon,\n  badge,\n  metadata,\n  severity = 'none',\n  removeIcon,\n  showFocusRingOverride,\n  selectionOverride,\n  displayOverride,\n  'aria-controls': ariaControls,\n  'aria-haspopup': ariaHasPopup\n}: BaseTabBarItemProps<K>) {\n  const {\n    onSelect,\n    selection,\n    currentKey,\n    showFocusRing,\n    hideTooltip,\n    layout,\n    display,\n    size,\n    isEdgeBottom,\n    tabItemPrefix\n  } = useTabBarContext();\n\n  const isCurrent = currentKey === itemKey;\n\n  const { ref, ...conveyorBeltProps } = useConveyorBeltItem({ isCurrent });\n\n  //Selection\n  //Dependency on currentKey because upon removal selectionChange does not change hence no re render\n  //and it is still holding the deleted key as selection\n  const handlePress = useCallback(() => {\n    onSelect?.({ value: itemKey as K });\n  }, [itemKey, onSelect]);\n\n  const { pressProps } = usePress(handlePress);\n\n  const isSelected = selection === itemKey;\n\n  const isStacked = display === 'stacked' ? true : false;\n  const isIconOnly =\n    display === 'icons' || (displayOverride && displayOverride === 'icons') ? true : false;\n  const isTall = size === 'lg' ? true : false;\n  const labelRequirement = label && !(label === ' ' || label === undefined);\n  const severityRequirement = !(severity === 'none' || severity === undefined);\n\n  const IconComponent = (severityValue: Severity) => {\n    switch (severityValue) {\n      case 'error':\n        return <ErrorS color=\"danger\" />;\n      case 'warning':\n        return <WarningS color=\"warning\" />;\n      case 'info':\n        return <InformationS color=\"info\" />;\n      case 'confirmation':\n        return <SuccessS color=\"success\" />;\n      default:\n        return null;\n    }\n  };\n\n  const showTooltip = isIconOnly;\n  const { tooltipContent, tooltipEventHandlerProps, onLogicalFocus, onLogicalBlur } =\n    useTabBarItemTooltip({ label, isDisabled: !showTooltip });\n  if (showTooltip) {\n    if (isCurrent && showFocusRing && !hideTooltip) {\n      onLogicalFocus(ref.current as HTMLElement);\n    } else if (!isCurrent || (isCurrent && !showFocusRing) || hideTooltip) {\n      onLogicalBlur();\n    }\n  }\n\n  const { direction } = useUser();\n  const makeFocusRingVisible =\n    showFocusRingOverride !== undefined ? showFocusRingOverride : showFocusRing;\n  const makeSelectionVisible = selectionOverride !== undefined ? selectionOverride : isSelected;\n  const {\n    classes,\n    styles: {\n      tabBarItemIcon,\n      tabBarItemIconStacked,\n      tabBarItemMetadata,\n      tabBarItemStackedBadge,\n      tabBarItemStackedBadgeRtl,\n      tabBarItemRemoveIcon\n    }\n  } = useComponentTheme<TabBarItemVariantOptions>(TabBarItemRedwoodTheme, {\n    selection: makeSelectionVisible ? 'isSelected' : 'notSelected',\n    current: isCurrent ? 'isCurrent' : 'notCurrent',\n    focusRing: makeFocusRingVisible ? 'showFocusRing' : 'noFocusRing',\n    edgeBottom: isEdgeBottom ? 'isBottom' : 'notBottom'\n  });\n\n  const tabBarItem = classNames([classes]);\n  const tabBarItemIconClasses = classNames([\n    tabBarItemIcon,\n    (isStacked || isIconOnly || !labelRequirement) && tabBarItemIconStacked\n  ]);\n  const tabBarItemMetadataClasses = classNames([tabBarItemMetadata]);\n  const tabBarItemStackedBadgeClasses = classNames([\n    tabBarItemStackedBadge,\n    direction === 'rtl' && tabBarItemStackedBadgeRtl\n  ]);\n  const removeClass = classNames([tabBarItemRemoveIcon]);\n\n  const styleInterpolations = mergeInterpolations<\n    FlexitemProps & DimensionProps & BoxAlignmentProps\n  >([\n    ...Object.values(flexitemInterpolations),\n    ...Object.values(dimensionInterpolations),\n    ...Object.values(boxAlignmentInterpolations)\n  ]);\n\n  //This is for simple item where height and width need to be specified on the main div.\n  const tabDimensions = styleInterpolations({\n    flex: layout === 'stretch' ? '1 0 auto' : '0 0 auto',\n    minWidth: '10.5x',\n    height: isTall ? tabBarItemVars.lgHeight : tabBarItemVars.mdHeight,\n    //This is needed for gap between icon/ label and remove icon in labelIconRenderer\n    gap: '2x'\n  });\n\n  //This is for complex item, where only flex dimensions needs to be applied as height and width comes from child Flex component.\n  const flexDimensions = styleInterpolations({\n    flex: layout === 'stretch' ? '1 0 auto' : '0 0 auto'\n  });\n\n  const labelIconRenderer = () => {\n    return (\n      <div\n        data-oj-key={itemKey}\n        data-oj-removable={removeIcon ? 'true' : undefined}\n        id={tabItemPrefix + itemKey}\n        class={tabBarItem}\n        role=\"tab\"\n        aria-controls={ariaControls}\n        aria-selected={isSelected}\n        aria-haspopup={ariaHasPopup}\n        {...mergeProps(pressProps, tooltipEventHandlerProps, conveyorBeltProps)}\n        ref={ref}\n        style={tabDimensions}>\n        <Flex align=\"center\" justify=\"center\" flex=\"1 1 auto\" gap=\"2x\">\n          {!isIconOnly && !isStacked && icon && labelRequirement && (\n            <span class={tabBarItemIconClasses}>{icon}</span>\n          )}\n          {!isIconOnly && labelRequirement && (\n            <Text size=\"md\" weight=\"semiBold\">\n              {label}\n            </Text>\n          )}\n        </Flex>\n        {removeIcon && <span class={removeClass}>{removeIcon}</span>}\n      </div>\n    );\n  };\n\n  const complexItemRenderer = () => {\n    return (\n      <div\n        data-oj-key={itemKey}\n        data-oj-removable={removeIcon ? 'true' : undefined}\n        id={tabItemPrefix + itemKey}\n        class={tabBarItem}\n        role=\"tab\"\n        aria-controls={ariaControls}\n        aria-selected={isSelected}\n        aria-haspopup={ariaHasPopup}\n        {...mergeProps(pressProps, tooltipEventHandlerProps, conveyorBeltProps)}\n        ref={ref}\n        style={flexDimensions}>\n        <Flex flex=\"1 1 auto\">\n          <Flex\n            minWidth=\"10.5x\"\n            minHeight={isTall ? tabBarItemVars.lgHeight : '100%'}\n            height={\n              isStacked && labelRequirement ? tabBarItemVars.stackedHeight : tabBarItemVars.mdHeight\n            }\n            direction={isStacked && labelRequirement ? 'column' : 'row'}\n            gap=\"2x\"\n            align=\"center\"\n            justify=\"center\"\n            alignSelf=\"center\"\n            flex=\"1 1 auto\">\n            {(isStacked || isIconOnly || (!labelRequirement && icon)) && (\n              <div class={tabBarItemIconClasses}>\n                {icon}\n                <span class={tabBarItemStackedBadgeClasses}>\n                  {badge ? (\n                    <Badge size=\"xs\" variant=\"neutral\">\n                      {badge}\n                    </Badge>\n                  ) : null}\n                </span>\n              </div>\n            )}\n            {!isIconOnly && !isStacked && icon && labelRequirement && (\n              <span class={tabBarItemIconClasses}>{icon}</span>\n            )}\n            {!isIconOnly && labelRequirement && (\n              <Text size=\"md\" weight=\"semiBold\">\n                {label}\n              </Text>\n            )}\n            {!isStacked && !isIconOnly && badge && labelRequirement && (\n              <Badge size=\"md\" variant=\"neutralSubtle\">\n                {badge}\n              </Badge>\n            )}\n            {metadata && (\n              <span class={tabBarItemMetadataClasses}>\n                <Text>{'( ' + metadata + ' )'}</Text>\n              </span>\n            )}\n            {severityRequirement && (\n              <span class={tabBarItemIconClasses}>{IconComponent(severity)}</span>\n            )}\n          </Flex>\n          {removeIcon && <span class={removeClass}>{removeIcon}</span>}\n        </Flex>\n        {tooltipContent}\n      </div>\n    );\n  };\n\n  return badge || metadata || severity !== 'none' || isStacked || isIconOnly\n    ? complexItemRenderer()\n    : labelIconRenderer();\n}\n","import { BaseTabBarItem, BaseTabBarItemProps } from './BaseTabBarItem';\n\nexport type TabBarItemProps<K extends string | number> = Pick<\n  BaseTabBarItemProps<K>,\n  'itemKey' | 'label' | 'icon' | 'badge' | 'metadata' | 'severity' | 'aria-controls'\n>;\n/**\n * TabBarItem content can be created by using labels or icons or both.\n */\nexport function TabBarItem<K extends string | number>({\n  itemKey,\n  label,\n  icon,\n  badge,\n  metadata,\n  severity,\n  'aria-controls': ariaControls\n}: TabBarItemProps<K>) {\n  return (\n    <BaseTabBarItem\n      aria-controls={ariaControls}\n      itemKey={itemKey}\n      label={label}\n      icon={icon}\n      badge={badge}\n      metadata={metadata}\n      severity={severity}\n    />\n  );\n}\n"],"names":["useState","useTooltipControlled","useTabBarContext","useConveyorBeltItem","useCallback","usePress","_jsx","ErrorS","WarningS","InformationS","SuccessS","useUser","useComponentTheme","TabBarItemRedwoodTheme","classNames","mergeInterpolations","flexitemInterpolations","dimensionInterpolations","boxAlignmentInterpolations","tabBarItemVars","_jsxs","mergeProps","Flex","Text","Badge"],"mappings":"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"}