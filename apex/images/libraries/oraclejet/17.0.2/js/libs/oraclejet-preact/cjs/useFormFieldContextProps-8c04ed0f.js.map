{"version":3,"file":"useFormFieldContextProps-8c04ed0f.js","sources":["../../src/hooks/UNSAFE_useFormFieldContextProps/useFormFieldContextProps.ts"],"sourcesContent":["import { useMemo } from 'preact/hooks';\nimport { FormFieldContextProps } from '../UNSAFE_useFormFieldContext';\n\ntype UseTextFieldProps = {\n  hasValue?: boolean;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isInputFocused?: boolean;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n};\n\n/**\n * A custom hook to determine props to set FormFieldContext\n */\nexport function useFormFieldContextProps({\n  hasValue,\n  isDisabled,\n  isFocused,\n  isInputFocused,\n  isLoading,\n  isReadonly\n}: UseTextFieldProps) {\n  return useMemo<FormFieldContextProps>(() => {\n    return isReadonly\n      ? {\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading,\n          isReadonly: true\n        }\n      : isDisabled\n      ? {\n          hasValue,\n          isDisabled: true,\n          isLoading\n        }\n      : {\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading\n        };\n  }, [hasValue, isDisabled, isFocused, isInputFocused, isLoading, isReadonly]);\n}\n"],"names":["useMemo"],"mappings":";;;;;AAYA;;AAEG;AACa,SAAA,wBAAwB,CAAC,EACvC,QAAQ,EACR,UAAU,EACV,SAAS,EACT,cAAc,EACd,SAAS,EACT,UAAU,EACQ,EAAA;IAClB,OAAOA,aAAO,CAAwB,MAAK;AACzC,QAAA,OAAO,UAAU;AACf,cAAE;gBACE,QAAQ;gBACR,SAAS;gBACT,cAAc;gBACd,SAAS;AACT,gBAAA,UAAU,EAAE,IAAI;AACjB,aAAA;AACH,cAAE,UAAU;AACZ,kBAAE;oBACE,QAAQ;AACR,oBAAA,UAAU,EAAE,IAAI;oBAChB,SAAS;AACV,iBAAA;AACH,kBAAE;oBACE,QAAQ;oBACR,SAAS;oBACT,cAAc;oBACd,SAAS;iBACV,CAAC;AACR,KAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;AAC/E;;;;"}