{"version":3,"file":"useConveyorBeltItem-ce7d69d6.js","sources":["../../src/UNSAFE_ConveyorBelt/useConveyorBeltItem.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useEffect, useRef, useContext, useCallback } from 'preact/hooks';\nimport { ConveyorBeltContext } from './ConveyorBeltContext';\nimport { useId } from '../hooks/UNSAFE_useId';\n\ntype ConveyorBeltItemOptions = {\n  /**\n   * Specifies the current item which should be scrolled into view\n   */\n  isCurrent?: boolean;\n  /**\n   * Conevyor belt item reference, if not provided is created in the hook\n   */\n  itemRef?: RefObject<HTMLDivElement>;\n};\n\n/**\n * It is a convenience hook for interacting with ConveyorBeltContext.\n * Marks ConveyorBelt item and specifies current item to be scrolled into view.\n * The hook returns the necessary props: ref for ConveyorBelt child component\n * and 'data-oj-conveyorbelt-item' data attribute to mark conveyorbelt item.\n * If the item is set as current, then it is scrolled into the view.\n * If the hook detects ConveyorBeltContext then it should apply the methods of the ConveyorBeltContext.\n * @param options ConveyorBeltItemOptions: isCurrent boolean,\n * specifies whether the item is current and should be scrolled into the view and\n * itemRef Conevyor belt item reference which if not provided is created in the hook\n * @returns ref for ConveyorBelt child component\n * and 'data-oj-conveyorbelt-item' data attribute to mark conveyorbelt item.\n */\nexport function useConveyorBeltItem(options: ConveyorBeltItemOptions) {\n  const { isCurrent, itemRef } = options;\n  const context = useContext(ConveyorBeltContext);\n  const ref = useRef<HTMLDivElement>(null);\n  const id = useId();\n  const getResolvedRef = useCallback(() => {\n    return itemRef ?? ref;\n  }, [itemRef]);\n\n  useEffect(() => {\n    if (getResolvedRef().current && context && context.setCurrentItem) {\n      if (isCurrent) {\n        context.setCurrentItem(getResolvedRef().current!);\n      }\n    }\n  }, [context, isCurrent, getResolvedRef]);\n\n  const conveyorBeltItemProps = {\n    ref: ref,\n    ...(context && { 'data-oj-conveyorbelt-item': id })\n  };\n\n  return conveyorBeltItemProps;\n}\n"],"names":[],"mappings":";;;;;AAgBA;;;;;;;;;;;;AAYG;AACG,SAAU,mBAAmB,CAAC,OAAgC,EAAA;AAClE,IAAA,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AACvC,IAAA,MAAM,OAAO,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAChD,IAAA,MAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;AACzC,IAAA,MAAM,EAAE,GAAG,KAAK,EAAE,CAAC;AACnB,IAAA,MAAM,cAAc,GAAG,WAAW,CAAC,MAAK;QACtC,OAAO,OAAO,IAAI,GAAG,CAAC;AACxB,KAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,SAAS,CAAC,MAAK;QACb,IAAI,cAAc,EAAE,CAAC,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,cAAc,EAAE;YACjE,IAAI,SAAS,EAAE;gBACb,OAAO,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,OAAQ,CAAC,CAAC;aACnD;SACF;KACF,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;AAEzC,IAAA,MAAM,qBAAqB,GAAG;AAC5B,QAAA,GAAG,EAAE,GAAG;QACR,IAAI,OAAO,IAAI,EAAE,2BAA2B,EAAE,EAAE,EAAE,CAAC;KACpD,CAAC;AAEF,IAAA,OAAO,qBAAqB,CAAC;AAC/B;;;;"}