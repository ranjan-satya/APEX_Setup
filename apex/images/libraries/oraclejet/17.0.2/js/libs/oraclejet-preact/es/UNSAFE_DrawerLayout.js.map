{"version":3,"file":"UNSAFE_DrawerLayout.js","sources":["../../src/UNSAFE_DrawerLayout/DrawerLayout.tsx"],"sourcesContent":["import { JSX, ComponentChildren, RefObject } from 'preact';\nimport { useState, useRef, useEffect, useCallback } from 'preact/hooks';\nimport { normalizePosition } from '../utils/PRIVATE_floatingUtils';\nimport { Floating, ShiftOptions, RtlSide } from '../UNSAFE_Floating';\nimport { Layer } from '../UNSAFE_Layer';\nimport { getAutofocusFocusables, focusOn, focusWithin } from '../utils/PRIVATE_tabbableUtils';\nimport { getClientHints } from '#utils/PRIVATE_clientHints';\n\n// Hooks\nimport { useAnimation } from '../hooks/UNSAFE_useAnimation';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { useBreakpointValues } from '../hooks/UNSAFE_useBreakpointValues';\nimport { useResizeObserver } from '../hooks/UNSAFE_useResizeObserver';\n\n// Style imports\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { DrawerLayoutStyles } from './themes/DrawerLayoutStyles.css';\nimport { DrawerLayoutRedwoodTheme } from './themes/redwood/DrawerLayoutTheme';\n\n// Types\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Placement = 'start' | 'end' | 'bottom';\ntype Status = 'unmounted' | 'initial' | 'opening' | 'open' | 'closing';\n\ntype OnCloseDetail = {\n  placement: Placement;\n  reason: 'escapeKey';\n};\ntype OnTransitionEndDetail = {\n  placement: Placement;\n  value: boolean;\n};\ntype DisplayMode = 'overlay' | 'reflow';\ntype ResolvedDisplayMode = 'full-overlay' | 'overlay' | 'reflow';\ntype Visibility = 'hidden' | 'visible';\n\ntype Props = IntrinsicProps & {\n  /**\n   * The content node to be shown within the Start Drawer\n   */\n  startDrawer?: ComponentChildren;\n  /**\n   * The content node to be shown within the End Drawer\n   */\n  endDrawer?: ComponentChildren;\n  /**\n   * The content node to be shown within the Bottom Drawer\n   */\n  bottomDrawer?: ComponentChildren;\n  /**\n   * Specifies whether Start drawer is open.\n   */\n  isStartOpen?: boolean;\n  /**\n   * Specifies the display mode of the Start drawer.\n   *\n   * Supported values are:\n   * <p><code>overlay</code>, <code>reflow</code></p>\n   * Default is <code>undefined</code>.\n   */\n  startDisplay?: DisplayMode;\n  /**\n   * Specifies whether End drawer is open.\n   */\n  isEndOpen?: boolean;\n  /**\n   * Specifies the display mode of the End drawer.\n   *\n   * Supported values are:\n   * <p><code>overlay</code>, <code>reflow</code></p>\n   * Default is <code>undefined</code>.\n   */\n  endDisplay?: DisplayMode;\n  /**\n   * Specifies whether Bottom drawer is open.\n   */\n  isBottomOpen?: boolean;\n  /**\n   * Specifies the display mode of the Bottom drawer.\n   *\n   * Supported values are:\n   * <p><code>overlay</code>, <code>reflow</code></p>\n   * Default is <code>undefined</code>.\n   */\n  bottomDisplay?: DisplayMode;\n  /**\n   * Specifies callback triggered when a user tries to close a Drawer through UI interaction.\n   * The parent should listen to this event and close the Drawer. If the parent fails to remove\n   * the Popup, then no change will be done in the UI by the component.\n   *\n   * Supported detail values are:\n   * <p><code>placement: start | end | bottom</code></p>\n   * <p><code>reason: escapeKey</code></p>\n   */\n  onClose?: (detail: OnCloseDetail) => void;\n  /**\n   * Specifies callback triggered after the animation ends.\n   *\n   * Supported detail values are:\n   * <p><code>placement: start | end | bottom</code></p>\n   * <p><code>value: boolean</code></p>\n   */\n  onTransitionEnd?: (detail: OnTransitionEndDetail) => void;\n} & TestIdProps;\n\n/**\n * A drawer layout adds expandable side contents (drawers) alongside some primary content.\n *\n * These drawers automatically swap 'reflow' and 'overlay' display mode based on width of the page and can be placed at the 'start', 'end' or 'bottom' edge.\n */\nexport const DrawerLayout = ({\n  children,\n  startDrawer,\n  endDrawer,\n  bottomDrawer,\n  isStartOpen = false,\n  isEndOpen = false,\n  isBottomOpen = false,\n  startDisplay,\n  endDisplay,\n  bottomDisplay,\n  onClose,\n  onTransitionEnd,\n  testId // ...props\n}: Props) => {\n  // Constants\n  const zeroPx = '0px';\n  const duration = 250;\n  const verticalBreakpoint = 600;\n  const stringStart = 'start';\n  const stringEnd = 'end';\n  const stringBottom = 'bottom';\n  const stringInitial = 'initial';\n  const stringOpening = 'opening';\n  const stringOpen = 'open';\n  const stringClosing = 'closing';\n  const stringUnmounted = 'unmounted';\n  const stringFullOverlay = 'full-overlay';\n  const stringOverlay = 'overlay';\n  const stringReflow = 'reflow';\n  const stringHidden = 'hidden';\n  const stringVisible = 'visible';\n\n  // Initialize states\n  const [startDrawerStatus, setStartDrawerStatus] = useState<Status>(\n    isStartOpen ? stringInitial : stringUnmounted\n  );\n  const [endDrawerStatus, setEndDrawerStatus] = useState<Status>(\n    isEndOpen ? stringInitial : stringUnmounted\n  );\n  const [bottomDrawerStatus, setBottomDrawerStatus] = useState<Status>(\n    isBottomOpen ? stringInitial : stringUnmounted\n  );\n  const [startVisibility, setStartVisibility] = useState<Visibility>(stringHidden);\n  const [endVisibility, setEndVisibility] = useState<Visibility>(stringHidden);\n  const [bottomVisibility, setBottomVisibility] = useState<Visibility>(stringHidden);\n\n  const [startOffset, setStartOffset] = useState<number>();\n  const [endOffset, setEndOffset] = useState<number>();\n  const [bottomOffset, setBottomOffset] = useState<number>();\n\n  // Breakpoints:\n  // sm: 0-600px (full-overlay)\n  // md: 600-1024px (overlay)\n  // lg: >1024px (reflow)\n  const displayMode: ResolvedDisplayMode = useBreakpointValues({\n    sm: stringFullOverlay,\n    md: stringOverlay,\n    lg: stringReflow\n  });\n  const [viewportDisplayModeHorizontal, setViewportDisplayModeHorizontal] =\n    useState<ResolvedDisplayMode>(displayMode);\n  const [viewportDisplayModeVertical, setViewportDisplayModeVertical] =\n    useState<ResolvedDisplayMode>(displayMode);\n  useEffect(() => {\n    // Size breakpoint crossed\n    setViewportDisplayModeHorizontal(displayMode);\n  }, [displayMode]);\n\n  // Refs\n  const rootRef = useRef<HTMLDivElement>(null);\n  const centerRef = useRef<HTMLDivElement>(null);\n  const startDrawerRef = useRef<HTMLDivElement>(null);\n  const endDrawerRef = useRef<HTMLDivElement>(null);\n  const bottomDrawerRef = useRef<HTMLDivElement>(null);\n\n  const getElementHeight = (element: HTMLDivElement): number => {\n    return element ? Math.round(element.offsetHeight) : 0;\n  };\n\n  const getElementHeightPx = useCallback((element: HTMLDivElement) => {\n    return `${getElementHeight(element)}px`;\n  }, []);\n\n  const getElementWidth = useCallback((element: HTMLDivElement): number => {\n    return element ? Math.round(element.getBoundingClientRect().width) : 0;\n  }, []);\n\n  const getElementWidthPx = useCallback(\n    (element: HTMLDivElement): string => {\n      return `${getElementWidth(element)}px`;\n    },\n    [getElementWidth]\n  );\n\n  // Normalizing position\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n\n  const getNormalizedPlacement = useCallback(\n    (placement: Placement): RtlSide => {\n      return normalizePosition(placement, direction);\n    },\n    [direction]\n  );\n\n  const getTranslateX = (placement: Placement, ref: any): string => {\n    return `${getNormalizedPlacement(placement) === 'right' ? '' : '-'}${getElementWidthPx(\n      ref.current as HTMLDivElement\n    )}`;\n  };\n\n  const getTranslateY = (ref: any): string => {\n    return getElementHeightPx(ref.current as HTMLDivElement);\n  };\n\n  const isSidePlacement = (placement: Placement): boolean => {\n    return [stringStart, stringEnd].indexOf(placement) > -1;\n  };\n\n  const isBottomPlacement = (placement: Placement): boolean => {\n    return placement === stringBottom;\n  };\n\n  const isAnimationPending = (status: Status): boolean => {\n    return [stringOpening, stringClosing].indexOf(status) > -1;\n  };\n\n  const isDrawerAnimationPending = (placement: Placement): boolean => {\n    switch (placement) {\n      case stringStart:\n        return isAnimationPending(startDrawerStatus);\n      case stringEnd:\n        return isAnimationPending(endDrawerStatus);\n      case stringBottom:\n        return isAnimationPending(bottomDrawerStatus);\n    }\n  };\n\n  const isDrawerOpen = (placement: Placement): boolean => {\n    switch (placement) {\n      case stringStart:\n        return isStartOpen;\n      case stringEnd:\n        return isEndOpen;\n      case stringBottom:\n        return isBottomOpen;\n    }\n  };\n\n  const getDrawerVisibility = (placement: Placement): Visibility => {\n    switch (placement) {\n      case stringStart:\n        return startVisibility;\n      case stringEnd:\n        return endVisibility;\n      case stringBottom:\n        return bottomVisibility;\n    }\n  };\n\n  const setDrawerVisibility = (placement: Placement, visibility: Visibility): void => {\n    switch (placement) {\n      case stringStart:\n        return setStartVisibility(visibility);\n      case stringEnd:\n        return setEndVisibility(visibility);\n      case stringBottom:\n        return setBottomVisibility(visibility);\n    }\n  };\n\n  const getDrawerRef = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startDrawerRef;\n      case stringEnd:\n        return endDrawerRef;\n      case stringBottom:\n        return bottomDrawerRef;\n    }\n  };\n\n  const getDrawerEl = (placement: Placement) => {\n    return getDrawerRef(placement).current;\n  };\n\n  const getAnimatedNodeRef = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startAnimatedNodeRef;\n      case stringEnd:\n        return endAnimatedNodeRef;\n      case stringBottom:\n        return bottomAnimatedNodeRef;\n    }\n  };\n\n  const getDrawerStatus = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startDrawerStatus;\n      case stringEnd:\n        return endDrawerStatus;\n      case stringBottom:\n        return bottomDrawerStatus;\n    }\n  };\n\n  const setDrawerStatus = (placement: Placement, status: Status): void => {\n    switch (placement) {\n      case stringStart:\n        setStartDrawerStatus(status);\n        break;\n      case stringEnd:\n        setEndDrawerStatus(status);\n        break;\n      case stringBottom:\n        setBottomDrawerStatus(status);\n        break;\n    }\n  };\n\n  const resetAnimatedNodeRef = (placement: Placement): void => {\n    switch (placement) {\n      case stringStart:\n        startAnimatedNodeRef(null);\n        break;\n      case stringEnd:\n        endAnimatedNodeRef(null);\n        break;\n      case stringBottom:\n        bottomAnimatedNodeRef(null);\n        break;\n    }\n  };\n\n  const getDrawerDisplayProp = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startDisplay;\n      case stringEnd:\n        return endDisplay;\n      case stringBottom:\n        return bottomDisplay;\n    }\n  };\n\n  const getDrawerDisplayMode = (placement: Placement): ResolvedDisplayMode => {\n    const displayProp = getDrawerDisplayProp(placement);\n    if (displayProp) {\n      return displayProp;\n    } else {\n      if (isSidePlacement(placement)) {\n        return viewportDisplayModeHorizontal;\n      }\n      return viewportDisplayModeVertical;\n    }\n  };\n\n  // Animation config\n  const getAnimationStates = (placement: Placement, ref: RefObject<HTMLElement>): any => {\n    const bottomPlacement: boolean = isBottomPlacement(placement);\n    if (getDrawerDisplayMode(placement) === stringReflow) {\n      // Reflow display mode\n      // Effect: Expand/Collapse\n      if (bottomPlacement) {\n        return {\n          opening: () => {\n            return {\n              from: {\n                maxHeight: zeroPx,\n                overflowX: 'hidden'\n              },\n              to: {\n                maxHeight: getElementHeightPx(ref.current as HTMLDivElement),\n                overflowX: 'hidden'\n              },\n              options: {\n                duration: duration\n              }\n            };\n          },\n          closing: () => {\n            return {\n              from: {\n                maxHeight: getElementHeightPx(ref.current as HTMLDivElement)\n              },\n              to: {\n                maxHeight: zeroPx,\n                overflowX: 'hidden'\n              },\n              options: {\n                duration: duration\n              }\n            };\n          }\n        };\n      } else {\n        return {\n          opening: () => {\n            return {\n              from: {\n                maxWidth: zeroPx,\n                overflowY: 'hidden'\n              },\n              to: {\n                maxWidth: getElementWidthPx(ref.current as HTMLDivElement),\n                overflowY: 'hidden'\n              },\n              options: {\n                duration: duration\n              }\n            };\n          },\n          closing: () => {\n            return {\n              from: {\n                maxWidth: getElementWidthPx(ref.current as HTMLDivElement)\n              },\n              to: {\n                maxWidth: zeroPx,\n                overflowY: 'hidden'\n              },\n              options: {\n                duration: duration\n              }\n            };\n          }\n        };\n      }\n    } else {\n      // FullOverlay or Overlay display mode\n      // Effect: Slidein/Slideout\n      if (bottomPlacement) {\n        return {\n          opening: () => {\n            return {\n              from: {\n                translateY: getTranslateY(ref)\n              },\n              to: {\n                translateY: zeroPx\n              },\n              options: {\n                duration: duration\n              }\n            };\n          },\n          closing: () => {\n            return {\n              from: {\n                translateY: zeroPx\n              },\n              to: {\n                translateY: getTranslateY(ref)\n              },\n              options: {\n                duration: duration\n              }\n            };\n          }\n        };\n      } else {\n        return {\n          opening: () => {\n            return {\n              from: {\n                translateX: getTranslateX(placement, ref)\n              },\n              to: {\n                translateX: zeroPx\n              },\n              options: {\n                duration: duration\n              }\n            };\n          },\n          closing: () => {\n            return {\n              from: {\n                translateX: zeroPx\n              },\n              to: {\n                translateX: getTranslateX(placement, ref)\n              },\n              options: {\n                duration: duration\n              }\n            };\n          }\n        };\n      }\n    }\n  };\n\n  const handleFocus = (placement: Placement) => {\n    // Set focus to the first match:\n    const drawerRef: RefObject<any> = getDrawerRef(placement);\n\n    // 1. First element inside the drawer matching [autofocus]\n    const autofocusItems: HTMLElement[] = getAutofocusFocusables(drawerRef.current);\n    if (autofocusItems.length > 0) {\n      focusOn(autofocusItems[0]);\n      return;\n    }\n    // 2. Tabbable element inside the content element\n    // 3. The drawer itself\n    focusWithin(drawerRef.current);\n  };\n\n  // Custom hook to be shared for each side\n  // It can't be a function as a hook can only be called within a custom hook\n  function useNodeRef(placement: Placement, ref: RefObject<HTMLElement>) {\n    const isOpen: boolean = isDrawerOpen(placement);\n    const status = getDrawerStatus(placement);\n    return useAnimation<Status, HTMLDivElement>(status, {\n      animationStates: getAnimationStates(placement, ref),\n      isAnimatedOnMount: true,\n      onAnimationEnd: () => {\n        if (status === stringOpening) {\n          setDrawerStatus(placement, stringOpen);\n          handleFocus(placement);\n          onTransitionEnd?.({\n            placement: placement,\n            value: true\n          });\n        } else if (!isOpen) {\n          resetAnimatedNodeRef(placement);\n          setDrawerVisibility(placement, stringHidden);\n          setDrawerStatus(placement, stringUnmounted);\n          onTransitionEnd?.({\n            placement: placement,\n            value: false\n          });\n        }\n      }\n    }).nodeRef;\n  }\n\n  // Drawer refs\n  const startAnimatedNodeRef = useNodeRef(stringStart, startDrawerRef);\n  const endAnimatedNodeRef = useNodeRef(stringEnd, endDrawerRef);\n  const bottomAnimatedNodeRef = useNodeRef(stringBottom, bottomDrawerRef);\n\n  //testId support\n  const testIdProps = useTestId(testId);\n\n  // Custom hook to be shared for each side\n  // It can't be a function as a hook can only be called within a custom hook\n  function useDrawerStatus(placement: Placement): void {\n    const isOpen = isDrawerOpen(placement);\n    const drawerStatus = getDrawerStatus(placement);\n    useEffect(() => {\n      // Ignore initial render\n      // 1. Ignore status update on initial render\n      if (drawerStatus === stringUnmounted && !isOpen) {\n        return;\n      }\n\n      // 2. Unmounted\n      // Mount visually hidden component.\n      // Component gets mounted, but will be visually hidden to avoid flickering.\n      // Flickering happens because it gets rendered before animation hook repositions\n      // it in next render cycle\n      if (drawerStatus === stringUnmounted && isOpen) {\n        setDrawerStatus(placement, stringInitial);\n        return;\n      }\n\n      // 3. Initial\n      // Setup animation\n      // Component has been mounted.\n      // We will kick out animation as node is already present in DOM.\n      // To avoid flickering, we still keep it visually hidden until the next render cycle.\n      if (drawerStatus === stringInitial && isOpen) {\n        const drawerRef = getDrawerRef(placement);\n        const animatedNodeRef = getAnimatedNodeRef(placement);\n        animatedNodeRef(drawerRef.current);\n        setDrawerStatus(placement, stringOpening);\n        return;\n      }\n\n      // 4. Opening\n      // Unhide component. It becomes visible.\n      if (drawerStatus === stringOpening && isOpen) {\n        setDrawerVisibility(placement, stringVisible);\n        return;\n      }\n\n      // 5. Open\n      // Status 'open' is set in 'onAnimationEnd' handler\n\n      // 6. Closing\n      if (!isOpen) {\n        setDrawerStatus(placement, stringClosing);\n      }\n    }, [isOpen, drawerStatus, placement]);\n  }\n\n  // Drawers' status handler±\n  useDrawerStatus(stringStart);\n  useDrawerStatus(stringEnd);\n  useDrawerStatus(stringBottom);\n\n  // Keydown handlers\n  const handleKeyDownStart = (event: Event): void => {\n    handleKeyDown(stringStart, event);\n  };\n  const handleKeyDownEnd = (event: Event): void => {\n    handleKeyDown(stringEnd, event);\n  };\n  const handleKeyDownBottom = (event: Event): void => {\n    handleKeyDown(stringBottom, event);\n  };\n\n  const handleKeyDown = (placement: Placement, event: any): void => {\n    if (event.code === 'Escape') {\n      // Handle only in overlay mode\n      if (isOverlay(placement)) {\n        onClose?.({\n          placement,\n          reason: 'escapeKey'\n        });\n      }\n    }\n  };\n\n  // Styles\n  const { classes, styles } = useComponentTheme<never, DrawerLayoutStyles>(\n    DrawerLayoutRedwoodTheme\n  );\n\n  const getVisibilityClass = (visibility: Visibility) => {\n    return visibility === stringHidden ? styles.visibilityHidden : styles.visibilityVisible;\n  };\n\n  const isOverlay = (placement: Placement) => {\n    return [stringFullOverlay, stringOverlay].indexOf(getDrawerDisplayMode(placement)) > -1;\n  };\n\n  const isFullOverlay = (placement: Placement): boolean => {\n    return getDrawerDisplayMode(placement) === stringFullOverlay;\n  };\n\n  const getDrawerClassNames = (placement: Placement): string => {\n    // Visibility style is always added\n    const visibility: Visibility = getDrawerVisibility(placement);\n    const classNamesArr: string[] = [getVisibilityClass(visibility)];\n\n    // Styles for overlay vs. full-overlay vs. reflow\n    if (isOverlay(placement)) {\n      classNamesArr.push(styles.overlayDrawer);\n      if (isSidePlacement(placement) && !isFullOverlay(placement)) {\n        classNamesArr.push(styles.overlaySideDrawerNonFullWidth);\n      }\n    } else {\n      classNamesArr.push(styles.reflowDrawer);\n    }\n\n    // Styles for animation\n    if (isDrawerAnimationPending(placement)) {\n      classNamesArr.push(styles.animatedDrawer);\n    }\n\n    const getPlacementSpecificStyles = (placement: Placement): string => {\n      switch (placement) {\n        case stringStart:\n          if (isOverlay(stringStart)) {\n            return isLtr ? styles.overlayDrawerLeft : styles.overlayDrawerRight;\n          } else {\n            return isLtr ? styles.reflowDrawerLeft : styles.reflowDrawerRight;\n          }\n        case stringEnd:\n          if (isOverlay(stringEnd)) {\n            return isLtr ? styles.overlayDrawerRight : styles.overlayDrawerLeft;\n          } else {\n            return isLtr ? styles.reflowDrawerRight : styles.reflowDrawerLeft;\n          }\n        case stringBottom:\n          return isOverlay(stringBottom) ? styles.overlayDrawerBottom : styles.reflowDrawerBottom;\n      }\n    };\n    // Placement specific styles\n    classNamesArr.push(getPlacementSpecificStyles(placement));\n\n    return classNames(classNamesArr);\n  };\n\n  const getDrawerProp = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startDrawer;\n      case stringEnd:\n        return endDrawer;\n      case stringBottom:\n        return bottomDrawer;\n    }\n  };\n\n  const getKeyDownHandler = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return handleKeyDownStart;\n      case stringEnd:\n        return handleKeyDownEnd;\n      case stringBottom:\n        return handleKeyDownBottom;\n    }\n  };\n\n  // Single drawer template\n  const renderDrawer = (placement: Placement) => {\n    return (\n      <div\n        ref={getDrawerRef(placement)}\n        className={getDrawerClassNames(placement)}\n        tabIndex={isOverlay(placement) ? -1 : undefined}\n        onKeyDown={getKeyDownHandler(placement)}>\n        {getDrawerProp(placement)}\n      </div>\n    );\n  };\n\n  const clientHints = getClientHints();\n\n  const getViewportHeight = useCallback((): number => {\n    if (clientHints.platform === 'ios') {\n      // On ios window.innerHeight is not recommended way of measuring the viewport\n      return document.documentElement.clientHeight;\n    }\n    return window.innerHeight;\n  }, [clientHints.platform]);\n\n  const handleVerticalResize = useCallback(() => {\n    const viewportHeight = getViewportHeight();\n    if (viewportHeight >= verticalBreakpoint) {\n      if (viewportDisplayModeVertical != stringReflow) {\n        setViewportDisplayModeVertical(stringReflow);\n      }\n    } else {\n      if (viewportDisplayModeVertical != stringOverlay) {\n        setViewportDisplayModeVertical(stringOverlay);\n      }\n    }\n  }, [viewportDisplayModeVertical, getViewportHeight]);\n\n  // Window resize listener\n  // useBreakpoint hook is designed for horizontal breakpoints only\n  // This listener is used for 600px (overlay vs. reflow) breakpoint\n  // used for bottom drawer\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      handleVerticalResize();\n    });\n    resizeObserver.observe(document.body);\n    // Deregister resize observer when Drawer layout unmounts\n    return () => {\n      resizeObserver.unobserve(document.body);\n    };\n  }, [handleVerticalResize]);\n\n  const getOffset = (placement: Placement): number => {\n    const drawerEl = getDrawerEl(placement);\n    if (drawerEl) {\n      return isSidePlacement(placement) ? -getElementWidth(drawerEl) : -getElementHeight(drawerEl);\n    }\n    return 0;\n  };\n\n  const getOffsetState = (placement: Placement) => {\n    switch (placement) {\n      case stringStart:\n        return startOffset;\n      case stringEnd:\n        return endOffset;\n      case stringBottom:\n        return bottomOffset;\n    }\n  };\n\n  const setSideOverlayDrawerFullHeight = useCallback(\n    (placement: Placement) => {\n      // By default PopupElements have no predefined height.\n      // In 'overlay' mode drawers should be\n      // of the same height as their parent <oj-drawer-layout>\n      const centerSectionHeight = getElementHeightPx(centerRef.current as HTMLDivElement);\n\n      const drawerEl = getDrawerRef(placement).current;\n      if (drawerEl && isDrawerOpen(placement) && isOverlay(placement)) {\n        drawerEl.style.height = centerSectionHeight;\n      }\n    },\n    [getElementHeightPx, isDrawerOpen, isOverlay]\n  );\n\n  const handleSideDrawerFullWidth = (placement: Placement) => {\n    const drawerEl = getDrawerRef(placement).current;\n    if (drawerEl) {\n      if (isDrawerOpen(placement)) {\n        const drawerInlineStyle = drawerEl.style;\n        if (isFullOverlay(placement)) {\n          drawerInlineStyle.width = getElementWidthPx(rootRef.current as HTMLDivElement);\n        } else {\n          drawerInlineStyle.removeProperty('width');\n        }\n      }\n    }\n  };\n\n  const setBottomOverlayDrawerWidth = useCallback(() => {\n    const bottomDrawerElement = bottomDrawerRef.current;\n    if (bottomDrawerElement && isDrawerOpen(stringBottom) && isOverlay(stringBottom)) {\n      const centerSectionWidth = getElementWidthPx(centerRef.current as HTMLDivElement);\n      bottomDrawerElement.style.width = centerSectionWidth;\n    }\n  }, [getElementWidthPx, isDrawerOpen, isOverlay]);\n\n  const setDrawerSize = (placement: Placement) => {\n    if (isSidePlacement(placement)) {\n      setSideOverlayDrawerFullHeight(placement);\n      handleSideDrawerFullWidth(placement);\n    }\n    if (isBottomPlacement(placement)) {\n      setBottomOverlayDrawerWidth();\n    }\n  };\n\n  const handleDrawerLayoutResize = useCallback(() => {\n    // If the DrawerLayout (page content) changes size,\n    // adjust OVERLAY side drawers (start/end) height to fit the drawer\n    // Note that these two functions checks that 'overlay' condition is fulfilled\n    setSideOverlayDrawerFullHeight(stringStart);\n    setSideOverlayDrawerFullHeight(stringEnd);\n    setBottomOverlayDrawerWidth();\n  }, [setSideOverlayDrawerFullHeight, setBottomOverlayDrawerWidth]);\n  // DrawerLayout resize observer\n  useResizeObserver(rootRef, handleDrawerLayoutResize);\n\n  const setOffsetState = (placement: Placement) => {\n    const offset = getOffset(placement);\n    switch (placement) {\n      case stringStart:\n        setStartOffset(offset);\n        break;\n      case stringEnd:\n        setEndOffset(offset);\n        break;\n      case stringBottom:\n        setBottomOffset(offset);\n        break;\n    }\n  };\n\n  // Start drawer resize observer\n  const handleStartDrawerResize = () => {\n    setOffsetState(stringStart);\n  };\n  useResizeObserver(startDrawerRef, handleStartDrawerResize);\n\n  // End drawer resize observer\n  const handleEndDrawerResize = () => {\n    setOffsetState(stringEnd);\n  };\n  useResizeObserver(endDrawerRef, handleEndDrawerResize);\n\n  // Bottom drawer resize observer\n  const handleBottomDrawerResize = () => {\n    setOffsetState(stringBottom);\n  };\n  useResizeObserver(bottomDrawerRef, handleBottomDrawerResize);\n\n  const getReflowOrOverlayDrawer = (placement: Placement) => {\n    const shiftOptions: ShiftOptions = {\n      mainAxis: false,\n      crossAxis: false\n    };\n\n    const flipOptions = {\n      mainAxis: false,\n      crossAxis: false\n    };\n\n    // Reflow vs. overlay drawer\n    if (isOverlay(placement)) {\n      setDrawerSize(placement);\n\n      // Initial offset\n      if (!getOffsetState(placement)) {\n        setOffsetState(placement);\n      }\n\n      return (\n        // Reconciliation issue. Reparented node must\n        // be a single child of a <div>\n        <div>\n          <Layer>\n            <Floating\n              anchorRef={placement === stringBottom ? centerRef : rootRef}\n              placement={placement}\n              class={isDrawerAnimationPending(placement) ? styles.floating : ''}\n              offsetValue={getOffsetState(placement)}\n              flipOptions={flipOptions}\n              shiftOptions={shiftOptions}>\n              {renderDrawer(placement)}\n            </Floating>\n          </Layer>\n        </div>\n      );\n    } else {\n      return renderDrawer(placement);\n    }\n  };\n\n  // Render drawer conditionally\n  const getDrawer = (placement: Placement): any => {\n    const isMounted = getDrawerStatus(placement) !== stringUnmounted;\n    return isMounted ? getReflowOrOverlayDrawer(placement) : null;\n  };\n\n  return (\n    <div ref={rootRef} className={classes} {...testIdProps}>\n      {/*Start drawer*/}\n      {getDrawer(stringStart)}\n      {/*Center section*/}\n      <div ref={centerRef} className={styles.centerSection}>\n        <div className={styles.mainContent}>\n          {/*<main content*/}\n          {children}\n        </div>\n        {/*Bottom drawer*/}\n        {getDrawer(stringBottom)}\n      </div>\n      {/*End drawer*/}\n      {getDrawer(stringEnd)}\n    </div>\n  );\n};\n"],"names":["_jsx","_jsxs"],"mappings":"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"}