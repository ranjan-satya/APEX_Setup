define(['exports', 'preact/jsx-runtime', 'preact', 'preact/compat', 'preact/hooks', './BaseButton-83ce1d00', './useTooltip-d28e9b0f', './useTooltipControlled-abf886f2', './mergeProps-bcfa6a92', './useButtonSetContext-dffdaea3', './ToggleButtonLabel-cb67a3ce', './toggleButtonUtils-e01582ef', './buttonUtils-20d1b249'], (function(t,e,o,s,n,i,l,a,r,u,c,d,p){"use strict";const b=s.forwardRef((({children:t,tooltip:s,value:a,accessibleLabel:b,isSelected:g=!1,onToggle:B,position:f,testId:S,width:h,"aria-describedby":m,...x},y)=>{const v=u.useButtonSetContext(),{inputProps:I,buttonSetButtonProps:P,isDisabled:T}=p.processSetButtonProps(x,v),j=n.useRef(null);n.useImperativeHandle(y,(()=>j.current),[j]);const{tooltipContent:w,tooltipProps:C}=l.useTooltip({text:s??b,isDisabled:T}),L=d.toggleStyling(P.layoutWidth,g,!1,!0,"outlined"===P.variant,f,void 0,!0),D={"aria-describedby":m};return e.jsxs(o.Fragment,{children:[e.jsx(i.BaseButton,{...r.mergeProps(P,D),elementDetails:{type:"span",isFocusable:!1,isLabel:!0},styling:L,width:v.width?"100%":h,ref:j,testId:S,children:e.jsx(c.ToggleButtonLabel,{...C,label:b??s,onAction:()=>B?.({value:g}),display:"icons",isSelected:g,...I,value:a,startIcon:t})}),w]})}));b.displayName="ButtonSetIconButton",t.ButtonSetIconButton=b}));
//# sourceMappingURL=ButtonSetIconButton-08612ca6.js.map
