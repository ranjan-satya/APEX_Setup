{"version":3,"file":"UNSAFE_CheckboxItem.js","sources":["../../src/UNSAFE_CheckboxItem/CheckboxItem.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useCheckboxSetContext } from '../UNSAFE_CheckboxSet';\n\nimport { CheckboxControl } from '../PRIVATE_CheckboxControl/CheckboxControl';\nimport { InlineUserAssistance } from '#UNSAFE_UserAssistance';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype Props = {\n  /**\n   * Text that describes the checkbox item value.\n   */\n  children: string;\n  /**\n   * Text to provide guidance to help the user understand what data to enter.\n   */\n  assistiveText?: InlineUserAssistanceProps['assistiveText'];\n  /**\n   * Help source URL associated with the component.\n   */\n  helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n  /**\n   * Custom text to be rendered for the `helpSourceLink`.\n   */\n  helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n  /**\n   * Value of the checkbox item.\n   */\n  value: string | number;\n};\n\n/**\n * CheckboxItem is a child component of CheckboxSet. It contains the checkbox, label, and assistive text.\n */\nconst CheckboxItem = ({\n  children,\n  value,\n  assistiveText,\n  helpSourceLink,\n  helpSourceText\n}: Props) => {\n  const { isReadonly: isFormReadonly, isDisabled: isFormDisabled } = useFormContext();\n  const { isDisabled: isFieldDisabled, isReadonly: isFieldReadonly } = useFormFieldContext();\n  const { name, onCommit, value: groupValue } = useCheckboxSetContext();\n\n  const isChecked = groupValue?.has(value);\n  const isDisabled = isFieldDisabled ?? isFormDisabled;\n  const isReadonly = isFieldReadonly ?? isFormReadonly;\n\n  const onChangeHandler = useCallback(\n    (e: Event) => {\n      // return early on keyup if key isn't spacebar\n      const { key } = e as KeyboardEvent;\n      if (key !== undefined && key !== ' ') {\n        return;\n      }\n\n      // create a new set from the previous and add or remove the changed value\n      const newGroupValue = new Set(groupValue);\n      newGroupValue.has(value) ? newGroupValue.delete(value) : newGroupValue.add(value);\n\n      onCommit?.({\n        previousValue: groupValue,\n        value: newGroupValue.size > 0 ? newGroupValue : undefined\n      });\n    },\n    [groupValue, onCommit, value]\n  );\n\n  return (\n    <CheckboxControl\n      name={name}\n      value={value}\n      {...(!isReadonly && !isDisabled\n        ? { onChange: onChangeHandler, onKeyUp: onChangeHandler }\n        : {})}\n      assistiveText={assistiveText}\n      helpSourceLink={helpSourceLink}\n      helpSourceText={helpSourceText}\n      isChecked={isChecked}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}>\n      {children}\n    </CheckboxControl>\n  );\n};\n\nexport { CheckboxItem };\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;AAEG;AACH,MAAM,YAAY,GAAG,CAAC,EACpB,QAAQ,EACR,KAAK,EACL,aAAa,EACb,cAAc,EACd,cAAc,EACR,KAAI;AACV,IAAA,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,cAAc,EAAE,CAAC;AACpF,IAAA,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,mBAAmB,EAAE,CAAC;AAC3F,IAAA,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,qBAAqB,EAAE,CAAC;IAEtE,MAAM,SAAS,GAAG,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AACzC,IAAA,MAAM,UAAU,GAAG,eAAe,IAAI,cAAc,CAAC;AACrD,IAAA,MAAM,UAAU,GAAG,eAAe,IAAI,cAAc,CAAC;AAErD,IAAA,MAAM,eAAe,GAAG,WAAW,CACjC,CAAC,CAAQ,KAAI;;AAEX,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,CAAkB,CAAC;QACnC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,GAAG,EAAE;YACpC,OAAO;SACR;;AAGD,QAAA,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAElF,QAAA,QAAQ,GAAG;AACT,YAAA,aAAa,EAAE,UAAU;AACzB,YAAA,KAAK,EAAE,aAAa,CAAC,IAAI,GAAG,CAAC,GAAG,aAAa,GAAG,SAAS;AAC1D,SAAA,CAAC,CAAC;KACJ,EACD,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAC9B,CAAC;AAEF,IAAA,QACEA,GAAC,CAAA,eAAe,EACd,EAAA,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACR,IAAC,CAAC,UAAU,IAAI,CAAC,UAAU;cAC3B,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,eAAe,EAAE;AACzD,cAAE,EAAE,CAAC,EACP,aAAa,EAAE,aAAa,EAC5B,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,EAC9B,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EAAA,QAAA,EACrB,QAAQ,EAAA,CACO,EAClB;AACJ;;;;"}