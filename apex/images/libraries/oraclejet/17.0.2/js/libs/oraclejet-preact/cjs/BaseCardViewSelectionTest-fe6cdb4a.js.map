{"version":3,"file":"BaseCardViewSelectionTest-fe6cdb4a.js","sources":["../../src/PRIVATE_BaseCardView/__tests__/testHelpers.tsx","../../src/PRIVATE_BaseCardView/__tests__/BaseCardViewTest.tsx","../../src/PRIVATE_BaseCardView/__tests__/BaseCardViewSelectionTest.tsx"],"sourcesContent":["import { fireEvent, screen } from '@testing-library/preact';\nimport { VNode } from 'preact';\nimport { ListItemRendererContext, SelectionMode } from '../../UNSAFE_Collection';\nimport { ActionDetail } from '../../UNSAFE_BaseButton';\nimport { Avatar } from '../../UNSAFE_Avatar';\nimport { Button } from '../../UNSAFE_Button';\nimport { Text } from '../../UNSAFE_Text';\nimport { View } from '../../UNSAFE_View';\nimport { Flex } from '../../UNSAFE_Flex';\nimport { Center } from '../../UNSAFE_Center';\nimport { DragHandle } from '../../UNSAFE_DragHandle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { Employee } from '../__dev__/BaseCardViewData';\n\nexport type GenericCardGridProps<K extends string | number> = {\n  data: Employee[];\n  delay?: number;\n  isReorderEnabled?: boolean;\n  initialCurrentKey?: K;\n  fetchSize?: number;\n};\n\nexport type ActionCardGridProps<K extends string | number> = GenericCardGridProps<K> & {\n  handleAction?: (details: ActionDetail) => void;\n  showButton?: boolean; // for testing invalid focusBehavior\n};\n\nexport type SelectionCardGridProps<K extends string | number> = GenericCardGridProps<K> & {\n  selectionMode?: SelectionMode;\n  selectedKeys?: Set<Employee['id']>;\n};\n\nexport type TestComponentsProps<K extends string | number> = {\n  GenericCardGrid: (props: GenericCardGridProps<K>) => VNode;\n  ActionCardGrid: (props: ActionCardGridProps<K>) => VNode;\n  SelectionCardGrid: (props: SelectionCardGridProps<K>) => VNode;\n} & Record<string, (props: any) => VNode>;\n\nexport const CardContent = ({\n  context,\n  showButton,\n  isReorderEnabled\n}: {\n  context: ListItemRendererContext<Employee['id'], Employee>;\n  showButton?: boolean;\n  isReorderEnabled?: boolean;\n}) => {\n  const dragIcon = isReorderEnabled && (\n    <RootEnvironmentProvider environment={{ mode: 'test' }}>\n      <Center>\n        <DragHandle testId={`drag-icon-${context.metadata.key}`} />\n      </Center>\n    </RootEnvironmentProvider>\n  );\n  const buttons = showButton && (\n    <View paddingBlockStart={'1x'}>\n      <Flex direction=\"row\" wrap=\"wrap\" gap={'1x'} width={'100%'}>\n        <Button variant=\"outlined\" size=\"md\" label=\"A\" />\n        <Button variant=\"outlined\" size=\"md\" label=\"B\" />\n      </Flex>\n    </View>\n  );\n\n  return (\n    <View padding=\"6px\">\n      {dragIcon}\n      <View padding=\"10px\" paddingBlockEnd={0}>\n        <Avatar initials={context.data.initials} size=\"xl\" />\n        <View paddingBlockStart=\"2x\">\n          <Text variant=\"primary\" size=\"md\" lineClamp={1}>\n            {context.data.name}\n          </Text>\n          <Text variant=\"secondary\" size=\"md\" lineClamp={1}>\n            {context.data.title}\n          </Text>\n        </View>\n      </View>\n      <View padding=\"10px\" paddingBlockStart={0}>\n        {buttons}\n        {context.selector?.()}\n      </View>\n    </View>\n  );\n};\n\nexport const populateData = (count: number, isNumberKey?: boolean) =>\n  [...Array(count)].map(\n    (_, i) =>\n      ({\n        id: isNumberKey ? i : `${i}`,\n        name: `Employee ${i}`,\n        title: `Employee title ${i}`,\n        initials: `E${i}`\n      }) as Employee\n  );\n\nexport const getRoot = async () => {\n  return screen.findByRole('grid');\n};\n\nexport const getItems = async (role = 'row') => {\n  return screen.findAllByRole(role);\n};\n\nexport const getContents = async (role = 'gridcell') => {\n  return screen.findAllByRole(role);\n};\n\nexport const mouseItemSelection = (element: HTMLElement, options?: Record<string, unknown>) => {\n  fireEvent.click(element, options);\n};\n\nexport const fireDragAndDropEvent = (dragElement: HTMLElement, dropElement: HTMLElement) => {\n  fireEvent.dragStart(dragElement);\n  fireEvent.dragEnter(dropElement);\n  fireEvent.drop(dropElement);\n  fireEvent.dragEnd(dragElement);\n};\n\nexport const keyboardReorder = (\n  element: HTMLElement,\n  keyCode: 'ArrowLeft' | 'ArrowRight' | 'ArrowUp' | 'ArrowDown'\n) => {\n  fireEvent.keyDown(element, {\n    key: keyCode,\n    code: keyCode,\n    shiftKey: true,\n    metaKey: true\n  });\n};\n","import { render, waitFor, screen, fireEvent } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\n\nimport translations from '#resources/nls/en/bundle';\nimport { getClientHints } from '#utils/PRIVATE_clientHints';\nimport {\n  getRoot,\n  getItems,\n  populateData,\n  TestComponentsProps,\n  mouseItemSelection,\n  fireDragAndDropEvent,\n  keyboardReorder\n} from './testHelpers';\n\nexport const testRender = ({\n  GenericCardGrid,\n  ActionCardGrid,\n  SelectionCardGrid,\n  ContentUpdatableCardGrid\n}: TestComponentsProps<string | number>) => {\n  it('initial render', async function () {\n    const data = populateData(100);\n    render(<GenericCardGrid data={data}></GenericCardGrid>);\n    const items = await getItems('gridcell');\n    expect(items.length).eq(25);\n  });\n\n  it('checking key type - string key', async () => {\n    const data = populateData(3);\n    render(<GenericCardGrid data={data}></GenericCardGrid>);\n    const items = await getItems('gridcell');\n    expect((items[0] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n    expect((items[1] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n    expect((items[2] as HTMLElement).dataset['ojKeyType'] === undefined).eq(true);\n  });\n\n  it('checking key type - numeric key', async () => {\n    const data = populateData(3, true);\n    render(<GenericCardGrid data={data}></GenericCardGrid>);\n    const items = await getItems('gridcell');\n    expect((items[0] as HTMLElement).dataset['ojKeyType']).eq('number');\n    expect((items[1] as HTMLElement).dataset['ojKeyType']).eq('number');\n    expect((items[2] as HTMLElement).dataset['ojKeyType']).eq('number');\n  });\n\n  it('aria attributes - multiselectable and selected, selectionMode is none', async () => {\n    const data = populateData(2);\n    render(<SelectionCardGrid data={data}></SelectionCardGrid>);\n    const items = await getItems('gridcell');\n    const grid = await getRoot();\n\n    expect((grid as HTMLElement).getAttribute('aria-multiselectable')).eq(null);\n    expect((items[0] as HTMLElement).getAttribute('aria-selected')).eq(null);\n    expect((items[1] as HTMLElement).getAttribute('aria-selected')).eq(null);\n  });\n\n  it('aria attributes - multiselectable and selected, selectionMode is single', async () => {\n    const data = populateData(2);\n    render(\n      <SelectionCardGrid\n        data={data}\n        selectionMode={'single'}\n        selectedKeys={new Set(['1'])}></SelectionCardGrid>\n    );\n    const items = await getItems('gridcell');\n    const grid = await getRoot();\n\n    expect((grid as HTMLElement).getAttribute('aria-multiselectable')).eq('false');\n    expect((items[0] as HTMLElement).getAttribute('aria-selected')).eq('false');\n    expect((items[1] as HTMLElement).getAttribute('aria-selected')).eq('true');\n  });\n\n  it('aria attributes - multiselectable and selected, selectionMode is multiple', async () => {\n    const data = populateData(3);\n    render(\n      <SelectionCardGrid\n        data={data}\n        selectionMode={'multiple'}\n        selectedKeys={new Set(['1', '2'])}></SelectionCardGrid>\n    );\n    const items = await getItems('gridcell');\n    const grid = await getRoot();\n\n    expect((grid as HTMLElement).getAttribute('aria-multiselectable')).eq('true');\n    expect((items[0] as HTMLElement).getAttribute('aria-selected')).eq('false');\n    expect((items[1] as HTMLElement).getAttribute('aria-selected')).eq('true');\n    expect((items[2] as HTMLElement).getAttribute('aria-selected')).eq('true');\n  });\n\n  // skip this test in jest, only run it in karma mocha\n  if (typeof jest === typeof undefined) {\n    // because jest doesn't show grid layout, the number of focusable elements is not calculated correctly\n    it('content focusBehavior - valid case', async () => {\n      const data = populateData(3);\n      render(<ActionCardGrid data={data}></ActionCardGrid>);\n      const items = await getItems('gridcell');\n\n      await userEvent.tab();\n\n      await waitFor(() => {\n        expect(items[0].matches(':focus-within')).to.be.true;\n      });\n    });\n\n    it('content focusBehavior - invalid case', async () => {\n      const data = populateData(3);\n      render(<ActionCardGrid data={data} showButton={true}></ActionCardGrid>);\n      const grid = await getRoot();\n\n      await userEvent.tab();\n      await waitFor(() => {\n        expect(grid.matches(':focus')).to.be.true;\n      });\n    });\n  }\n\n  // JET-61732\n  it('memoization - update memoized children', async () => {\n    const data = populateData(3);\n    const { queryByTestId } = render(\n      <ContentUpdatableCardGrid data={data}></ContentUpdatableCardGrid>\n    );\n\n    const elem0 = queryByTestId(data[0].id) as HTMLElement;\n    const elem1 = queryByTestId(data[1].id) as HTMLElement;\n    const elem2 = queryByTestId(data[2].id) as HTMLElement;\n    expect(elem0?.innerHTML, 'the 1st item initial count should be 0').eq('0');\n    expect(elem1?.innerHTML, 'the 2nd item initial count should be 0').eq('0');\n    expect(elem2?.innerHTML, 'the 3rd item initial count should be 0').eq('0');\n\n    const button = queryByTestId('mybutton') as HTMLElement;\n    await userEvent.click(button);\n\n    expect(elem0?.innerHTML, 'the 1st item new count should be 1').eq('1');\n    expect(elem1?.innerHTML, 'the 2nd item new count should be 1').eq('1');\n    expect(elem2?.innerHTML, 'the 3rd item new count should be 1').eq('1');\n  });\n\n  it('reorder - fire Drag and Drop Event', async () => {\n    const data = populateData(5);\n    const { queryByTestId } = render(<GenericCardGrid data={data} isReorderEnabled={true} />);\n\n    let items = await getItems('gridcell');\n    const count = items.length;\n    const firstItemDragIcon = queryByTestId('drag-icon-0') as HTMLElement;\n    const thirdItemDragIcon = queryByTestId('drag-icon-2') as HTMLElement;\n    const firstItem = items[0];\n\n    // drag the first item and drop on the third item\n    fireDragAndDropEvent(firstItemDragIcon, thirdItemDragIcon);\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const updatedThirdItem = items[2];\n      expect(firstItem).equals(updatedThirdItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  it('reorder - reorder the first item to right using keyboard', async () => {\n    const data = populateData(5);\n    render(<GenericCardGrid data={data} isReorderEnabled={true} />);\n\n    const grid = await getRoot();\n    let items = await getItems('gridcell');\n    const count = items.length;\n    const firstItem = items[0];\n\n    // reorder the first item to left\n    mouseItemSelection(firstItem);\n    keyboardReorder(grid, 'ArrowLeft');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[0];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // reorder the first item to right\n    keyboardReorder(grid, 'ArrowRight');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[1];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // continuous reorder the first item to right\n    keyboardReorder(grid, 'ArrowRight');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[2];\n      expect(firstItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  it('reorder - reorder the last item to left using keyboard', async () => {\n    const data = populateData(5);\n    render(<GenericCardGrid data={data} isReorderEnabled={true} />);\n\n    const grid = await getRoot();\n    let items = await getItems('gridcell');\n    const count = items.length;\n    const lastItem = items[items.length - 1];\n\n    // reorder the last item to right\n    mouseItemSelection(lastItem);\n    keyboardReorder(grid, 'ArrowRight');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[items.length - 1];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // reorder the last item to left\n    keyboardReorder(grid, 'ArrowLeft');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[items.length - 2];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n\n    // continuous reorder the last item to left\n    keyboardReorder(grid, 'ArrowLeft');\n    await waitFor(async () => {\n      items = await getItems('gridcell');\n      const reorderedItem = items[items.length - 3];\n      expect(lastItem).equals(reorderedItem);\n      expect(items.length).equal(count);\n    });\n  });\n\n  if (typeof jest == typeof undefined) {\n    it('reorder - instruction text should exist when reorder is enabled', async () => {\n      // get instruction text\n      const { deviceType, platform } = getClientHints();\n      const keyPressed =\n        platform === 'windows' ? translations.accControlKey() : translations.accCommandKey();\n      const reorderInstructions =\n        deviceType === 'phone' || deviceType === 'tablet'\n          ? ''\n          : translations.accReorderInstructions({\n              keyPressed: keyPressed\n            });\n\n      // instruction text should exist when reorder is enabled\n      const data = populateData(3);\n      const { rerender } = render(<GenericCardGrid data={data} isReorderEnabled={true} />);\n      let instructionText = screen.queryByText(reorderInstructions);\n      expect(instructionText).not.to.be.null;\n\n      // instruction text should not exist when reorder is disabled\n      rerender(<GenericCardGrid data={data} />);\n      instructionText = screen.queryByText(reorderInstructions);\n      expect(instructionText).to.be.null;\n    });\n  }\n\n  // test in karma mocha only since it involves scrolling\n  if (typeof jest === typeof undefined) {\n    it('scroll into view - when cardview regains focus', async () => {\n      const data = populateData(10);\n      render(<GenericCardGrid data={data} initialCurrentKey={data[9].id} />);\n\n      // the initial current item is Employee 9, so the scrollTop is high\n      const grid = await getRoot();\n      await waitFor(() => {\n        expect(grid.scrollTop).to.greaterThanOrEqual(450);\n      });\n\n      // scroll cardview up until scrollTop is 0\n      grid.scrollTop = 0;\n      await waitFor(() => {\n        expect(grid.scrollTop).to.eq(0);\n      });\n\n      // tab into cardview, should scroll Employee 9 into view\n      grid.focus();\n      await waitFor(() => {\n        expect(grid.scrollTop).to.greaterThanOrEqual(450);\n      });\n    });\n  }\n\n  // test in karma mocha only since it involves rerender\n  if (typeof jest === typeof undefined) {\n    it('load more on scroll - should fetch data once during keyboard navigation', async () => {\n      const data = populateData(21);\n      render(<GenericCardGrid data={data} fetchSize={7} />);\n\n      let items = await getItems('gridcell');\n      const thirdItem = items[3];\n      await userEvent.click(thirdItem);\n\n      const grid = await getRoot();\n      expect(grid.matches(':focus')).to.be.true;\n      fireEvent.keyDown(grid, { key: 'ArrowDown' });\n\n      await waitFor(async () => {\n        items = await getItems('gridcell');\n        expect(items.length).to.eq(14);\n      });\n\n      // load more should only happen once\n      try {\n        await waitFor(async () => {\n          items = await getItems('gridcell');\n          expect(items.length).to.eq(21);\n        });\n      } catch (e) {\n        expect(e).not.null;\n      }\n    }, 6000);\n  }\n};\n","import { render, waitFor, fireEvent } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport {\n  getRoot,\n  populateData,\n  TestComponentsProps,\n  getContents,\n  mouseItemSelection\n} from './testHelpers';\n\nexport const testSelectionRender = ({\n  SelectionCardGrid\n}: TestComponentsProps<string | number>) => {\n  it('multiple selection - multiple selected items can be preserved', async () => {\n    const data = populateData(3);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n\n    mouseItemSelection(items[0]);\n    mouseItemSelection(items[1]);\n    await waitFor(() => {\n      expect(items[0].getAttribute('aria-selected')).eq('true');\n      expect(items[1].getAttribute('aria-selected')).eq('true');\n    });\n  });\n\n  it('range selection - space and then shift+space', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // press space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ' });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow right to the 3rd item, then shift + space the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - click and then shift+space', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // click to select the 1st item\n    mouseItemSelection(items[0]);\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow right to the 3rd item, then shift + space the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - space and then shift+click', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // press space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ' });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 3rd item\n    mouseItemSelection(items[2], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - click and then shift+click', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n\n    // click to select the 1st item\n    mouseItemSelection(items[0]);\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 3rd item\n    mouseItemSelection(items[2], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - from current item to shift+click item', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 3rd item\n    fireEvent.click(items[2], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - from current item to shift+arrow items', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - from current item to shift+click and then shift+click', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 4th item\n    fireEvent.click(items[3], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - from current item to shift+click and then shift+arrow  ', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + arrow to the 4th item\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - from current item to shift+click and then shift+space', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + click the 2nd item\n    fireEvent.click(items[1], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the 4th item\n    fireEvent.keyUp(items[3], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - from current item to shift+arrow and then shift+click', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // shift + click the 4th item\n    fireEvent.click(items[3], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - from current item to shift+arrow and then shift+arrow', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow to the 3rd item, then shift + arrow to the 4th item\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyDown(grid, { key: 'ArrowRight' });\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - from current item to shift+arrow and then shift+space', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + arrow to the 2nd item\n    fireEvent.click(items[0]);\n    fireEvent.keyDown(grid, { key: 'ArrowRight', shiftKey: true });\n    await waitFor(() => {\n      expect(items[0].getAttribute('aria-selected')).eq('true');\n      expect(items[1].getAttribute('aria-selected')).eq('true');\n      expect(items[2].getAttribute('aria-selected')).eq('false');\n      expect(items[3].getAttribute('aria-selected')).eq('false');\n    });\n\n    // shift + space the 4th item\n    fireEvent.keyUp(items[3], { key: ' ', shiftKey: true });\n    await waitFor(() => {\n      expect(items[0].getAttribute('aria-selected')).eq('false');\n      expect(items[1].getAttribute('aria-selected')).eq('true');\n      expect(items[2].getAttribute('aria-selected')).eq('true');\n      expect(items[3].getAttribute('aria-selected')).eq('true');\n    });\n  });\n\n  it('range selection - from current item to shift+space and then shift+space', async () => {\n    const data = populateData(4);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n\n    // tab and focus to make the 1st item current\n    await userEvent.tab();\n    expect(grid.matches(':focus')).to.be.true;\n\n    // shift + space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('false');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n\n    // arrow down to the 3rd item, then shift + space the 3rd item\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyDown(grid, { key: 'ArrowDown' });\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n  });\n\n  it('range selection - shift+space and then shift+space', async () => {\n    const data = populateData(5);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n    mouseItemSelection(items[0]);\n\n    // shift + space to select the 2nd item\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection - deselect selected item by shift+space', async () => {\n    const data = populateData(3);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n    mouseItemSelection(items[0]);\n\n    // shift + space to select the 2nd item\n    fireEvent.keyUp(items[2], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n\n    fireEvent.keyUp(items[1], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection backward - shift+space and then shift+space', async () => {\n    const data = populateData(5);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + space to select the 1st item\n    fireEvent.keyUp(items[0], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('false');\n    expect(items[1].getAttribute('aria-selected')).eq('false');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection backward - shift+click and then shift+space', async () => {\n    const data = populateData(5);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + click to select the 1st item\n    mouseItemSelection(items[0], { shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n\n  it('range selection backward - shift+arrow and then shift+space', async () => {\n    const data = populateData(5);\n    render(<SelectionCardGrid data={data} selectionMode={'multiple'}></SelectionCardGrid>);\n\n    const grid = await getRoot();\n    const items = await getContents();\n    mouseItemSelection(items[2]);\n\n    // shift + arrow to select the 1st item\n    fireEvent.keyDown(grid, { key: 'ArrowLeft', shiftKey: true });\n    fireEvent.keyDown(grid, { key: 'ArrowLeft', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('false');\n    expect(items[4].getAttribute('aria-selected')).eq('false');\n\n    // shift + space the last item\n    fireEvent.keyUp(items[4], { key: ' ', shiftKey: true });\n    expect(items[0].getAttribute('aria-selected')).eq('true');\n    expect(items[1].getAttribute('aria-selected')).eq('true');\n    expect(items[2].getAttribute('aria-selected')).eq('true');\n    expect(items[3].getAttribute('aria-selected')).eq('true');\n    expect(items[4].getAttribute('aria-selected')).eq('true');\n  });\n};\n"],"names":["_jsx","RootEnvironmentProvider","Center","DragHandle","View","_jsxs","Flex","Button","Avatar","Text","screen","fireEvent","render","expect","userEvent","waitFor","getClientHints","translations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsCO,MAAM,WAAW,GAAG,CAAC,EAC1B,OAAO,EACP,UAAU,EACV,gBAAgB,EAKjB,KAAI;AACH,IAAA,MAAM,QAAQ,GAAG,gBAAgB,KAC/BA,cAAC,CAAAC,2CAAuB,EAAC,EAAA,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EACpD,QAAA,EAAAD,cAAA,CAACE,aAAM,EAAA,EAAA,QAAA,EACLF,eAACG,qBAAU,EAAA,EAAC,MAAM,EAAE,aAAa,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAA,EAAA,CAAI,EACpD,CAAA,EAAA,CACe,CAC3B,CAAC;AACF,IAAA,MAAM,OAAO,GAAG,UAAU,KACxBH,cAAA,CAACI,SAAI,EAAA,EAAC,iBAAiB,EAAE,IAAI,EAAA,QAAA,EAC3BC,gBAACC,SAAI,EAAA,EAAC,SAAS,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EACxD,QAAA,EAAA,CAAAN,cAAA,CAACO,aAAM,EAAA,EAAC,OAAO,EAAC,UAAU,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,GAAG,EAAA,CAAG,EACjDP,cAAC,CAAAO,aAAM,EAAC,EAAA,OAAO,EAAC,UAAU,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,GAAG,EAAA,CAAG,CAC5C,EAAA,CAAA,EAAA,CACF,CACR,CAAC;IAEF,QACEF,eAAC,CAAAD,SAAI,EAAC,EAAA,OAAO,EAAC,KAAK,EAAA,QAAA,EAAA,CAChB,QAAQ,EACTC,eAAC,CAAAD,SAAI,IAAC,OAAO,EAAC,MAAM,EAAC,eAAe,EAAE,CAAC,EACrC,QAAA,EAAA,CAAAJ,cAAA,CAACQ,aAAM,EAAA,EAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,IAAI,EAAA,CAAG,EACrDH,eAAA,CAACD,SAAI,EAAA,EAAC,iBAAiB,EAAC,IAAI,EAC1B,QAAA,EAAA,CAAAJ,cAAA,CAACS,SAAI,EAAA,EAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAE,CAAC,EAC3C,QAAA,EAAA,OAAO,CAAC,IAAI,CAAC,IAAI,EAAA,CACb,EACPT,cAAA,CAACS,SAAI,EAAA,EAAC,OAAO,EAAC,WAAW,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAE,CAAC,EAC7C,QAAA,EAAA,OAAO,CAAC,IAAI,CAAC,KAAK,EAAA,CACd,CACF,EAAA,CAAA,CAAA,EAAA,CACF,EACPJ,eAAA,CAACD,SAAI,EAAC,EAAA,OAAO,EAAC,MAAM,EAAC,iBAAiB,EAAE,CAAC,EAAA,QAAA,EAAA,CACtC,OAAO,EACP,OAAO,CAAC,QAAQ,IAAI,CAAA,EAAA,CAChB,CACF,EAAA,CAAA,EACP;AACJ,EAAE;AAEK,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,WAAqB,KAC/D,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CACnB,CAAC,CAAC,EAAE,CAAC,MACF;IACC,EAAE,EAAE,WAAW,GAAG,CAAC,GAAG,CAAG,EAAA,CAAC,CAAE,CAAA;IAC5B,IAAI,EAAE,CAAY,SAAA,EAAA,CAAC,CAAE,CAAA;IACrB,KAAK,EAAE,CAAkB,eAAA,EAAA,CAAC,CAAE,CAAA;IAC5B,QAAQ,EAAE,CAAI,CAAA,EAAA,CAAC,CAAE,CAAA;AAClB,CAAA,CAAa,EAChB;AAES,MAAA,OAAO,GAAG,YAAW;AAChC,IAAA,OAAOM,aAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACnC,EAAE;AAEW,MAAA,QAAQ,GAAG,OAAO,IAAI,GAAG,KAAK,KAAI;AAC7C,IAAA,OAAOA,aAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpC,EAAE;AAEK,MAAM,WAAW,GAAG,OAAO,IAAI,GAAG,UAAU,KAAI;AACrD,IAAA,OAAOA,aAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC,CAAC;MAEW,kBAAkB,GAAG,CAAC,OAAoB,EAAE,OAAiC,KAAI;AAC5F,IAAAC,gBAAS,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACpC,EAAE;AAEK,MAAM,oBAAoB,GAAG,CAAC,WAAwB,EAAE,WAAwB,KAAI;AACzF,IAAAA,gBAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACjC,IAAAA,gBAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACjC,IAAAA,gBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5B,IAAAA,gBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACjC,CAAC,CAAC;MAEW,eAAe,GAAG,CAC7B,OAAoB,EACpB,OAA6D,KAC3D;AACF,IAAAA,gBAAS,CAAC,OAAO,CAAC,OAAO,EAAE;AACzB,QAAA,GAAG,EAAE,OAAO;AACZ,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,OAAO,EAAE,IAAI;AACd,KAAA,CAAC,CAAC;AACL;;ACjHO,MAAM,UAAU,GAAG,CAAC,EACzB,eAAe,EACf,cAAc,EACd,iBAAiB,EACjB,wBAAwB,EACa,KAAI;IACzC,EAAE,CAAC,gBAAgB,EAAE,kBAAK;AACxB,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;QAC/BC,aAAM,CAACZ,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAoB,CAAA,CAAC,CAAC;AACxD,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;QACzCa,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,gCAAgC,EAAE,YAAW;AAC9C,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC7BD,aAAM,CAACZ,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAoB,CAAA,CAAC,CAAC;AACxD,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,QAAAa,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAChF,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,iCAAiC,EAAE,YAAW;QAC/C,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACnCD,aAAM,CAACZ,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAoB,CAAA,CAAC,CAAC;AACxD,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,QAAAa,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AACpE,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AACpE,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtE,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,uEAAuE,EAAE,YAAW;AACrF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC7BD,aAAM,CAACZ,eAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAsB,CAAA,CAAC,CAAC;AAC5D,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAE7B,QAAAa,WAAM,CAAE,IAAoB,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACzE,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC7BD,aAAM,CACJZ,eAAC,iBAAiB,EAAA,EAChB,IAAI,EAAE,IAAI,EACV,aAAa,EAAE,QAAQ,EACvB,YAAY,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAsB,CAAA,CACrD,CAAC;AACF,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAE7B,QAAAa,WAAM,CAAE,IAAoB,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC/E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC5E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC7E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,2EAA2E,EAAE,YAAW;AACzF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC7BD,aAAM,CACJZ,cAAC,CAAA,iBAAiB,EAChB,EAAA,IAAI,EAAE,IAAI,EACV,aAAa,EAAE,UAAU,EACzB,YAAY,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAsB,CAAA,CAC1D,CAAC;AACF,QAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAE7B,QAAAa,WAAM,CAAE,IAAoB,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC9E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC5E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC3E,QAAAA,WAAM,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC7E,KAAC,CAAC,CAAC;;AAGH,IAAA,IAAI,OAAO,IAAI,KAAK,OAAO,SAAS,EAAE;;AAEpC,QAAA,EAAE,CAAC,oCAAoC,EAAE,YAAW;AAClD,YAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAC7BD,aAAM,CAACZ,eAAC,cAAc,EAAA,EAAC,IAAI,EAAE,IAAI,EAAmB,CAAA,CAAC,CAAC;AACtD,YAAA,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AAEzC,YAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;YAEtB,MAAMC,cAAO,CAAC,MAAK;AACjB,gBAAAF,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AACvD,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,EAAE,CAAC,sCAAsC,EAAE,YAAW;AACpD,YAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,YAAAD,aAAM,CAACZ,cAAA,CAAC,cAAc,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAA,CAAmB,CAAC,CAAC;AACxE,YAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAE7B,YAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;YACtB,MAAMC,cAAO,CAAC,MAAK;AACjB,gBAAAF,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC5C,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;AAGD,IAAA,EAAE,CAAC,wCAAwC,EAAE,YAAW;AACtD,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,MAAM,EAAE,aAAa,EAAE,GAAGD,aAAM,CAC9BZ,cAAA,CAAC,wBAAwB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAA,CAA6B,CAClE,CAAC;QAEF,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAgB,CAAC;QACvD,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAgB,CAAC;QACvD,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAgB,CAAC;AACvD,QAAAa,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,wCAAwC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC3E,QAAAA,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,wCAAwC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC3E,QAAAA,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,wCAAwC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAE3E,QAAA,MAAM,MAAM,GAAG,aAAa,CAAC,UAAU,CAAgB,CAAC;AACxD,QAAA,MAAMC,6BAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAE9B,QAAAD,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,oCAAoC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACvE,QAAAA,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,oCAAoC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACvE,QAAAA,WAAM,CAAC,KAAK,EAAE,SAAS,EAAE,oCAAoC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACzE,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,oCAAoC,EAAE,YAAW;AAClD,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,MAAM,EAAE,aAAa,EAAE,GAAGD,aAAM,CAACZ,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAA,CAAI,CAAC,CAAC;AAE1F,QAAA,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvC,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,iBAAiB,GAAG,aAAa,CAAC,aAAa,CAAgB,CAAC;AACtE,QAAA,MAAM,iBAAiB,GAAG,aAAa,CAAC,aAAa,CAAgB,CAAC;AACtE,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAG3B,QAAA,oBAAoB,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;AAC3D,QAAA,MAAMe,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,YAAA,MAAM,gBAAgB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClCF,WAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAC3CA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,0DAA0D,EAAE,YAAW;AACxE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAA,CAAI,CAAC,CAAC;AAEhE,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvC,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;QAG3B,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC9B,QAAA,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACnC,QAAA,MAAMe,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,YAAA,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/BF,WAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACxCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;;AAGH,QAAA,eAAe,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACpC,QAAA,MAAME,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,YAAA,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/BF,WAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACxCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;;AAGH,QAAA,eAAe,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACpC,QAAA,MAAME,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,YAAA,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/BF,WAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACxCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,wDAAwD,EAAE,YAAW;AACtE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAA,CAAI,CAAC,CAAC;AAEhE,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvC,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;QAGzC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,eAAe,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACpC,QAAA,MAAMe,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;YACnC,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9CF,WAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACvCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;;AAGH,QAAA,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACnC,QAAA,MAAME,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;YACnC,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9CF,WAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACvCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;;AAGH,QAAA,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACnC,QAAA,MAAME,cAAO,CAAC,YAAW;AACvB,YAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;YACnC,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9CF,WAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACvCA,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,IAAI,OAAO,IAAI,IAAI,OAAO,SAAS,EAAE;AACnC,QAAA,EAAE,CAAC,iEAAiE,EAAE,YAAW;;YAE/E,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAGG,0BAAc,EAAE,CAAC;AAClD,YAAA,MAAM,UAAU,GACd,QAAQ,KAAK,SAAS,GAAGC,kCAAY,CAAC,aAAa,EAAE,GAAGA,kCAAY,CAAC,aAAa,EAAE,CAAC;YACvF,MAAM,mBAAmB,GACvB,UAAU,KAAK,OAAO,IAAI,UAAU,KAAK,QAAQ;AAC/C,kBAAE,EAAE;AACJ,kBAAEA,kCAAY,CAAC,sBAAsB,CAAC;AAClC,oBAAA,UAAU,EAAE,UAAU;AACvB,iBAAA,CAAC,CAAC;;AAGT,YAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,YAAA,MAAM,EAAE,QAAQ,EAAE,GAAGL,aAAM,CAACZ,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAA,CAAI,CAAC,CAAC;YACrF,IAAI,eAAe,GAAGU,aAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAC9DG,WAAM,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;YAGvC,QAAQ,CAACb,eAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAI,CAAA,CAAC,CAAC;AAC1C,YAAA,eAAe,GAAGU,aAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAC1DG,WAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AACrC,SAAC,CAAC,CAAC;KACJ;;AAGD,IAAA,IAAI,OAAO,IAAI,KAAK,OAAO,SAAS,EAAE;AACpC,QAAA,EAAE,CAAC,gDAAgD,EAAE,YAAW;AAC9D,YAAA,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;AAC9B,YAAAD,aAAM,CAACZ,cAAC,CAAA,eAAe,IAAC,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAA,CAAI,CAAC,CAAC;;AAGvE,YAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;YAC7B,MAAMe,cAAO,CAAC,MAAK;AACjB,gBAAAF,WAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AACpD,aAAC,CAAC,CAAC;;AAGH,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,MAAME,cAAO,CAAC,MAAK;AACjB,gBAAAF,WAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,aAAC,CAAC,CAAC;;YAGH,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,MAAME,cAAO,CAAC,MAAK;AACjB,gBAAAF,WAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AACpD,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;;AAGD,IAAA,IAAI,OAAO,IAAI,KAAK,OAAO,SAAS,EAAE;AACpC,QAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,YAAA,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;AAC9B,YAAAD,aAAM,CAACZ,cAAA,CAAC,eAAe,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAA,CAAI,CAAC,CAAC;AAEtD,YAAA,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvC,YAAA,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAA,MAAMc,6BAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAEjC,YAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,YAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC1CF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;AAE9C,YAAA,MAAMI,cAAO,CAAC,YAAW;AACvB,gBAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,gBAAAF,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjC,aAAC,CAAC,CAAC;;AAGH,YAAA,IAAI;AACF,gBAAA,MAAME,cAAO,CAAC,YAAW;AACvB,oBAAA,KAAK,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,oBAAAF,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjC,iBAAC,CAAC,CAAC;aACJ;YAAC,OAAO,CAAC,EAAE;AACV,gBAAAA,WAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;aACpB;SACF,EAAE,IAAI,CAAC,CAAC;KACV;AACH;;MCnTa,mBAAmB,GAAG,CAAC,EAClC,iBAAiB,EACoB,KAAI;AACzC,IAAA,EAAE,CAAC,+DAA+D,EAAE,YAAW;AAC7E,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAElC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAMe,cAAO,CAAC,MAAK;AACjB,YAAAF,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxC,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;QAG3DF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;QAC/CA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;AAC/C,QAAAA,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAa,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;QAG3DF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;QAC/CA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;AAC/C,QAAAA,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxC,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACjD,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAa,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACjD,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yDAAyD,EAAE,YAAW;AACvE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,0DAA0D,EAAE,YAAW;AACxE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,2EAA2E,EAAE,YAAW;AACzF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;QAG1CF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9C,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;QAG3DF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;QAC/CA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;AAC/C,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;QAG1CF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/D,MAAMI,cAAO,CAAC,MAAK;AACjB,YAAAF,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,SAAC,CAAC,CAAC;;AAGH,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,MAAMI,cAAO,CAAC,MAAK;AACjB,YAAAF,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yEAAyE,EAAE,YAAW;AACvF,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;;AAGlC,QAAA,MAAMc,6BAAS,CAAC,GAAG,EAAE,CAAC;AACtB,QAAAD,WAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAG1C,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;QAG3DF,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QAC9CA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;AAC9C,QAAAA,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,oDAAoD,EAAE,YAAW;AAClE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAClC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG7B,QAAAW,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,yDAAyD,EAAE,YAAW;AACvE,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAClC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG7B,QAAAW,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAE1D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,6DAA6D,EAAE,YAAW;AAC3E,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAClC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG7B,QAAAW,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,6DAA6D,EAAE,YAAW;AAC3E,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAClC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG7B,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACjD,QAAAa,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,6DAA6D,EAAE,YAAW;AAC3E,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAAD,aAAM,CAACZ,cAAA,CAAC,iBAAiB,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAA,CAAsB,CAAC,CAAC;AAEvF,QAAA,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;AAC7B,QAAA,MAAM,KAAK,GAAG,MAAM,WAAW,EAAE,CAAC;AAClC,QAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAG7B,QAAAW,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,QAAAA,gBAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAG3D,QAAAF,gBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACxD,QAAAE,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC1D,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AACL;;;;;;;;;;;"}