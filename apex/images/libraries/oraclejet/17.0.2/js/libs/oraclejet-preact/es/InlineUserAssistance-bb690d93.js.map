{"version":3,"file":"InlineUserAssistance-bb690d93.js","sources":["../../src/UNSAFE_UserAssistance/InlineRequired.tsx","../../src/UNSAFE_UserAssistance/InlineUserAssistanceContainer.tsx","../../src/UNSAFE_UserAssistance/InlineUserAssistance.tsx"],"sourcesContent":["import { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { UserAssistanceVariantOptions } from './themes/UserAssistanceStyles.css';\nimport { UserAssistanceRedwoodTheme } from './themes/redwood/UserAssistanceTheme';\n\ntype Props = {\n  align?: 'start' | 'end';\n  hasMessages?: boolean;\n  hasHelp?: boolean;\n};\n\nexport function InlineRequired({ align = 'end', hasHelp = false, hasMessages = false }: Props) {\n  const { classes } = useComponentTheme<UserAssistanceVariantOptions>(UserAssistanceRedwoodTheme, {\n    align,\n    visible: hasHelp || hasMessages ? 'hide' : 'show' // TODO: fix typing so that options autocomplete\n  });\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const requiredStr = translations.userAssistance_required();\n\n  return <div class={classes}>{requiredStr}</div>;\n}\n","import { ComponentChildren } from 'preact';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { UserAssistanceDensityType } from './InlineUserAssistance';\nimport {\n  UserAssistanceStyles,\n  UserAssistanceVariantOptions\n} from './themes/UserAssistanceStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { UserAssistanceRedwoodTheme } from './themes/redwood/UserAssistanceTheme';\nimport { TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\n\ntype Props = {\n  id?: string;\n  children?: ComponentChildren;\n  variant?: UserAssistanceDensityType;\n} & TestIdProps;\n\n// defaults to type='reflow'. If this is within an oj-form-layout, the o-f-l\n// will pass down its type which defaults to 'efficient' (TODO).\nexport function InlineUserAssistanceContainer({ variant = 'reflow', children, id, testId }: Props) {\n  const {\n    classes,\n    styles: { inlineContainerBaseStyles }\n  } = useComponentTheme<UserAssistanceVariantOptions, UserAssistanceStyles>(\n    UserAssistanceRedwoodTheme,\n    {\n      container: variant\n    }\n  );\n\n  const testIdProps = useTestId(testId);\n\n  // we want to suppress the display of messages if it's in a group context\n  const inputGroupContext = useInputGroupContext();\n  if (inputGroupContext !== null) return null;\n\n  const content = (\n    <div class={classNames([classes, inlineContainerBaseStyles])} id={id} {...testIdProps}>\n      {children}\n    </div>\n  );\n\n  return content;\n}\n","import { ComponentProps } from 'preact';\nimport { ComponentMessageItem, ComponentMessageContainer } from '../UNSAFE_ComponentMessage';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { InlineHelp } from './InlineHelp';\nimport { InlineRequired } from './InlineRequired';\nimport { InlineUserAssistanceContainer } from './InlineUserAssistanceContainer';\nimport { TestIdProps } from '#hooks/UNSAFE_useTestId';\n\nexport type UserAssistanceDensityType = 'reflow' | 'efficient';\n\ntype Props = {\n  assistiveText?: string;\n  fieldLabel?: string;\n  helpSourceLink?: string;\n  helpSourceText?: string;\n  id?: string;\n  isRequiredShown?: boolean;\n  requiredAlignment?: ComponentProps<typeof InlineRequired>['align'];\n  messages?: ComponentMessageItem[];\n  userAssistanceDensity?: UserAssistanceDensityType;\n} & TestIdProps;\n\n// This has the precedence rules for the user assistance.\nexport function InlineUserAssistance({\n  assistiveText,\n  fieldLabel,\n  helpSourceLink,\n  helpSourceText,\n  id,\n  isRequiredShown,\n  requiredAlignment,\n  messages = [],\n  userAssistanceDensity,\n  testId\n}: Props) {\n  const { isReadonly: isFormReadonly } = useFormContext();\n  const needsUserAssistanceIfNoContent =\n    userAssistanceDensity === 'efficient' && isFormReadonly === false;\n  const { isFocused } = useFormFieldContext();\n  const uaInlineContent =\n    messages.length > 0 ? (\n      <ComponentMessageContainer fieldLabel={fieldLabel} messages={messages} />\n    ) : (assistiveText || helpSourceLink) && isFocused ? (\n      <InlineHelp\n        assistiveText={assistiveText}\n        sourceLink={helpSourceLink}\n        sourceText={helpSourceText}\n      />\n    ) : isRequiredShown ? (\n      <InlineRequired align={requiredAlignment} />\n    ) : null;\n\n  // when reflow we do not render unless it has content.\n  // when efficient we render regardless of if it has content.\n  // TODO: Get the userAssistanceDensity value from the FormContext\n  return uaInlineContent || needsUserAssistanceIfNoContent ? (\n    <InlineUserAssistanceContainer id={id} variant={userAssistanceDensity} testId={testId}>\n      {uaInlineContent}\n    </InlineUserAssistanceContainer>\n  ) : null;\n}\n"],"names":["_jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYgB,SAAA,cAAc,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK,EAAE,WAAW,GAAG,KAAK,EAAS,EAAA;AAC3F,IAAA,MAAM,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAA+B,0BAA0B,EAAE;QAC9F,KAAK;AACL,QAAA,OAAO,EAAE,OAAO,IAAI,WAAW,GAAG,MAAM,GAAG,MAAM;AAClD,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,YAAY,GAAG,oBAAoB,CAAa,0BAA0B,CAAC,CAAC;AAClF,IAAA,MAAM,WAAW,GAAG,YAAY,CAAC,uBAAuB,EAAE,CAAC;AAE3D,IAAA,OAAOA,aAAK,KAAK,EAAE,OAAO,EAAG,QAAA,EAAA,WAAW,GAAO,CAAC;AAClD;;ACJA;AACA;AACgB,SAAA,6BAA6B,CAAC,EAAE,OAAO,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAS,EAAA;AAC/F,IAAA,MAAM,EACJ,OAAO,EACP,MAAM,EAAE,EAAE,yBAAyB,EAAE,EACtC,GAAG,iBAAiB,CACnB,0BAA0B,EAC1B;AACE,QAAA,SAAS,EAAE,OAAO;AACnB,KAAA,CACF,CAAC;AAEF,IAAA,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;;AAGtC,IAAA,MAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IACjD,IAAI,iBAAiB,KAAK,IAAI;AAAE,QAAA,OAAO,IAAI,CAAC;IAE5C,MAAM,OAAO,IACXA,GAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,UAAU,CAAC,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAA,GAAM,WAAW,EAClF,QAAA,EAAA,QAAQ,EACL,CAAA,CACP,CAAC;AAEF,IAAA,OAAO,OAAO,CAAC;AACjB;;ACrBA;AACM,SAAU,oBAAoB,CAAC,EACnC,aAAa,EACb,UAAU,EACV,cAAc,EACd,cAAc,EACd,EAAE,EACF,eAAe,EACf,iBAAiB,EACjB,QAAQ,GAAG,EAAE,EACb,qBAAqB,EACrB,MAAM,EACA,EAAA;IACN,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,cAAc,EAAE,CAAC;IACxD,MAAM,8BAA8B,GAClC,qBAAqB,KAAK,WAAW,IAAI,cAAc,KAAK,KAAK,CAAC;AACpE,IAAA,MAAM,EAAE,SAAS,EAAE,GAAG,mBAAmB,EAAE,CAAC;AAC5C,IAAA,MAAM,eAAe,GACnB,QAAQ,CAAC,MAAM,GAAG,CAAC,IACjBA,GAAA,CAAC,yBAAyB,EAAA,EAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAI,CAAA,IACvE,CAAC,aAAa,IAAI,cAAc,KAAK,SAAS,IAChDA,GAAA,CAAC,UAAU,EAAA,EACT,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,cAAc,EAC1B,UAAU,EAAE,cAAc,EAAA,CAC1B,IACA,eAAe,IACjBA,GAAA,CAAC,cAAc,EAAC,EAAA,KAAK,EAAE,iBAAiB,GAAI,IAC1C,IAAI,CAAC;;;;AAKX,IAAA,OAAO,eAAe,IAAI,8BAA8B,IACtDA,GAAA,CAAC,6BAA6B,EAAA,EAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,MAAM,EAAE,MAAM,EAAA,QAAA,EAClF,eAAe,EAAA,CACc,IAC9B,IAAI,CAAC;AACX;;;;"}