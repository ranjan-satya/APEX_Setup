{"version":3,"file":"useChartContextMenu-d7ed939f.js","sources":["../../src/hooks/PRIVATE_useChartContextMenu/contextMenuUtils.ts","../../src/hooks/PRIVATE_useChartContextMenu/useChartContextMenu.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type {\n  ChartSeriesData,\n  Info,\n  ChartContextMenuContext,\n  Group\n} from '../../utils/UNSAFE_visTypes/chart';\nimport { getInfo } from '../../utils/UNSAFE_visUtils';\nimport type { Ref } from 'preact/hooks';\n\nexport function getChartContextMenuContext<K, D>(\n  focusedItemInfo: Info,\n  gesture: 'mouse' | 'touch' | 'keyboard',\n  target: HTMLElement,\n  series: ChartSeriesData<K, D>[],\n  groups: Group[],\n  rootRef: Ref<HTMLElement>,\n  xAxisTitle?: string,\n  yAxisTitle?: string,\n  getDataItem?: (seriesIndex: number, groupIndex: number) => D | undefined\n) {\n  let seriesIndex;\n  let groupIndex;\n  if (gesture === 'keyboard') {\n    //We find the element where the position of the menu is going to be based of\n    groupIndex = focusedItemInfo.groupIndex;\n    seriesIndex = focusedItemInfo.seriesIndex;\n  } else {\n    //We search for the key using the target of the event\n    const info = getInfo(rootRef, target);\n    seriesIndex = info ? info.seriesIndex : undefined;\n    groupIndex = info ? info.groupIndex : undefined;\n  }\n  let context;\n  if (\n    seriesIndex !== undefined &&\n    groupIndex !== undefined &&\n    getDataItem?.(seriesIndex, groupIndex)\n  ) {\n    context = {\n      data: getDataItem(seriesIndex, groupIndex),\n      groupIndex,\n      seriesIndex,\n      type: 'item'\n    };\n  } else if (seriesIndex !== undefined) {\n    context = {\n      data: series[seriesIndex],\n      type: 'series'\n    };\n  } else if (groupIndex !== undefined) {\n    context = {\n      data: groups[groupIndex],\n      type: 'xAxisTickLabel'\n    };\n  } else {\n    const target = event?.target as HTMLElement;\n    const text = target?.textContent;\n    if ((text && gesture !== 'keyboard' && text === xAxisTitle) || text === yAxisTitle) {\n      context = {\n        type: 'axisTitle',\n        axis: text === xAxisTitle ? 'x' : 'y'\n      };\n    } else {\n      context = {\n        type: 'background'\n      };\n    }\n  }\n  return {\n    context: context as ChartContextMenuContext<K, D>\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { BarSeriesData } from '../../UNSAFE_BarChart/barChart.types';\nimport type { LineAreaSeriesData } from '../../UNSAFE_LineAreaChart/lineAreaChart.types';\nimport type { Ref } from 'preact/hooks';\nimport type {\n  ChartContextMenuContext,\n  ChartContextMenuConfig,\n  Group,\n  Info\n} from '../../utils/UNSAFE_visTypes/chart';\nimport { type gestureTypes, useContextMenu } from '../PRIVATE_useVisContextMenu';\nimport { getChartContextMenuContext } from './contextMenuUtils';\n\ntype Props<K, D> = {\n  series: (BarSeriesData<K, D> | LineAreaSeriesData<K, D>)[];\n  groups: Group[];\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined;\n  focusedItemInfo: Info;\n  rootRef: Ref<HTMLDivElement>;\n  xAxisTitle?: string;\n  yAxisTitle?: string;\n  contextMenuConfig?: ChartContextMenuConfig<K, D>;\n  onContextMenuDismissed?: (gesture: gestureTypes) => void;\n};\n\nexport const useChartContextMenu = <K extends string | number, D>({\n  getDataItem,\n  focusedItemInfo,\n  series,\n  groups,\n  rootRef,\n  xAxisTitle,\n  yAxisTitle,\n  contextMenuConfig,\n  onContextMenuDismissed\n}: Props<K, D>) => {\n  const { contextMenuProps, contextMenuContent } = useContextMenu<ChartContextMenuContext<K, D>>({\n    onContextMenuHandler: ({ gesture, target }) => {\n      let elem;\n      const { context } = getChartContextMenuContext<K, D>(\n        focusedItemInfo,\n        gesture,\n        target as HTMLElement,\n        series,\n        groups,\n        rootRef,\n        xAxisTitle,\n        yAxisTitle,\n        getDataItem\n      );\n      if (gesture === 'keyboard' && context.type === 'item') {\n        elem = rootRef.current?.querySelector(\n          `[data-oj-series-index=\"${context?.seriesIndex}\"][data-oj-group-index=\"${context?.groupIndex}\"]`\n        );\n      }\n      return {\n        context,\n        elem\n      };\n    },\n    contextMenuOptions: {\n      isDisabled: !contextMenuConfig //If there is not a context menu renderer we disable the hook\n    },\n    rootRef,\n    contextMenuConfig,\n    onContextMenuDismissed\n  });\n\n  return { contextMenuContent, contextMenuProps };\n};\n"],"names":["getInfo","useContextMenu"],"mappings":"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"}