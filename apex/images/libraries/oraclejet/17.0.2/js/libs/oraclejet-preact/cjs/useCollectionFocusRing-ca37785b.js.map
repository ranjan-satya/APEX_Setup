{"version":3,"file":"useCollectionFocusRing-ca37785b.js","sources":["../../src/hooks/PRIVATE_useCollectionFocusRing/useCollectionFocusRing.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback, useState, useRef, Ref } from 'preact/hooks';\nimport { getElementContainsFunc } from '../../utils/PRIVATE_collectionUtils';\n\n//TODO: Clarify with UX the correct focus behavior when changing tabs.JET-61663\n\n/**\n * Hook for handling focus ring management in Collection components.\n *\n * @param rootRef - a Ref to the root element of the consuming component\n * @param navigationKeys set of keys that are considered as navigation keys for Collection.\n * @param isVisibleFocusLostOnClick boolean or function that returns a boolean that states if focus is going to be visible after a click\n * @returns\n */\nexport function useCollectionFocusRing(\n  rootRef: Ref<HTMLElement>,\n  navigationKeys: string[],\n  isVisibleFocusLostOnClick: ((elem: Element) => boolean) | boolean = true\n): [\n  boolean,\n  {\n    onFocus: (event: FocusEvent) => void;\n    onBlur: (event: FocusEvent) => void;\n    onKeyDown: (event: KeyboardEvent) => void;\n    onPointerDown: (event: PointerEvent) => void;\n  }\n] {\n  const [focusRingVisible, setFocusRingVisible] = useState(false);\n\n  const recentPointerRef = useRef(false);\n\n  const previousFocusRingVisibleBecauseDocLostFocus = useRef<boolean | null>(null);\n\n  // We need to clear this out when using touching devices\n  // TODO: We need to confirm if this type is correct or has to be changed\n  const pointerDownTimerRef = useRef<ReturnType<typeof setTimeout>>();\n\n  const onFocus = useCallback(() => {\n    if (!focusRingVisible && !recentPointerRef.current) {\n      if (previousFocusRingVisibleBecauseDocLostFocus.current !== null) {\n        setFocusRingVisible(previousFocusRingVisibleBecauseDocLostFocus.current);\n      } else {\n        setFocusRingVisible(true);\n      }\n    }\n    previousFocusRingVisibleBecauseDocLostFocus.current = null;\n  }, [focusRingVisible]);\n\n  const onBlur = useCallback(\n    (e: FocusEvent) => {\n      /* Between leaving the old element and entering the new element the active element\n      is the document/body itself. This is not the case when blur is produced due to document losing focus.\n      In this last case the document.active element is the same as the target of the blur method.*/\n      if (e.target === document.activeElement) {\n        //We save focus ring state so it's set once focus come back\n        previousFocusRingVisibleBecauseDocLostFocus.current = focusRingVisible;\n      }\n      /*When changing tabs this event is called with a null related target. Imporant to verify we remove focus ring\n        but not because tab was changed. This checking is added because of JET-62651 */\n      if (\n        !e.relatedTarget ||\n        !getElementContainsFunc(rootRef.current)(e.relatedTarget as Element)\n      ) {\n        setFocusRingVisible(false);\n      }\n    },\n    [rootRef, focusRingVisible]\n  );\n\n  const onPointerDown = useCallback(\n    (e: PointerEvent) => {\n      const getIsVisibleFocusLostOnClick =\n        typeof isVisibleFocusLostOnClick === 'function'\n          ? isVisibleFocusLostOnClick(e.target as Element)\n          : isVisibleFocusLostOnClick;\n\n      if (focusRingVisible && getIsVisibleFocusLostOnClick) {\n        setFocusRingVisible(false);\n      }\n      recentPointerRef.current = true;\n      pointerDownTimerRef.current = setTimeout(() => {\n        recentPointerRef.current = false;\n      }, FOCUS_SHIFT_TIMEOUT);\n    },\n    [focusRingVisible, isVisibleFocusLostOnClick]\n  );\n\n  //onFocus is called after pointerDown on desktop devices, but for touch ones focus is triggered after touch end\n  const onTouchEnd = useCallback(() => {\n    clearTimeout(pointerDownTimerRef.current);\n    recentPointerRef.current = true;\n    setTimeout(() => {\n      recentPointerRef.current = false;\n    }, FOCUS_SHIFT_TIMEOUT);\n  }, []);\n\n  const onKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      //With this we remove an issue related to focus being outside the document and returning it back using tab\n      if (!focusRingVisible && e.key === 'Tab') {\n        setFocusRingVisible(true);\n      }\n    },\n    [focusRingVisible]\n  );\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (navigationKeys.indexOf(event.key) > -1) {\n        if (!focusRingVisible) {\n          setFocusRingVisible(true);\n        }\n      }\n    },\n    [focusRingVisible, navigationKeys]\n  );\n\n  const focusRingProps = { onFocus, onBlur, onPointerDown, onKeyDown, onTouchEnd, onKeyUp };\n  return [focusRingVisible, focusRingProps];\n}\n\nconst FOCUS_SHIFT_TIMEOUT = 200;\n"],"names":["useState","useRef","useCallback","getElementContainsFunc"],"mappings":"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"}