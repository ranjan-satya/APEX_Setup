define(['exports', 'preact/jsx-runtime', './ButtonSetButton-da51cba1', './ButtonSetIconButton-08612ca6', 'preact/hooks', './useButtonSetContext-dffdaea3', './ButtonSetPositionContext-fd98cc11', './useButtonSetPositionContext-b8534679', './toggleButtonUtils-e01582ef'], (function(t,e,o,n,u,s,a,i,l){"use strict";const c=({isDisabled:t,...a})=>{const{display:c,inputType:d,isDisabled:S,buttonSetValue:r,onCommit:v,...b}=s.useButtonSetContext(),p=i.useButtonSetPositionContext(),x=t??S,f={tooltip:a.label,value:a.value},g="radio"===d,C=u.useCallback((()=>{g&&v?.({previousValue:r,value:[a.value]})}),[r,v,g,a.value]),m=u.useCallback((()=>{if(!g){const t=l.toggleButtonSetItem(a.value,r);v?.({previousValue:r,value:t})}}),[r,v,g,a.value]);return"icons"===c?e.jsx(n.ButtonSetIconButton,{isSelected:B(a.value,r),onToggle:g?C:m,isDisabled:x,...f,...p,...b,children:a.startIcon}):e.jsx(o.ButtonSetButton,{isSelected:B(a.value,r),onToggle:g?C:m,isDisabled:x,...a,...p,...b})};function B(t,e){return!!e&&e?.indexOf(t)>-1}c.displayName="ButtonSetItem",t.ButtonSetItem=c}));
//# sourceMappingURL=ButtonSetItem-e757957a.js.map
