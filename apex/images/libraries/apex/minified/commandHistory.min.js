/*!
 Command History - Undo/Redo facility using command pattern and a history list.
 Copyright (c) 2013, 2020, Oracle and/or its affiliates. All rights reserved.
 */
!function(n,e,o){"use strict";var r=function(){var n=[],r=-1,t=null,c={execute:function(){},undo:function(){},redo:function(){return this.execute()},label:function(){return""}};function u(){if(r<0)throw new Error("Command history nothing to undo")}function i(){if(r>=n.length-1)throw new Error("Command history nothing to redo")}return{clear:function(){n=[],r=-1,o(document).trigger("commandHistoryChange")},execute:function(c){try{e.info("Execute command: "+c.label()),c.execute()}catch(n){return e.error("Exception during execute command.",n),void(t&&t("execute",c,n))}(r+=1)<n.length&&(n.length=r),n.push(c),o(document).trigger("commandHistoryChange")},undo:function(){u();try{e.info("Undo command: "+n[r].label()),n[r].undo()}catch(o){e.error("Exception during undo command.",o),t&&t("undo",n[r],o),n.length=r}r-=1,o(document).trigger("commandHistoryChange")},redo:function(){i(),r+=1;try{e.info("Redo command: "+n[r].label()),n[r].redo()}catch(o){e.error("Exception during redo command.",o),t&&t("redo",n[r],o),n.length=r,r-=1}o(document).trigger("commandHistoryChange")},canUndo:function(){return r>=0},canRedo:function(){return r<n.length-1},undoLabel:function(){return u(),n[r].label()},redoLabel:function(){return i(),n[r+1].label()},setErrorHandler:function(n){t=n},getErrorHandler:function(){return t},baseCommand:function(){return Object.create(c)}}};n.commandHistory=r(),n.commandHistory.newCommandHistory=r}(apex,apex.debug,apex.jQuery);