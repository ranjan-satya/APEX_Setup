/*!
 * Copyright (c) 2022, 2023, Oracle and/or its affiliates.
 */
!function(){"use strict";const e=[],t={number:"number",boolean:"boolean",enum:"enum",string:"string"};class r extends HTMLElement{#e;#t=[];#r=[];constructor(){super(),this.rendered=!1}connectedCallback(){if(this.isConnected){let e;this.#r.length&&(this.rendered&&(e=this.#r),this.#r=[]),"loading"!==document.readyState?(this._render(e),this.rendered=!0):window.addEventListener("DOMContentLoaded",(()=>{this._render(e),this.rendered=!0}))}}disconnectedCallback(){queueMicrotask((()=>{this.isConnected||this._cleanup()}))}attributeChangedCallback(e,r,n){const a=this.constructor,i=a.hyphenToCamelCase(e),s=a.componentMetaData[i];if(s){const o=s.type,u=s.defaultValue;let l;if(r===n)return;if(!1!==s.sync&&o){switch(o){case t.number:l=a.validNumberAttr(n,s.rangeMin,s.rangeMax,!1);break;case t.enum:l=a.validEnumAttr(n,s.enumValues,!1);break;case t.boolean:l=a.validBooleanAttr(n,e,!1);break;default:l=s.validationFn?s.validationFn(n,!1):n}void 0===l&&(l=u),this.#e[i]=l}this.isConnected&&this.rendered?s.reactive&&this.requestRender(e,r,n,i):this.#r.push({attributeName:e,oldValue:r,newValue:n,propertyName:i})}}_render(){}_cleanup(){}requestRender(e,t,r,n){if(void 0!==e){let a=this.#t.filter((t=>t.attributeName===e));a.length?a[0].newValue=r:this.#t.push({attributeName:e,oldValue:t,newValue:r,propertyName:n})}1===this.#t.length&&queueMicrotask((()=>{this._render(this.#t),this.#t=[]}))}_configPrivateState(e){const r=this.constructor;this.#e=e;for(const[n,a]of Object.entries(r.componentMetaData)){a.type=a.type?a.type.toLowerCase():t.string;let i=a.type,s=a.attrName,o=a.defaultValue;if(!1!==a.sync&&e&&(this.#e[n]=o),!1!==a.setterGetter){let e,u;switch(i){case t.number:e=()=>{const e=this.getAttribute(s);let t=r.validNumberAttr(e,a.rangeMin,a.rangeMax,!1);return void 0===t&&(t=o),t},u=e=>{r.validNumberAttr(e,a.rangeMin,a.rangeMax,!0),this.setAttribute(s,e)};break;case t.enum:e=()=>{const e=this.getAttribute(s);let t=r.validEnumAttr(e,a.enumValues,!1);return void 0===t&&(t=o),t},u=e=>{r.validEnumAttr(e,a.enumValues,!0),this.setAttribute(s,e)};break;case t.boolean:e=()=>{const e=this.getAttribute(s);let t=r.validBooleanAttr(e,s,!1);return void 0===t&&(t=o),t},u=e=>{if(!0===e)this.setAttribute(s,"");else if("true"===e||e===s||"false"===e||!1===e)this.setAttribute(s,e);else{if(""!==e&&null!=e)throw new Error("Invalid value");this.removeAttribute(s)}};break;default:e=()=>{const e=this.getAttribute(s),t=a.validationFn;let r=e;return t&&(r=t(e,!1)),null==r&&(r=o),r},u=e=>{const t=a.validationFn;t&&t(e,!0),this.setAttribute(s,e)}}(e||u)&&Object.defineProperty(this,n,{enumerable:!0,configurable:!0,get:e,set:u})}}}_applyInitFunc(t){const r=this.id,n=this.tagName.toLowerCase();return e.forEach((e=>{r!==e.elementId&&n!==e.componentName||(t=e.func(t))})),t}static dataTypes=t;static validNumberAttr(e,t,r,n){const a=Number(e);let i;if(function(e){return!!["string","number"].includes(typeof e)&&!isNaN(e)&&!isNaN(parseFloat(e))}(e)){if((void 0===t||a>=t)&&(void 0===r||a<=r))i=a;else if(n)throw new Error("Out of range number: "+e)}else if(n)throw new Error("Invalid value for number attribute: "+e);return i}static validEnumAttr(e,t,r){let n,a=e?e.toString().toLowerCase():"";if(t.map((e=>e.toLowerCase())).includes(a))n=e;else if(r)throw new Error(`Invalid value for enum attribute, valid values: ${t.join(", ")}`);return n}static validBooleanAttr(e,t,r){let n;if(!0===e||"true"===e||e===t||""===e)n=!0;else if(!1===e||"false"===e||null==e)n=!1;else if(r)throw new Error("Invalid value");return n}static validDateAttr(){}static camelCaseToHyphen(e){return e.split(/(?=[A-Z])/).join("-").toLowerCase()}static hyphenToCamelCase(e){return e.replace(/-([a-z])/gi,(e=>e[1].toUpperCase()))}static _configObservedAttributes(e,t=[]){const r=[...t];for(const[,t]of Object.entries(e)){let e=t.attrName;if(!e)throw new Error("attrName value is undefined in property");r.includes(e)||r.push(e)}return r}static _addHyphenCaseAttrNames(e){for(const[t,r]of Object.entries(e))r.attrName=this.camelCaseToHyphen(t)}static get componentMetaData(){return{}}static _registerInitFunc(t){if(!t.elementId&&!t.componentName||t.elementId&&t.componentName)throw new Error("Either id or componentName must be provided, and not both.");if(!t.func||"function"!=typeof t.func)throw new Error("A function must be provided.");e.push(t)}}apex.WebComponent=r}();