/*!
 Copyright (c) 2020, 2024, Oracle and/or its affiliates.
*/
!function(e,a,t,c){"use strict";const n="u-checkbox",i="disabled",l="click";let s={item_type:"SINGLE_CHECKBOX",enable:function(){this.element.prop(i,!1)},disable:function(){this.element.prop(i,!0)},isDisabled:function(){return!0===this.element.prop(i)},setValue:function(e){e!==this._checkedValue&&e!==this._uncheckedValue&&(c.warn("Checkbox item corrected invalid set value."),e=this._uncheckedValue),this.element.prev().val(e),this.node.checked=e===this._checkedValue},getValue:function(){return a("#"+t.escapeCSS(this.id+"_HIDDENVALUE")).val()},isChanged:function(){return this.node.defaultChecked!==(this.getValue()===this._checkedValue)},setStyleTo:function(){return this.element.parent().find("."+n)},displayValueFor:function(e,a){let c=e===this._checkedValue,i=apex.lang.getMessage("APEX.ITEM_TYPE.CHECKBOX."+(c?"CHECKED":"UNCHECKED")),l="";return a?.labelBy&&(l=" aria-labelledby='"+t.escapeHTMLAttr(a.labelBy)+"'"),a?a.disabled?"<span class='"+n+(c?" is-checked":"")+"'"+l+" role='checkbox' aria-disabled='true' aria-checked='"+(c?"true":"false")+"'><span aria-hidden='true' class='u-vh'>"+i+"</span></span>":a.readonly?"<span class='"+n+(c?" is-checked":"")+"'"+l+" role='checkbox' aria-readonly='true' aria-checked='"+(c?"true":"false")+"'><span aria-hidden='true' class='u-vh'>"+i+"</span></span>":"<div class='apex-item-single-checkbox'><input type='checkbox'"+l+(c?" checked":"")+" tabindex='-1'><span class='"+n+"' aria-hidden='true'></span><span class='u-vh' aria-hidden='true'>"+i+"</span></div>":"<span class='"+n+(c?" is-checked":"")+"' role='img' aria-label='"+i+"'></span><span aria-hidden='true' class='u-vh'>"+i+"</span>"},getInteractionSelector:function(){return"."+n+",.apex-item-single-checkbox"},onInteraction:function(e,a,t,c){let n;if("keydown"!==e.type)return e.type===l?(n=a.getValue(t,c),n=n===this._checkedValue?this._uncheckedValue:this._checkedValue,a.setValue(t,c,n)):"activate"===e.type&&(n=this.getValue(),n=n===this._checkedValue?this._uncheckedValue:this._checkedValue,this.setValue(n)),!1},setLabel:function(e){e!==this._label&&(this._label=e,e?(this.element.parent().find("."+n).replaceWith("<label aria-hidden='true' class='"+n+"' for='"+this.id+"'>"+e+"</label>"),this.element.attr("aria-label",e)):this.element.parent().find("."+n).replaceWith("<span class='"+n+"'></span>"))}};e.addAttachHandler((function(i){a(".apex-item-single-checkbox > input[type='checkbox']",i).each(((i,h)=>{let d,r,u,p=a(h),o=p.parent(),k=h.id,b=a("#"+t.escapeCSS(k+"_HIDDENVALUE")),f=p.attr("value")||"Y",V=p.attr("data-unchecked-value");void 0===V&&(V="N"),d=p.next("label"),d.length||(d=a('label[for="'+t.escapeCSS(k)+'"]'),d.length?d.attr("class",n):d=a('<span class="'+n+'"></span>'),o.append(d),d.attr("aria-hidden","true")),r=b.val(),r!==f&&r!==V&&(r=V,b.val(r),c.warn("Checkbox item corrected invalid initial value.")),p[0].checked!==(r===f)&&(p[0].checked=p[0].defaultChecked=r===f,c.warn("Checkbox item initial checked state adjusted to match value.")),p.on(l,(()=>{b.val(p[0].checked?f:V)})).parent().on("mousedown","span."+n,(e=>{p[0].focus(),p.trigger(l),e.preventDefault()})),e.create(k,s),u=e(k),u._checkedValue=f,u._uncheckedValue=V}))}))}(apex.item,apex.jQuery,apex.util,apex.debug);