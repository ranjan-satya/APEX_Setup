/*!
 Copyright (c) 2021, 2024, Oracle and/or its affiliates.
 */
apex.pwa=apex.pwa||{},function(a,e,s,t,i,n,o,r,l,c,p){"use strict";const w=s("body"),g="a-pwaDialog",u="a-pwaDialog--showInstructions",d="a-pwa-show-instructions",h="a-pwa-hide-instructions",v="a-pwaInstall--available",P="a-pwa-install",b="a-pwaPush--available",A="fullscreen",S="standalone",m="minimal-ui";let f,I;const y="serviceWorker"in navigator,T="http:"===window.location.protocol&&"localhost"!==window.location.hostname&&"127.0.0.1"!==window.location.hostname,D=(e=!0)=>{const s="PushManager"in window,i="Notification"in window,n="string"==typeof a.publicKey,o="nobody"===c.APP_USER;return!(!(y&&s&&i&&n)||o)||(e&&(T&&t.warn("Push notifications are not supported on HTTP pages."),n||t.warn("Push notifications are not supported because the public key is not set for this application."),o&&t.warn("Push notifications are not supported because the current user is not authenticated."),y&&s&&i||t.warn("Push notifications are not supported by this browser.")),!1)},E=async()=>{await a.isInstallable()?(w.addClass(v),o.show(P)):(w.removeClass(v),o.hide(P),setTimeout((()=>{I&&t.info(I)}),2e3))};a.init=({serviceWorkerPath:i})=>{y?(window.addEventListener("load",(async()=>{try{await navigator.serviceWorker.register(i),t.info("Service worker registered.")}catch(a){t.warn("Service worker failed to register.",a)}})),window.addEventListener("beforeinstallprompt",(a=>{a.preventDefault(),f=a,E()})),window.addEventListener("appinstalled",(()=>{f=null,w.removeClass(v),o.hide(P)})),s((()=>{o.add({name:P,label:e.getMessage("PWA.INSTALL"),icon:"fa fa-cloud-download",action:a.openInstallDialog}),o.add({name:d,label:null,icon:null,action:()=>{s("."+g).addClass(u)}}),o.add({name:h,label:null,icon:null,action:()=>{s("."+g).removeClass(u)}}),s(".a-pwaInstall").not(`:has([href="#action$${P}"])`).not(`[href="#action$${P}"]`).on("click",a.openInstallDialog)}))):T?t.warn("Service workers are not supported on HTTP pages."):t.warn("Service workers are not supported."),s((()=>{E(),(async()=>{const t=D(!1);t?w.addClass(b):w.removeClass(b);const i=s(".a-pwaPush--state");if(i.length){let s="NOT_SUPPORTED";t&&(s=await a.hasPushSubscription()?"ON":"OFF"),i.text(e.getMessage(`APEX.FEATURE.CONFIG.${s}`))}})()}))},a.initPushSubscriptionPage=async()=>{const e=await a.hasPushSubscription(),t=p(`P${c.APP_PAGE_ID}_ENABLE_PUSH`);D(!1)?t.setValue(e?"Y":"N"):(s(".a-pwaPush--subscriptionRegion").hide(),s(".a-pwaPush--subscriptionRegion--not-supported").show(),t.setValue("N"))},a.getDisplayMode=()=>i.mq(`(display-mode: ${A})`)?A:i.mq(`(display-mode: ${S})`)?S:i.mq(`(display-mode: ${m})`)?m:"browser",a.isInstallable=async()=>{let a=!1;if(I=null,"BeforeInstallPromptEvent"in window&&(f?a=!0:(I="PWA is not installable. Browser installation criteria are not met or PWA may already be installed.",a=!1)),"getInstalledRelatedApps"in navigator&&window===window.parent){const e=await navigator.getInstalledRelatedApps();e&&e.length&&(I="PWA is not installable due to being already installed on current device.",a=!1)}return"standalone"in navigator&&(navigator.standalone?(I="PWA is not installable due to current page already being in PWA mode.",a=!1):a=!0),window!==window.parent&&(I="PWA is not installable due to current page being an iframe.",a=!1),a},a.getInstallText=async()=>{const s=await a.isInstallable();return await e.loadMessages(["APEX.PWA.%"]),"standalone"in navigator&&s?`<ol class="a-pwaDialog-steps">\n  <li class="a-pwaDialog-step a-pwaDialog-step--1">\n    <svg class="a-pwaDialog-stepImage" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><g><path d="M50.21 19.87H40.8a1.641 1.641 0 0 0 0 3.28h9.41c.75 0 1.36.61 1.36 1.36v31.24c0 .75-.61 1.36-1.36 1.36H13.79c-.75 0-1.36-.61-1.36-1.36V24.5c0-.75.61-1.36 1.36-1.36h9.41a1.641 1.641 0 0 0 0-3.28h-9.41c-2.56 0-4.64 2.08-4.64 4.64v31.24c0 2.56 2.08 4.64 4.64 4.64h36.42c2.56 0 4.64-2.08 4.64-4.64V24.5a4.648 4.648 0 0 0-4.64-4.63z"/><path d="M22.8 15.2c.42 0 .84-.16 1.16-.48l6.4-6.41v31.63a1.641 1.641 0 0 0 3.28 0V8.32l6.4 6.41c.32.32.74.48 1.16.48a1.635 1.635 0 0 0 1.16-2.79l-9.19-9.19c-.33-.33-.75-.49-1.17-.49-.42 0-.84.16-1.17.48l-9.19 9.19a1.63 1.63 0 0 0 0 2.31c.33.32.74.48 1.16.48z"/></g></svg>\n    <p class="a-pwaDialog-stepText">${e.getMessage("APEX.PWA.INSTRUCTIONS.IOS.STEP1")}</p>\n  </li>\n  <li class="a-pwaDialog-step a-pwaDialog-step--2">\n    <svg class="a-pwaDialog-stepImage" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><g><path d="M46.41 30.55H33.46V17.02a1.451 1.451 0 0 0-2.9 0v13.53H17.61a1.451 1.451 0 0 0 0 2.9h12.95v13.53a1.451 1.451 0 0 0 2.9 0V33.45h12.95a1.451 1.451 0 0 0 0-2.9z" stroke-miterlimit="10"/><path d="M54.04 60.67H9.12c-3.65 0-6.62-2.97-6.62-6.62V9.14c0-3.65 2.97-6.62 6.62-6.62h44.92c3.65 0 6.62 2.97 6.62 6.62v44.92c-.01 3.64-2.98 6.61-6.62 6.61zM9.12 5.52c-1.99 0-3.62 1.62-3.62 3.62v44.92c0 1.99 1.62 3.62 3.62 3.62h44.92c1.99 0 3.62-1.62 3.62-3.62V9.14c0-1.99-1.62-3.62-3.62-3.62H9.12z"/></g></svg>\n    <p class="a-pwaDialog-stepText">${e.getMessage("APEX.PWA.INSTRUCTIONS.IOS.STEP2")}</p>\n  </li>\n  <li class="a-pwaDialog-step a-pwaDialog-step--3">\n    <svg class="a-pwaDialog-stepImage" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><g><path d="M32 60.41c-15.9 0-28.83-12.93-28.83-28.83S16.1 2.74 32 2.74s28.83 12.93 28.83 28.83S47.9 60.41 32 60.41zm0-53.97c-13.86 0-25.14 11.28-25.14 25.14S18.14 56.72 32 56.72s25.14-11.28 25.14-25.14S45.86 6.44 32 6.44z"/><path d="M42.5 20.8L26.72 36.57l-5.19-5.18a2.62 2.62 0 0 0-1.8-.71 2.655 2.655 0 0 0-1.94 4.46l7.06 7.06c.48.48 1.14.78 1.87.78.73 0 1.39-.3 1.87-.78l17.65-17.65c.44-.47.71-1.1.71-1.8a2.655 2.655 0 0 0-4.45-1.95z"/></g></svg>\n    <p class="a-pwaDialog-stepText">${e.getMessage("APEX.PWA.INSTRUCTIONS.IOS.STEP3")}</p>\n  </li>\n</ol>`:s?void 0:e.getMessage("APEX.PWA.INSTRUCTIONS")},a.openInstallDialog=async()=>{if(f)f.prompt();else{const i=await a.getInstallText(),o=({manifest:a,scn:t})=>{let o="",l=g,c=[],p=[];a?(o=`<img class="a-pwaDialog-icon" src="${r.escapeHTMLAttr(a.icons[1].src)}?v=${r.escapeHTMLAttr(t)}" alt="${r.escapeHTMLAttr(a.name)}" />\n<div class="a-pwaDialog-about">\n<div class="a-pwaDialog-name">${r.escapeHTML(a.name)}</div>\n<div class="a-pwaDialog-description">${r.escapeHTML(a.description||e.getMessage("APEX.PWA.DIALOG.INTRO"))}</div>\n</div>`,Array.isArray(a.screenshots)&&a.screenshots.length?(p=a.screenshots.map((a=>`<img class="a-pwaDialog-screenshot" src="${r.escapeHTMLAttr(a.src)}?v=${r.escapeHTMLAttr(t)}" alt="${r.escapeHTMLAttr(a.label)}" />`)),c.push(`<button data-action="${d}" class="a-Button a-Button--full a-Button--large a-Button--hot">${r.escapeHTML(e.getMessage("APEX.PWA.DIALOG.SHOW.INSTRUCTIONS"))}</button>`),c.push(`<button data-action="${h}" class="a-Button a-Button--full a-Button--large">${r.escapeHTML(e.getMessage("APEX.PWA.DIALOG.HIDE.INSTRUCTIONS"))}</button>`)):l+=" "+u):(o=`<div class="a-pwaDialog-description">${r.escapeHTML(e.getMessage("APEX.PWA.DIALOG.INTRO"))}</div>`,l+=" "+u);const w=`<div class="a-pwaDialog-header">${o}</div>\n<div class="a-pwaDialog-instructions">${i}</div>\n<div class="a-pwaDialog-screenshots">${p.join("")}</div>\n<div class="a-pwaDialog-actions">${c.join("")}</div>`;n.showDialog(w,{id:g,title:e.getMessage("APEX.PWA.DIALOG.TITLE"),unsafe:!1,width:"auto",okButton:!1,dialogClass:l,open:()=>{s(".ui-widget-overlay").on("click",(()=>{s("#"+g).dialog("close")}))}})};try{const a=document.querySelector("link[rel=manifest]"),e=await fetch(a.href),s=await e.json();o({manifest:s,scn:a.href.split("?v=")[1]})}catch(a){t.warn(`Fetching manifest error: ${a.message}`),o({})}}},a.cleanup=({serviceWorkerPath:a})=>{if(y&&navigator.serviceWorker.getRegistrations().then((e=>{for(let s of e){const e=new URL(s.active.scriptURL).pathname;a.includes(e)&&s.unregister()}})).catch(t.warn),"caches"in window){const a="APEX-CORE-",e="APEX-APP-";window.caches.keys().then((s=>Promise.all(s.map((s=>s.startsWith(a)&&s.split(a)[1]!==c.APEX_VERSION||s.startsWith(e)&&s.split("-")[2]===c.APP_ID?window.caches.delete(s):void 0))))).catch(t.warn)}},a.getPushSubscription=async()=>{if(!D())return;const a=await navigator.serviceWorker.ready;if(a){const e=await a.pushManager.getSubscription();if(e)return e}},a.hasPushSubscription=async()=>{if(!D())return!1;const e=await a.getPushSubscription();if(e&&a.pushSubscriptions&&a.pushSubscriptions.length){const s=await(async a=>{const e=(new TextEncoder).encode(a),s=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(s)).map((a=>a.toString(16).padStart(2,"0"))).join("")})(JSON.stringify(e.toJSON()));return a.pushSubscriptions.some((a=>a.toLowerCase()===s.toLowerCase()))}return!1},a.subscribePushNotifications=async()=>{if(!D())return;const s=r.showSpinner(),i=await navigator.serviceWorker.ready;let o=await a.getPushSubscription();if(!o)try{o=await i.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:a.publicKey})}catch(a){t.error(`Push subscription error: ${a.message}`);const s="APEX.PWA.PUSH.SUBSCRIPTION_FAILED";await e.loadMessages([s]),n.clearErrors(),n.showErrors([{type:"error",location:"page",message:e.getMessage(s),unsafe:!1}])}o&&await l.widget("pwa",{x01:"subscribe_push_notifications",x02:JSON.stringify(o.toJSON())}),s.remove()},a.unsubscribePushNotifications=async()=>{if(!D())return;const e=r.showSpinner(),s=await a.getPushSubscription();s&&(await l.widget("pwa",{x01:"unsubscribe_push_notifications",x02:JSON.stringify(s.toJSON())}),await s.unsubscribe()),e.remove()}}(apex.pwa,apex.lang,apex.jQuery,apex.debug,apex.theme,apex.message,apex.actions,apex.util,apex.server,apex.env,apex.item);