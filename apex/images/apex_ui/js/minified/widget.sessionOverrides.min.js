/*!
 Copyright (c) 2021, 2024, Oracle and/or its affiliates.
*/
!function(e,t,a,r,s,o){"use strict";const i="SessionOverridesPE",p="SessionOverridesEnabled",l="a-SessionOverrides-switch",n="a-SessionOverrides-value";let d,c,g;const v=()=>{const e=(new Date).getTimezoneOffset();return`${Math.sign(e)>0?"-":"+"}${String(parseInt(Math.abs(e)/60,10)).padStart(2,"0")}:${String(Math.abs(e)%60).padStart(2,"0")}`};e.widget("apex.sessionOverrides",{_create(){g=this.options.builderSessionId,(t=>{for(const a of t)a.endsWith(".css")&&0===e(`link[href*='${a}']`).length&&e(document.createElement("link")).attr({rel:"stylesheet",type:"text/css",href:s.APEX_FILES+a}).appendTo("head"),a.endsWith(".js")&&0===e(`script[src*='${a}']`).length&&e(document.createElement("script")).attr({src:s.APEX_FILES+a}).appendTo("head")})(["apex_ui/js/widget.propertyEditor.js","apex_ui/css/DevTools.css"]),(async()=>{await t.loadMessages(["DEVELOPER_TOOLBAR%"]),d=e('<div id="SessionOverridesDialog"></div>'),c=apex.widget.waitPopup(),this.element.append(d),d.append(`\n                <div class="${p}Container">\n                    <div class="a-Property">\n                        <div class="a-Property-labelContainer" style="flex-grow: 1;">\n                            <span id="${p}-label" class="a-Property-label">${t.getMessage("DEVELOPER_TOOLBAR_SESSION_OVERRIDES_ENABLE")}</span>\n                        </div>\n                        <div class="a-Property-fieldContainer" style="width: auto;">\n                            <label for="${p}" class="a-Switch" aria-labelledby="${p}-label">\n                                <input type="checkbox" role="switch" id="${p}" class="${l}" value="Y">\n                                <span class="a-Switch-toggle"></span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div id="${i}"></div>`);let y=await(async()=>{try{return await a.process("developerToolbar",{p_flow_id:4e3,p_flow_step_id:0,p_instance:g,x01:"getSessionOverrides",x02:s.APP_ID,x07:apex.env.APP_SESSION,x08:e(apex.gPageContext$).find("html").attr("lang"),x09:v()})}catch(e){r(e),apex.devToolbar.notification(d,t.getMessage("DEVELOPER_TOOLBAR_SESSION_OVERRIDES_ERROR_LOAD"),"danger")}})();var f;f=y.types,e.apex.propertyEditor.addPropertyType(f.session_overrides_text,{render(e,t,a){e.markup(`\n                    <div class="a-Property-fieldContainer">\n                    <label class="a-Switch">\n                        <input type="checkbox" role="switch" id="${o.escapeHTMLAttr(t)}_switch" class="${l}" data-property-id="${o.escapeHTMLAttr(a.propertyName)}" value="Y" aria-labelledby="${o.escapeHTMLAttr(t)}_label">\n                        <span class="a-Switch-toggle"></span>\n                    </label>\n                    <input id="${o.escapeHTMLAttr(t)}" type="text" value="${o.escapeHTMLAttr(a.value)}" class="${n} a-Property-field a-Property-field--text margin-left-sm" maxlength="4000" data-property-id="${o.escapeHTMLAttr(a.propertyName)}">\n                    </div>`)}}),e.apex.propertyEditor.addPropertyType(f.session_overrides_textarea,{render(e,t,a){e.markup(`\n                    <div class="a-Property-fieldContainer">\n                    <label class="a-Switch">\n                        <input type="checkbox" role="switch" id="${o.escapeHTMLAttr(t)}_switch" class="${l}" data-property-id="${o.escapeHTMLAttr(a.propertyName)}" value="Y"  aria-labelledby="${o.escapeHTMLAttr(t)}_label">\n                        <span class="a-Switch-toggle"></span>\n                    </label>\n                    <textarea id="${o.escapeHTMLAttr(t)}" class="${n} a-Property-field a-Property-field--text margin-left-sm" maxlength="4000" data-property-id="${o.escapeHTMLAttr(a.propertyName)}">${a.value}</textarea>\n                    </div>`)}}),e.apex.propertyEditor.addPropertyType(f.session_overrides_select,{render(e,t,a){let r="";a.metaData.entries&&(r=a.metaData.entries.map((e=>`<option value="${o.escapeHTMLAttr(e.r)}">${o.escapeHTML(e.d)}</option>`)).join("")),e.markup(`\n                    <div class="a-Property-fieldContainer">\n                    <label class="a-Switch">\n                        <input type="checkbox" role="switch" id="${o.escapeHTMLAttr(t)}_switch" class="${l}" data-property-id="${o.escapeHTMLAttr(a.propertyName)}" value="Y" aria-labelledby="${o.escapeHTMLAttr(t)}_label">\n                        <span class="a-Switch-toggle"></span>\n                    </label>\n                    <select id="${o.escapeHTMLAttr(t)}" size="1" class="${n} a-Property-field a-Property-field--select margin-left-sm" data-property-id="${o.escapeHTMLAttr(a.propertyName)}">\n                        ${r}\n                    </select>\n                    </div>`)}}),d.dialog({autoOpen:!0,title:t.getMessage("DEVELOPER_TOOLBAR_SESSION_OVERRIDES"),dialogClass:"a-DevTools",resizable:!0,draggable:!0,width:500,height:650,closeOnEscape:!0,open(){apex.navigation.beginFreezeScroll(),c&&(c.remove(),c=null),(async e=>{try{const t=e.groups.map((e=>{const t=e.props.map((e=>({propertyName:e.id,value:"",errors:[],warnings:[],metaData:{type:e.type,prompt:e.name,promptContainsHtml:!0,entries:e.entries}})));return{displayGroupId:e.id,displayGroupTitle:e.name,properties:t}}));d.find(`#${i}`).propertyEditor(),d.find(`#${i}`).propertyEditor("option","data",{propertySet:t}),d.find(`#${p}`).prop("checked",e.enabled);for(const t of e.groups)for(const e of t.props){e.switch&&d.find(`.${l}[data-property-id="${o.escapeHTMLAttr(e.id)}"]`).prop("checked",e.switch);const t=d.find(`.${n}[data-property-id="${o.escapeHTMLAttr(e.id)}"]`);e.default&&t.data("default",e.default),e.default&&!e.value&&t.val(e.default),e.value&&t.val(e.value),e.placeholder&&t.attr("placeholder",e.placeholder)}}catch(e){r(e),apex.devToolbar.notification(d,t.getMessage("DEVELOPER_TOOLBAR_SESSION_OVERRIDES_ERROR_LOAD"),"danger")}})(y)},close(){apex.navigation.endFreezeScroll();e("#apexDevToolbarQuickEdit").add("#apexDevCustomize").removeClass("is-disabled").removeAttr("aria-disabled")},buttons:[{id:"SessionOverridesReset",text:t.getMessage("UTR.RESET"),class:"a-Button a-DevTools-toolbar-item a-DevTools-toolbar-item--left a-DevTools-toolbar-button",click(){d.find(`#${p}`).prop("checked",!1);for(const e of y.groups)for(const t of e.props)d.find(`.${l}[data-property-id="${o.escapeHTMLAttr(t.id)}"]`).prop("checked",!1),d.find(`.${n}[data-property-id="${o.escapeHTMLAttr(t.id)}"]`).val("")}},{id:"SessionOverridesClose",text:t.getMessage("APEX.DIALOG.CANCEL"),class:"a-Button a-DevTools-toolbar-item a-DevTools-toolbar-button a-DevTools-toolbar-item--push",click(){d.dialog("close")}},{id:"SessionOverridesSave",text:t.getMessage("APEX.DIALOG.SAVE"),class:"a-Button a-Button--hot a-DevTools-toolbar-item a-DevTools-toolbar-button",click(){const i=[],c=[],f=[];for(const e of y.groups)for(const t of e.props)i.push(t.id),c.push(String(d.find(`.${l}[data-property-id="${o.escapeHTMLAttr(t.id)}"]`).prop("checked"))),f.push(d.find(`.${n}[data-property-id="${o.escapeHTMLAttr(t.id)}"]`).val()||"");a.process("developerToolbar",{p_flow_id:4e3,p_flow_step_id:0,p_instance:g,x01:"setSessionOverrides",x02:s.APP_ID,x06:String(d.find(`#${p}`).prop("checked")),x07:apex.env.APP_SESSION,x08:e(apex.gPageContext$).find("html").attr("lang"),x09:v(),f01:i,f02:c,f03:f},{success(){apex.widget.waitPopup(),location.reload()},error(e){r(e),apex.devToolbar.notification(d,t.getMessage("DEVELOPER_TOOLBAR_SESSION_OVERRIDES_ERROR_SAVE"),"danger")}})}}]}),d.on("click",`.${l}[data-property-id]`,(()=>{d.find(`.${l}[data-property-id]:checked`).length>0&&!d.find(`#${p}`).prop("checked")&&d.find(`#${p}`).prop("checked",!0),0===d.find(`.${l}[data-property-id]:checked`).length&&d.find(`#${p}`).prop("checked")&&d.find(`#${p}`).prop("checked",!1)}))})()},toggle:async function(){d.dialog("isOpen")?d.dialog("close"):d.dialog("open")}})}(apex.jQuery,apex.lang,apex.server,apex.debug,apex.env,apex.util);