/*!
 * Copyright (c) 2022, Oracle and/or its affiliates.
 */
let objectBrowserWizard={};!function(e,n,r,t,o){"use strict";n.initIG=function(n){const r=e.apex.interactiveGrid.copyDefaultToolbar(),t=r.toolbarFind("actions3");return t.controls.unshift({type:"BUTTON",iconOnly:!0,icon:"icon-up-chevron",action:"selection-move-up"}),t.controls.unshift({type:"BUTTON",iconOnly:!0,icon:"icon-down-chevron",action:"selection-move-down"}),n.toolbarData=r,n.initActions=function(n){n.add([{name:"selection-move-up",labelKey:"OB.MOVE_UP",shortcut:"Alt+Up",action:function(r){let t,o=null,a="keydown"===r.type,c=e(n.context).interactiveGrid("getViews").grid,p=c.view$,i=c.model,s=p.grid("getSelection"),u=p.grid("getSelectedRecords");if(s[0].prev().length&&(t=s[0].prev().prev(),t.length&&(o=p.grid("getRecords",[t])[0]),i.moveRecords(u,null,o),p.grid("setSelectedRecords",u,a)),a)return!0}},{name:"selection-move-down",labelKey:"OB.MOVE_DOWN",shortcut:"Alt+Down",action:function(r){let t,o=null,a="keydown"===r.type,c=e(n.context).interactiveGrid("getViews").grid,p=c.view$,i=c.model,s=p.grid("getSelection"),u=p.grid("getSelectedRecords");if(t=s[s.length-1].next(),t.length&&(o=p.grid("getRecords",[t])[0],i.moveRecords(u,null,o),p.grid("setSelectedRecords",u,a)),a)return!0}}]),n.remove("single-row-view"),n.remove("row-duplicate"),n.remove("row-refresh"),n.remove("row-revert"),n.lookup("row-add-row").label=o.getMessage("OB.ACTION_ADD_COL"),n.lookup("row-delete").label=o.getMessage("OB.ACTION_DEL_COL")},n.defaultModelOptions={sequenceField:"SORT_ORDER",sequenceStep:10},n},n.getIGRowCount=function(e){return t(e).widget().interactiveGrid("getCurrentView").model.getTotalRecords()},n.enquote=function(e){return'"'+e+'"'},n.getIndexDDL=function(e,r,t,o,a,c,p,i,s,u){let d,m;switch(i){case"N":d="";break;case"T":d="\nindextype is ctxsys.context";break;case"S":d=`\nindextype is ${"Y"===s?"mdsys.spatial_index_v2":"mdsys.spatial_index"} ${"Y"===u?"\nparameters('layer_gtype=point')":""}`}return m=`create ${"Y"===t&&"N"===i?"unique ":""}index "${r}"\non "${e}" ( "${o}"${""!==a&&"N"===i?","+n.enquote(a):""}${""!==c&&"N"===i?","+n.enquote(c):""}${""!==p&&"N"===i?","+n.enquote(p):""} )${d};`,m},n.branchToRegisterColumn=function(e,n){r.submit({request:"REGISTER_COLUMN",set:{[e]:n},showWait:!0})},n.getSequenceDDL=function(e,n,r,t,o,a,c){return`create sequence "${e}"${""!==n?"\nstart with "+n:""}${""!==r?"\nincrement by "+r:""}\n${0===c||""===c?"nocache":"cache "+c}${""!==t?"\nminvalue "+t:""}${""!==o?"\nmaxvalue "+o:""}\n${"Y"===a?"cycle":"nocycle"};`},n.getTypeDDL=function(e,n,r,t,o,a,c,p){let i,s,u="";switch("number"!==t&&"decimal"!==t&&"float"!==t||(""!==c&&""!==p?u=`(${c},${p})`:""!==c&&""===p&&(u=`(${c})`)),t){case"nest":i=`"${o}"`;break;case"raw":case"varchar2":case"char":i=`${t}(${a})`;break;case"number":case"decimal":case"float":i=`${t}${u}`;break;default:i=t}return s=`create type "${e}" as\n${"V"===n?"varray("+r+") of":"table of"} ${i};`,s},n.getPackageSpec=function(e,n){return`create or replace package "${e}" as\n${"Y"===n?"\n--==============================================================================\n-- comments about procedure\n--==============================================================================\nprocedure process_emp_data (\n    p_empno      in out number,\n    p_ename      in     varchar2,\n    p_job        in     varchar2,\n    p_mgr        in     number,\n    p_hiredate   in     date,\n    p_sal        in     number,\n    p_comm       in     number,\n    p_deptno     in     number,\n    p_row_status in     varchar2 );\n\n--==============================================================================\n-- comments about function\n--==============================================================================\nfunction get_ename (\n    p_empno in number )\nreturn varchar2;\n":""}\nend "${e}";\n/`},n.getPackageBody=function(e,n){return`create or replace package body "${e}" as\n${"Y"===n?"\n--==============================================================================\n-- Public API, see specification\n--==============================================================================\nprocedure process_emp_data (\n    p_empno      in out number,\n    p_ename      in     varchar2,\n    p_job        in     varchar2,\n    p_mgr        in     number,\n    p_hiredate   in     date,\n    p_sal        in     number,\n    p_comm       in     number,\n    p_deptno     in     number,\n    p_row_status in     varchar2 )\nis\nbegin\n    apex_debug.enter(\n        'process_emp_data' ,\n        'p_empno'          , p_empno,\n        'p_empno'          , p_empno,\n        'p_job'            , p_job,\n        'p_mgr'            , p_mgr,\n        'p_hiredate'       , p_hiredate,\n        'p_sal'            , p_sal,\n        'p_comm'           , p_comm,\n        'p_deptno'         , p_deptno,\n        'p_row_status'     , p_row_status );\n\n    -- enter the procedure code here\n\nend process_emp_data;\n\n--==============================================================================\n-- Public API, see specification\n--==============================================================================\nfunction get_ename (\n    p_empno in number )\nreturn varchar2\nis\n    l_ename varchar2(255);\nbegin\n    apex_debug.enter(\n        'get_ename' ,\n        'p_empno'   , p_empno );\n\n    -- enter the function code here\n    /*\n    select ename\n      into l_ename\n      from emp\n     where empno = p_empno;\n    */\n    return l_ename;\nexception\n    when no_data_found then\n        apex_debug.warn(\n            p_message => 'Employee not found. p_empno %s, sqlerrm %s',\n            p0        => p_empno,\n            p1        => sqlerrm );\n        raise;\nend get_ename;\n":""}\nend "${e}";\n/`},n.getFunctionDDL=function(e,n){return"Y"===n?`create or replace function "${e}" (\n    p_empno in number )\nreturn varchar2\nas\n    l_ename varchar2(255);\nbegin\n    apex_debug.enter(\n        '${e}' ,\n        'p_empno'   , p_empno );\n\n    -- enter the function code here\n    /*\n    select ename\n      into l_ename\n      from emp\n     where empno = p_empno;\n    */\n    return l_ename;\nexception\n    when no_data_found then\n        apex_debug.warn(\n            p_message => 'Employee not found. p_empno %s, sqlerrm %s',\n            p0        => p_empno,\n            p1        => sqlerrm );\n        raise;\nend "${e}";\n/`:`create or replace function "${e}"\nreturn varchar2\nas\nbegin\n    return null;\nend "${e}";\n/`},n.getProcedureDDL=function(e,n){return"Y"===n?`create or replace procedure "${e}" (\n    p_empno      in out number,\n    p_ename      in     varchar2,\n    p_job        in     varchar2,\n    p_mgr        in     number,\n    p_hiredate   in     date,\n    p_sal        in     number,\n    p_comm       in     number,\n    p_deptno     in     number,\n    p_row_status in     varchar2 )\nas\nbegin\n    apex_debug.enter(\n        '${e}' ,\n        'p_empno'          , p_empno,\n        'p_empno'          , p_empno,\n        'p_job'            , p_job,\n        'p_mgr'            , p_mgr,\n        'p_hiredate'       , p_hiredate,\n        'p_sal'            , p_sal,\n        'p_comm'           , p_comm,\n        'p_deptno'         , p_deptno,\n        'p_row_status'     , p_row_status );\n\n    -- enter the procedure code here\nend "${e}";\n/`:`create or replace procedure "${e}"\nas\nbegin\n    null;\nend "${e}";\n/`},n.generateCode=function(e,r,t){let o;switch(r){case"PACKAGE":o=n.getPackageSpec(e,t);break;case"PACKAGE BODY":o=n.getPackageBody(e,t);break;case"FUNCTION":o=n.getFunctionDDL(e,t);break;case"PROCEDURE":o=n.getProcedureDDL(e,t)}return o},n.getDBLinkDDL=function(e,n,r,t,o,a,c){let p;return p=`create database link "${e}"\nconnect to "${n}" identified by "${r}"\nusing '(description =\n(address_list =\n  (address = (protocol = tcp)(host = ${t})(port = ${o}))\n)\n(connect_data =\n     (${a} = ${c})\n))';`,p},n.getSynonymDDL=function(e,n,r,t,o,a){return`create synonym "${e}" for ${"LOCAL"===n?`"${r}"."${t}"`:`"${o}"@"${a}"`};`},n.getTriggerSQL=function(e,n,r){return`create or replace trigger "${n}"\n${r}\ninsert or update or delete on "${e}"\nfor each row\nbegin\n    null;\nend;\n/`}}(apex.jQuery,objectBrowserWizard,apex.page,apex.region,apex.lang);